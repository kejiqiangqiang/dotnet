<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EFOS.Data</name>
    </assembly>
    <members>
        <member name="T:EFOS.Action.ActionResult">
            <summary>
            ActionResult
            </summary>
        </member>
        <member name="P:EFOS.Action.ActionResult.Key">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:EFOS.Action.ActionResult.IsSuccess">
            <summary>
            是否调用成功
            </summary>
        </member>
        <member name="P:EFOS.Action.ActionResult.Data">
            <summary>
            成功后的json数据
            </summary>
        </member>
        <member name="P:EFOS.Action.ActionResult.ErrorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:EFOS.Action.ActionResult.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:EFOS.Action.IAction">
            <summary>
            访问Actin接口
            </summary>
        </member>
        <member name="M:EFOS.Action.IAction.ValidateSession(System.String)">
            <summary>
            验证Session
            </summary>
            <param name="assemblyMethodKey">方法的Key如：HYD.Business.EMS_UserInfoBLL.Login</param>
            <returns>是否验证成功</returns>
        </member>
        <member name="M:EFOS.Action.IAction.OnError(System.Exception,System.String)">
            <summary>
            调用出错
            </summary>
            <param name="ex">错误</param>
            <param name="assemblyMethodKey">调用的方法</param>
        </member>
        <member name="T:EFOS.Action.MethodParams">
            <summary>
            业务方法参数
            </summary>
        </member>
        <member name="M:EFOS.Action.MethodParams.#ctor">
            <summary>
            业务方法参数
            </summary>
        </member>
        <member name="P:EFOS.Action.MethodParams.MethodName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="P:EFOS.Action.MethodParams.ControlID">
            <summary>
            控件编号
            </summary>
        </member>
        <member name="P:EFOS.Action.MethodParams.Parameters">
            <summary>
            查询参数集合
            </summary>
        </member>
        <member name="P:EFOS.Action.MethodParams.Item(System.String)">
            <summary>
            参数索引
            </summary>
            <param name="ParamsName">参数名称</param>
            <returns>返回参数值</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_VipBriefCommentDao">
            <summary>
            Acc_VipBriefComment数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VipBriefCommentDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">评论、回复编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VipBriefCommentDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_VipBriefComment)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VipBriefCommentDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">评论、回复编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VipBriefCommentDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">评论、回复编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VipBriefCommentDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_VIPBriefDao">
            <summary>
            Acc_VIPBrief数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VIPBriefDao.GetModel(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="BlockCode">BlockCode</param>
            <param name="BeginTime">BeginTime</param>
            <param name="EndTime">EndTime</param>
            <param name="UserID">UserID</param>
            <param name="ParagraphType">段落类型（当前有1=重要事件通告，2=调试部署进度，3=培训，4=运行维护，5=开发进度）</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VIPBriefDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_VIPBrief)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VIPBriefDao.Delete(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="BlockCode">BlockCode</param>
            <param name="BeginTime">BeginTime</param>
            <param name="EndTime">EndTime</param>
            <param name="UserID">UserID</param>
            <param name="ParagraphType">段落类型（当前有1=重要事件通告，2=调试部署进度，3=培训，4=运行维护，5=开发进度）</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VIPBriefDao.IsExists(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="BlockCode">BlockCode</param>
            <param name="BeginTime">BeginTime</param>
            <param name="EndTime">EndTime</param>
            <param name="UserID">UserID</param>
            <param name="ParagraphType">段落类型（当前有1=重要事件通告，2=调试部署进度，3=培训，4=运行维护，5=开发进度）</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_VIPBriefDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_HisAlarmCountDao">
            <summary>
            项目共用告警数据统计，历史数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisAlarmCountDao.GetModel(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="AlarmDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisAlarmCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_HisAlarmCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisAlarmCountDao.Delete(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="AlarmDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisAlarmCountDao.IsExists(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="AlarmDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisAlarmCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_HisDeviceCountDao">
            <summary>
            项目共用设备数据,及其启停、故障、维保状态统计数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisDeviceCountDao.GetModel(System.DateTime,System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            获取实体
            </summary>
            <param name="StaDate">日期，每天一次</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="DataCode">数据标识，为0表示该类型设备总数</param>
            <param name="Value">值，数据标识值</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisDeviceCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_HisDeviceCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisDeviceCountDao.Delete(System.DateTime,System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            删除实体
            </summary>
            <param name="StaDate">日期，每天一次</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="DataCode">数据标识，为0表示该类型设备总数</param>
            <param name="Value">值，数据标识值</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisDeviceCountDao.IsExists(System.DateTime,System.Int32,System.Int32,System.Int32,System.Decimal)">
            <summary>
            是否存在实体
            </summary>
            <param name="StaDate">日期，每天一次</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="DataCode">数据标识，为0表示该类型设备总数</param>
            <param name="Value">值，数据标识值</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisDeviceCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_HisEnergyCountDao">
            <summary>
            项目共用计算点能耗数据统计，历史数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEnergyCountDao.GetModel(System.DateTime,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            获取实体
            </summary>
            <param name="CollectDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">数据标识，水、电</param>
            <param name="PointType">计算点类型，总量、分项、公共</param>
            <param name="PointCode">计算点编码</param>
            <param name="IsAvg">是否为历史平均值，0否，1是</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEnergyCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_HisEnergyCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEnergyCountDao.Delete(System.DateTime,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            删除实体
            </summary>
            <param name="CollectDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">数据标识，水、电</param>
            <param name="PointType">计算点类型，总量、分项、公共</param>
            <param name="PointCode">计算点编码</param>
            <param name="IsAvg">是否为历史平均值，0否，1是</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEnergyCountDao.IsExists(System.DateTime,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            是否存在实体
            </summary>
            <param name="CollectDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">数据标识，水、电</param>
            <param name="PointType">计算点类型，总量、分项、公共</param>
            <param name="PointCode">计算点编码</param>
            <param name="IsAvg">是否为历史平均值，0否，1是</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEnergyCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_HisEventCountDao">
            <summary>
            项目共用异常操作数据统计，历史数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEventCountDao.GetModel(System.DateTime,System.Int32,System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="HappenDate">发生时间,一天一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="AlarmType">事件类型</param>
            <param name="ContextText">事件名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEventCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_HisEventCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEventCountDao.Delete(System.DateTime,System.Int32,System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="HappenDate">发生时间,一天一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="AlarmType">事件类型</param>
            <param name="ContextText">事件名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEventCountDao.IsExists(System.DateTime,System.Int32,System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="HappenDate">发生时间,一天一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="AlarmType">事件类型</param>
            <param name="ContextText">事件名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisEventCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_HisProjectIndexDao">
            <summary>
            项目共用综合指数，当天数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisProjectIndexDao.GetModel(System.DateTime,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="StaDate">统计时间，一天一个点</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisProjectIndexDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_HisProjectIndex)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisProjectIndexDao.Delete(System.DateTime,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="StaDate">统计时间，一天一个点</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisProjectIndexDao.IsExists(System.DateTime,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="StaDate">统计时间，一天一个点</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisProjectIndexDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_HisRoomAlarmCountDao">
            <summary>
            项目共用房间异常统计数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisRoomAlarmCountDao.GetModel(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="AlarmDate">告警时间,一天一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="RoomID">房间编号</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisRoomAlarmCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_HisRoomAlarmCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisRoomAlarmCountDao.Delete(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="AlarmDate">告警时间,一天一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="RoomID">房间编号</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisRoomAlarmCountDao.IsExists(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="AlarmDate">告警时间,一天一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="RoomID">房间编号</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_HisRoomAlarmCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_InAlarmCountDao">
            <summary>
            项目共用告警数据统计，历史数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmCountDao.GetModel(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="AlarmDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_InAlarmCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmCountDao.Delete(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="AlarmDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmCountDao.IsExists(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="AlarmDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="AlarmType">告警类型</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_InAlarmTaskCountDao">
            <summary>
            项目告警任务处理情况，有效率、及时率数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmTaskCountDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmTaskCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_InAlarmTaskCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmTaskCountDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmTaskCountDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InAlarmTaskCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_InDeviceCountDao">
            <summary>
            项目共用设备数据,及其启停、故障、维保状态统计数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InDeviceCountDao.GetModel(System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="DataCode">数据标识，为0表示该类型设备总数</param>
            <param name="Value">值，数据标识值</param>
            <param name="StaDate">StaDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InDeviceCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_InDeviceCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InDeviceCountDao.Delete(System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="DataCode">数据标识，为0表示该类型设备总数</param>
            <param name="Value">值，数据标识值</param>
            <param name="StaDate">StaDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InDeviceCountDao.IsExists(System.Int32,System.Int32,System.Int32,System.Decimal,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceType">设备类型</param>
            <param name="DataCode">数据标识，为0表示该类型设备总数</param>
            <param name="Value">值，数据标识值</param>
            <param name="StaDate">StaDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InDeviceCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_InEnergyCountDao">
            <summary>
            项目共用计算点能耗数据统计，今日数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEnergyCountDao.GetModel(System.DateTime,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            获取实体
            </summary>
            <param name="CollectDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">数据标识，水、电</param>
            <param name="PointType">计算点类型，总量、分项、公共</param>
            <param name="PointCode">计算点编码</param>
            <param name="IsAvg">是否为历史平均值，0否，1是</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEnergyCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_InEnergyCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEnergyCountDao.Delete(System.DateTime,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            删除实体
            </summary>
            <param name="CollectDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">数据标识，水、电</param>
            <param name="PointType">计算点类型，总量、分项、公共</param>
            <param name="PointCode">计算点编码</param>
            <param name="IsAvg">是否为历史平均值，0否，1是</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEnergyCountDao.IsExists(System.DateTime,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            是否存在实体
            </summary>
            <param name="CollectDate">统计时间,一小时一个点</param>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">数据标识，水、电</param>
            <param name="PointType">计算点类型，总量、分项、公共</param>
            <param name="PointCode">计算点编码</param>
            <param name="IsAvg">是否为历史平均值，0否，1是</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEnergyCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_InEventCountDao">
            <summary>
            项目共用异常操作数据统计，实时数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEventCountDao.GetModel(System.Int32,System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="AlarmType">事件类型</param>
            <param name="ContextText">事件名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEventCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_InEventCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEventCountDao.Delete(System.Int32,System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="AlarmType">事件类型</param>
            <param name="ContextText">事件名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEventCountDao.IsExists(System.Int32,System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="AlarmType">事件类型</param>
            <param name="ContextText">事件名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InEventCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_InProjectIndexDao">
            <summary>
            项目共用综合指数，当天数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InProjectIndexDao.GetModel(System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StaDate">StaDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InProjectIndexDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_InProjectIndex)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InProjectIndexDao.Delete(System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StaDate">StaDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InProjectIndexDao.IsExists(System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StaDate">StaDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InProjectIndexDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.ComData_InRoomAlarmCountDao">
            <summary>
            项目共用房间异常统计数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InRoomAlarmCountDao.GetModel(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="RoomID">房间编号</param>
            <param name="AlarmType">告警类型</param>
            <param name="AlarmDate">AlarmDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InRoomAlarmCountDao.SaveOrUpdate(EFOS.Data.Apply.Model.ComData_InRoomAlarmCount)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InRoomAlarmCountDao.Delete(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="RoomID">房间编号</param>
            <param name="AlarmType">告警类型</param>
            <param name="AlarmDate">AlarmDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InRoomAlarmCountDao.IsExists(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="RoomID">房间编号</param>
            <param name="AlarmType">告警类型</param>
            <param name="AlarmDate">AlarmDate</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.ComData_InRoomAlarmCountDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_AnnouncementDao">
            <summary>
            公告记录数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_AnnouncementDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">序号，自增长</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_AnnouncementDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_Announcement)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_AnnouncementDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">序号，自增长</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_AnnouncementDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">序号，自增长</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_AnnouncementDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_FaceAttendanceClientDao">
            <summary>
            人脸考勤客户端数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_FaceAttendanceClientDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="ClientCode">客户端标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_FaceAttendanceClientDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_FaceAttendanceClient)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_FaceAttendanceClientDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="ClientCode">客户端标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_FaceAttendanceClientDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="ClientCode">客户端标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_FaceAttendanceClientDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_ProductPlanDao">
            <summary>
            计划产量数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProductPlanDao.GetModel(System.Int32,System.DateTime,System.String,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="Date">日期</param>
            <param name="PointCode">工艺或设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProductPlanDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_ProductPlan)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProductPlanDao.Delete(System.Int32,System.DateTime,System.String,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="Date">日期</param>
            <param name="PointCode">工艺或设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProductPlanDao.IsExists(System.Int32,System.DateTime,System.String,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="Date">日期</param>
            <param name="PointCode">工艺或设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProductPlanDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_ProjectOwnerPageDao">
            <summary>
            项目对应的业主页面功能数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectOwnerPageDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PageCode">业主页面功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectOwnerPageDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_ProjectOwnerPage)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectOwnerPageDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PageCode">业主页面功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectOwnerPageDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PageCode">业主页面功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectOwnerPageDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_ShiftDao">
            <summary>
            Common_Shift数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ShiftDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">ID</param>
            <param name="ProjectCode">ProjectCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ShiftDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_Shift)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ShiftDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">ID</param>
            <param name="ProjectCode">ProjectCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ShiftDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">ID</param>
            <param name="ProjectCode">ProjectCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ShiftDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_WelcomeVipDao">
            <summary>
            大屏欢迎词数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WelcomeVipDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WelcomeVipDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_WelcomeVip)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WelcomeVipDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WelcomeVipDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WelcomeVipDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_WorkCycleDao">
            <summary>
            工业PCB排班数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WorkCycleDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="ID">自增长编号</param>
            <param name="Date">Date</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WorkCycleDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_WorkCycle)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WorkCycleDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="ID">自增长编号</param>
            <param name="Date">Date</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WorkCycleDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="ID">自增长编号</param>
            <param name="Date">Date</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_WorkCycleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_CommandDao">
            <summary>
            控制指令数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="CommandID">CommandID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_Command)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="CommandID">CommandID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="CommandID">CommandID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_CommandSetDao">
            <summary>
            指令集数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="SetID">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_CommandSet)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="SetID">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="SetID">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_CommandSetRuleDao">
            <summary>
            指令集控制规则数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetRuleDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="RuleID">规则编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetRuleDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_CommandSetRule)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetRuleDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="RuleID">规则编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetRuleDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="RuleID">规则编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_CommandSetRuleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_ConditionDao">
            <summary>
            条件控制数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ConditionID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_Condition)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ConditionID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ConditionID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_ConditionPriorityDao">
            <summary>
            条件控制优先级数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionPriorityDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="PriorityID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionPriorityDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_ConditionPriority)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionPriorityDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="PriorityID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionPriorityDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="PriorityID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_ConditionPriorityDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_OrderDetailDao">
            <summary>
            指令集明细数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderDetailDao.GetModel(System.Int32,System.String,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="OrderCode">指令集编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="WDataCode">写数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderDetailDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_OrderDetail)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderDetailDao.Delete(System.Int32,System.String,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="OrderCode">指令集编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="WDataCode">写数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderDetailDao.IsExists(System.Int32,System.String,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="OrderCode">指令集编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="WDataCode">写数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderDetailDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_OrderSetDao">
            <summary>
            指令集，项目添加设备后，默认添加所有控制设备的告警指令集数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderSetDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="OrderCode">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderSetDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_OrderSet)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderSetDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="OrderCode">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderSetDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="OrderCode">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_OrderSetDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_PIDConfigDao">
            <summary>
            Control_PIDConfig数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDConfigDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="ControlID">PID控制编号</param>
            <param name="ConfigName">控制配置名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDConfigDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_PIDConfig)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDConfigDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="ControlID">PID控制编号</param>
            <param name="ConfigName">控制配置名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDConfigDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="ControlID">PID控制编号</param>
            <param name="ConfigName">控制配置名称</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDConfigDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_PIDControlDao">
            <summary>
            Control_PIDControl数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDControlDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ControlID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDControlDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_PIDControl)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDControlDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ControlID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDControlDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ControlID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDControlDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_PIDDao">
            <summary>
            PID控制数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="PIDCode">PID编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_PID)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="PIDCode">PID编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="PIDCode">PID编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_PIDProtectDao">
            <summary>
            PID保护条件数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDProtectDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProtectID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDProtectDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_PIDProtect)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDProtectDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProtectID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDProtectDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProtectID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_PIDProtectDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_TimeControlDao">
            <summary>
            指令集，项目添加设备后，默认添加所有控制设备的告警指令集数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeControlDao.GetModel(System.Int32,System.String,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="WeekDay">星期，1,2,3,4,5,6,7周一、二、三、四、五、六、日</param>
            <param name="Time">时间点,HH:MM</param>
            <param name="OrderCode">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeControlDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_TimeControl)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeControlDao.Delete(System.Int32,System.String,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="WeekDay">星期，1,2,3,4,5,6,7周一、二、三、四、五、六、日</param>
            <param name="Time">时间点,HH:MM</param>
            <param name="OrderCode">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeControlDao.IsExists(System.Int32,System.String,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="WeekDay">星期，1,2,3,4,5,6,7周一、二、三、四、五、六、日</param>
            <param name="Time">时间点,HH:MM</param>
            <param name="OrderCode">指令集编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeControlDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Control_TimeDao">
            <summary>
            定时控制数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="TimeID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeDao.SaveOrUpdate(EFOS.Data.Apply.Model.Control_Time)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="TimeID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="TimeID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Control_TimeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_AlarmTaskDao">
            <summary>
            Data_AlarmTask数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmTaskDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmTaskDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_AlarmTask)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmTaskDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmTaskDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmTaskDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_FRoleAppFunctionDao">
            <summary>
            Acc_FRoleAppFunction数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleAppFunctionDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="FRoleID">FRoleID</param>
            <param name="FunctionCode">FunctionCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleAppFunctionDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_FRoleAppFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleAppFunctionDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="FRoleID">FRoleID</param>
            <param name="FunctionCode">FunctionCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleAppFunctionDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="FRoleID">FRoleID</param>
            <param name="FunctionCode">FunctionCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleAppFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_FRoleDao">
            <summary>
            功能角色数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FRoleID">功能角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_FRole)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FRoleID">功能角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FRoleID">功能角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_FRoleFunctionDao">
            <summary>
            功能角色对应的功能信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleFunctionDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="FRoleID">功能角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleFunctionDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_FRoleFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleFunctionDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="FRoleID">功能角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleFunctionDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="FRoleID">功能角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_FRoleFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_MRoleDao">
            <summary>
            管理部角色数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="MRoleID">管理部角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_MRole)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="MRoleID">管理部角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="MRoleID">管理部角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_MRoleManagementDao">
            <summary>
            管理部角色对应的管理部信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleManagementDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="MRoleID">管理部角色编号</param>
            <param name="MCode">管理部编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleManagementDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_MRoleManagement)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleManagementDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="MRoleID">管理部角色编号</param>
            <param name="MCode">管理部编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleManagementDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="MRoleID">管理部角色编号</param>
            <param name="MCode">管理部编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_MRoleManagementDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_UserAppFunctionDao">
            <summary>
            Acc_UserAppFunction数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserAppFunctionDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">UserID</param>
            <param name="FunctionCode">FunctionCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserAppFunctionDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_UserAppFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserAppFunctionDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">UserID</param>
            <param name="FunctionCode">FunctionCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserAppFunctionDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">UserID</param>
            <param name="FunctionCode">FunctionCode</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserAppFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_UserFRoleDao">
            <summary>
            用户对应的功能角色数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFRoleDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="FRoleID">功能角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFRoleDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_UserFRole)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFRoleDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="FRoleID">功能角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFRoleDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="FRoleID">功能角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFRoleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_UserFunctionDao">
            <summary>
            用户对应的功能信息(用户在未设置角色时使用)数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFunctionDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFunctionDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_UserFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFunctionDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFunctionDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_UserMRoleDao">
            <summary>
            用户对应的管理部角色数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserMRoleDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="MRoleID">管理部角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserMRoleDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_UserMRole)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserMRoleDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="MRoleID">管理部角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserMRoleDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="MRoleID">管理部角色编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserMRoleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Acc_UserProjectDao">
            <summary>
            用户对应的项目信息(用户在未设置角色时使用)数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserProjectDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserProjectDao.SaveOrUpdate(EFOS.Data.Apply.Model.Acc_UserProject)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserProjectDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserProjectDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Acc_UserProjectDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_ChargeConfigDao">
            <summary>
            项目共用费用配置信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ChargeConfigDao.GetModel(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">能源数据标识</param>
            <param name="Hour">设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ChargeConfigDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_ChargeConfig)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ChargeConfigDao.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">能源数据标识</param>
            <param name="Hour">设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ChargeConfigDao.IsExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DataCode">能源数据标识</param>
            <param name="Hour">设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ChargeConfigDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_EfficiencyStandardDao">
            <summary>
            能效指标数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EfficiencyStandardDao.GetModel(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">数据计算点编号</param>
            <param name="PointDataCode">计算点能耗数据标识</param>
            <param name="ProductType">产品类型：1.单位面积,2.单位产品，3.人均客流量</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EfficiencyStandardDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_EfficiencyStandard)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EfficiencyStandardDao.Delete(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">数据计算点编号</param>
            <param name="PointDataCode">计算点能耗数据标识</param>
            <param name="ProductType">产品类型：1.单位面积,2.单位产品，3.人均客流量</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EfficiencyStandardDao.IsExists(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">数据计算点编号</param>
            <param name="PointDataCode">计算点能耗数据标识</param>
            <param name="ProductType">产品类型：1.单位面积,2.单位产品，3.人均客流量</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EfficiencyStandardDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_EnergyStandardDao">
            <summary>
            能耗指标数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EnergyStandardDao.GetModel(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">数据计算点编号</param>
            <param name="PointDataCode">计算点能耗数据标识</param>
            <param name="TimeType">时间类型。Y:年,Q:季度,M:月,W:周,D:日</param>
            <param name="Time">Time</param>
            <param name="WorkCycleID">WorkCycleID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EnergyStandardDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_EnergyStandard)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EnergyStandardDao.Delete(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">数据计算点编号</param>
            <param name="PointDataCode">计算点能耗数据标识</param>
            <param name="TimeType">时间类型。Y:年,Q:季度,M:月,W:周,D:日</param>
            <param name="Time">Time</param>
            <param name="ShiftID">班次编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EnergyStandardDao.IsExists(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">数据计算点编号</param>
            <param name="PointDataCode">计算点能耗数据标识</param>
            <param name="TimeType">时间类型。Y:年,Q:季度,M:月,W:周,D:日</param>
            <param name="Time">Time</param>
            <param name="ShiftID">班次编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_EnergyStandardDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Common_ProjectParamsDao">
            <summary>
            项目参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectParamsDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="ParamCode">参数编码 如：ConnectModel</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectParamsDao.SaveOrUpdate(EFOS.Data.Apply.Model.Common_ProjectParams)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectParamsDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="ParamCode">参数编码 如：ConnectModel</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectParamsDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="ParamCode">参数编码 如：ConnectModel</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Common_ProjectParamsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_AccumulativeDao">
            <summary>
            累计数据存储数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AccumulativeDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AccumulativeDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_Accumulative)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AccumulativeDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AccumulativeDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AccumulativeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_AlarmInfoDao">
            <summary>
            当前报警信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="AlarmKey">报警唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_AlarmInfo)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="AlarmKey">报警唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="AlarmKey">报警唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_AlarmInfoHistoryDao">
            <summary>
            报警历史数据数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoHistoryDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="AlarmID">报警历史编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoHistoryDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_AlarmInfoHistory)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoHistoryDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="AlarmID">报警历史编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoHistoryDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="AlarmID">报警历史编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_AlarmInfoHistoryDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_DayEnergyDao">
            <summary>
            日能耗数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_DayEnergyDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_DayEnergyDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_DayEnergy)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_DayEnergyDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_DayEnergyDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_DayEnergyDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_FireAlarmInfoDao">
            <summary>
            Data_FireAlarmInfo数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireAlarmInfoDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireAlarmInfoDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_FireAlarmInfo)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireAlarmInfoDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireAlarmInfoDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireAlarmInfoDao.IsExists(EFOS.Data.Apply.Model.Data_FireAlarmInfo)">
            <summary>
            判断是否存在告警记录
            </summary>
            <param name="model">告警记录实体</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireAlarmInfoDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_FireDeviceDao">
            <summary>
            Data_FireDevice数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireDeviceDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FireDeviceType">消防设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireDeviceDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_FireDevice)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireDeviceDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FireDeviceType">消防设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireDeviceDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FireDeviceType">消防设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_FireDeviceDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_HourEnergyDao">
            <summary>
            小时能耗数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_HourEnergyDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_HourEnergyDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_HourEnergy)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_HourEnergyDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_HourEnergyDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_HourEnergyDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_RealDataDao">
            <summary>
            实时数据数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_RealDataDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_RealDataDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_RealData)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_RealDataDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_RealDataDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_RealDataDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_AlarmConfigDao">
            <summary>
            报警配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_AlarmConfigDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="AlarmKey">报警唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_AlarmConfigDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_AlarmConfig)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_AlarmConfigDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="AlarmKey">报警唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_AlarmConfigDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="AlarmKey">报警唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_AlarmConfigDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_DataMappingDao">
            <summary>
            设备采集数据映射+计算配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DataMappingDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DataMappingDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_DataMapping)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DataMappingDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DataMappingDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DataMappingDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_DeviceArchivesDao">
            <summary>
            Info_DeviceArchives数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_DeviceArchives)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_DeviceArchivesFileDao">
            <summary>
            设备档案文档数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesFileDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FileID">文档编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesFileDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_DeviceArchivesFile)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesFileDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FileID">文档编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesFileDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FileID">文档编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesFileDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_DeviceArchivesParamsDao">
            <summary>
            设备参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesParamsDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ParamsID">参数编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesParamsDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_DeviceArchivesParams)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesParamsDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ParamsID">参数编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesParamsDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ParamsID">参数编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceArchivesParamsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_DevicePropertyDao">
            <summary>
            设备属性数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DevicePropertyDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="Code">设备属性编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DevicePropertyDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_DeviceProperty)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DevicePropertyDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="Code">设备属性编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DevicePropertyDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceID">设备编号</param>
            <param name="Code">设备属性编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DevicePropertyDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_DeviceDao">
            <summary>
            设备信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceID">设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_Device)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceID">设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceID">设备编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_DeviceDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_FloorDao">
            <summary>
            Info_Floor数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_FloorDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FloorID">楼层编号，自增长</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_FloorDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_Floor)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_FloorDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FloorID">楼层编号，自增长</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_FloorDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FloorID">楼层编号，自增长</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_FloorDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_LogOperationDao">
            <summary>
            项目操作日志数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_LogOperationDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_LogOperationDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_LogOperation)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_LogOperationDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_LogOperationDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_LogOperationDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_MaintenanceDefaultStatusDao">
            <summary>
            Info_MaintenanceDefaultStatus数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceDefaultStatusDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceDefaultStatusDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_MaintenanceDefaultStatus)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceDefaultStatusDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceDefaultStatusDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceDefaultStatusDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_MaintenancePlanDao">
            <summary>
            Info_MaintenancePlan数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenancePlanDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenancePlanDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_MaintenancePlan)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenancePlanDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenancePlanDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenancePlanDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_MaintenanceStatusDao">
            <summary>
            Info_MaintenanceStatus数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceStatusDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceStatusDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_MaintenanceStatus)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceStatusDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceStatusDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_MaintenanceStatusDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_QuickDeployMapDao">
            <summary>
            一键部署设备仪表对应关系数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_QuickDeployMapDao.GetModel(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="deviceID"></param>
            <param name="roomID"></param>
            <param name="meterID"></param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_QuickDeployMapDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_QuickDeployMap)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_QuickDeployMapDao.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="deviceID"></param>
            <param name="roomID"></param>
            <param name="meterID"></param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_QuickDeployMapDao.IsExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="deviceID"></param>
            <param name="roomID"></param>
            <param name="meterID"></param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_QuickDeployMapDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_RoomDao">
            <summary>
            设备房间数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="RoomID">房间编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_Room)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="RoomID">房间编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="RoomID">房间编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_RoomDeviceTypeDao">
            <summary>
            设备房间存放的设备类型数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDeviceTypeDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="RoomID">房间编号</param>
            <param name="DeviceType">设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDeviceTypeDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_RoomDeviceType)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDeviceTypeDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="RoomID">房间编号</param>
            <param name="DeviceType">设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDeviceTypeDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="RoomID">房间编号</param>
            <param name="DeviceType">设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_RoomDeviceTypeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_SystemParamsDao">
            <summary>
            系统参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_SystemParamsDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="SystemCode">系统编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_SystemParamsDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_SystemParams)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_SystemParamsDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="SystemCode">系统编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_SystemParamsDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="SystemCode">系统编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_SystemParamsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Info_WorkCycleDao">
            <summary>
            作息时间数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_WorkCycleDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="CycleID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_WorkCycleDao.SaveOrUpdate(EFOS.Data.Apply.Model.Info_WorkCycle)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_WorkCycleDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="CycleID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_WorkCycleDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="CycleID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Info_WorkCycleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Log_ExceptionDao">
            <summary>
            异常日志数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_ExceptionDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ExceptionID">异常日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_ExceptionDao.SaveOrUpdate(EFOS.Data.Apply.Model.Log_Exception)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_ExceptionDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ExceptionID">异常日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_ExceptionDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ExceptionID">异常日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_ExceptionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Log_OperationDao">
            <summary>
            操作日志数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_OperationDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_OperationDao.SaveOrUpdate(EFOS.Data.Apply.Model.Log_Operation)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_OperationDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_OperationDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Log_OperationDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Point_ComputeDao">
            <summary>
            数据计算点数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="PointCode">数据计算点编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeDao.SaveOrUpdate(EFOS.Data.Apply.Model.Point_Compute)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="PointCode">数据计算点编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="PointCode">数据计算点编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Point_ComputeEnergyDao">
            <summary>
            计算点能耗数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeEnergyDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ComputeEnergyID">计算点能耗编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeEnergyDao.SaveOrUpdate(EFOS.Data.Apply.Model.Point_ComputeEnergy)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeEnergyDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ComputeEnergyID">计算点能耗编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeEnergyDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ComputeEnergyID">计算点能耗编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeEnergyDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Point_ComputeRealDataDao">
            <summary>
            计算点实时数据数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeRealDataDao.GetModel(System.String,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="PointCode">计算点编号</param>
            <param name="DataCode">计算数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeRealDataDao.SaveOrUpdate(EFOS.Data.Apply.Model.Point_ComputeRealData)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeRealDataDao.Delete(System.String,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="PointCode">计算点编号</param>
            <param name="DataCode">计算数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeRealDataDao.IsExists(System.String,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="PointCode">计算点编号</param>
            <param name="DataCode">计算数据标识</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeRealDataDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Point_ComputeYieldDao">
            <summary>
            计算点产量或单位面积数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeYieldDao.GetModel(System.String,System.Int32,System.String,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="PointCode">计算点编号</param>
            <param name="ProductType">产品类型：1.单位面积,2.单位产品，3.人均客流量</param>
            <param name="TimeType">TimeType</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeYieldDao.SaveOrUpdate(EFOS.Data.Apply.Model.Point_ComputeYield)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeYieldDao.Delete(System.String,System.Int32,System.String,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="PointCode">计算点编号</param>
            <param name="ProductType">产品类型：1.单位面积,2.单位产品，3.人均客流量</param>
            <param name="TimeType">TimeType</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeYieldDao.IsExists(System.String,System.Int32,System.String,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="PointCode">计算点编号</param>
            <param name="ProductType">产品类型：1.单位面积,2.单位产品，3.人均客流量</param>
            <param name="TimeType">TimeType</param>
            <param name="CollectTime">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Point_ComputeYieldDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.StoredProcedureDao">
            <summary>
            存储过程
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Task_ComputeDayEnergy(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            日能耗计算
            </summary>
            <param name="projetCode">项目编号</param>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Analyse_CurrentEnergy(System.Int32,System.String,System.Nullable{System.Int32},System.DateTime,System.String)">
            <summary>
            获取指定时间能耗数据汇总
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">计算点编号</param>
            <param name="DataCode">数据标识</param>
            <param name="DateTime">查询时间</param>
            <param name="TimeType">查询类型</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Task_CreateHisTable">
            <summary>
            创建历史表
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Analyse_TrendEnergy(System.Int32,System.String,System.Nullable{System.Int32},System.DateTime,System.String)">
            <summary>
            获取柱图或线图能耗计量点的能耗
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">计算点编号</param>
            <param name="DataCode">数据标识</param>
            <param name="DateTime">查询时间</param>
            <param name="TimeType">查询类型</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Report_CurrentChainCompared(System.Int32,System.String,System.Nullable{System.Int32},System.DateTime,System.String)">
            <summary>
            当前数据环比报表
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">计算点编号</param>
            <param name="DataCode">数据标识</param>
            <param name="DateTime">查询时间</param>
            <param name="TimeType">查询类型</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Report_TrendChainCompared(System.Int32,System.String,System.Nullable{System.Int32},System.DateTime,System.String)">
            <summary>
            趋势环比报表
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointCode">计算点编号</param>
            <param name="DataCode">数据标识</param>
            <param name="DateTime">查询时间</param>
            <param name="TimeType">查询类型</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Common_CreateProjectTable(System.Int32)">
            <summary>
            创建项目数据库表
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Common_DropProjectTable(System.Int32)">
            <summary>
            删除项目数据库表
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Analyse_HistoryCurve(System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.String)">
            <summary>
            获取历史曲线数据
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointKeys">数据点集合用逗号分割</param>
            <param name="BeginTime">开始时间</param>
            <param name="EndTime">结束时间</param>
            <param name="DisplayCount">显示个数</param>
            <param name="MinInterval">最小时间频率:Second,Minute</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Analyse_HistoryData(System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.String)">
            <summary>
            获取历史数据
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointKeys">数据点集合用逗号分割</param>
            <param name="BeginTime">开始时间</param>
            <param name="EndTime">结束时间</param>
            <param name="DisplayCount">显示个数</param>
            <param name="MinInterval">最小时间频率:Second,Minute</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.GetAutoPrimaryKey(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            取得自动编号
            </summary>
            <param name="prefix">前缀</param>
            <param name="length">长度</param>
            <param name="tableName">表名称</param>
            <param name="primaryKeyColumnName">主键字段名称</param>
            <param name="parentColumnName">上级字段名称</param>
            <param name="parentCode">上级编号</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Common_EnergyCalculate(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
             <summary>
            名称：计算点能耗统计(公共能耗计算)
            功能：计算点能耗统计(公共能耗计算)
            作者：anzq
             </summary>
             <param name="ProjectCode">项目编号</param>
             <param name="PointCodeCollection">计量点集合,逗号分隔</param>
             <param name="DataCode">数据标识</param>
             <param name="BeginTime">开始时间</param>
             <param name="EndTime">结束时间</param>
             <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Common_EnergyPiecewiseChargingCalculate(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
             <summary>
            名称：计算点能耗分段费用计算结果按分段分组汇总（计算点能耗费用的计算已经是依据费用配置计算出来，只是没有按分段分组汇总）
            功能：分段费用分组统计--查询设备计算点的能耗及费用数据，按收费分段分组统计计算点各分段组内费用和
            作者：
             </summary>
             <param name="ProjectCode">项目编号</param>
             <param name="PointCodeCollection">计量点集合,逗号分隔</param>
             <param name="DataCode">数据标识</param>
             <param name="BeginTime">开始时间</param>
             <param name="EndTime">结束时间</param>
             <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.Common_ProductCalculate(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
             <summary>
             名称：计算点产量统计(公共产量计算)
            功能：计算点产量统计(公共产量计算)
            作者：sxh
             </summary>
             <param name="ProjectCode">项目编号</param>
             <param name="PointCodeCollection">计量点集合,逗号分隔</param>
             <param name="DataCode">数据标识</param>
             <param name="BeginTime">开始时间</param>
             <param name="EndTime">结束时间</param>
             <returns>数据</returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.GetProject101And13(System.String,System.DateTime)">
            <summary>
            获取项目总量底度和功率
            </summary>
            <param name="ProjectCode"></param>
            <param name="DateTime"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.GetHistoryCurveByTime(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            ForAPP,设备参数年月日曲线
            </summary>
            <param name="ProjectCode"></param>
            <param name="PointKeys"></param>
            <param name="TimeType"></param>
            <param name="BeginDate"></param>
            <param name="EndDate"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.ComDataInToHis(System.String,System.String,System.String)">
            <summary>
            历史数据转存
            </summary>
            <param name="InTable">临时表</param>
            <param name="HisTable">历史表</param>
            <param name="DateStr">时间字段名</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.StatisticsAlarmCount">
            <summary>
            *******************************10min一次，0,10,，……，统计平台项目告警********************************
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.StatisticsAlarmTaskCount">
            <summary>
            *******************************10min一次，0,10,，……，统计平台项目告警、任务,FOR综合态势,待改变********************************
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.StatisticProjectIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.StatisticsPatrolDeviceCount">
            <summary>
            统计巡检设备故障情况
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.StatisticsEnergyCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.StatisticsRoomCount">
            <summary>
             *******************************一天一次，每天2:30点，统计平台项目房间数目********************************
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.StatisticsRoomAlarmCount">
            <summary>
             *******************************10min一次，0,10,……，统计平台项目房间告警数目********************************
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.StatisticsExEventCount">
            <summary>
            *******************************10min一次，0,10,……，统计平台项目异常操作数目********************************
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.ComData_TenMinute">
            <summary>
            *******************************10min一次，0,10,……********************************
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.ComData_OneDay">
            <summary>
            *******************************10min一次，0,10,……********************************
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.StoredProcedureDao.ComData_OneMonth">
            <summary>
            *******************************10min一次，0,10,……********************************
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_InspectionDao">
            <summary>
            设备巡检数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="InspectionID">巡检编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_Inspection)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="InspectionID">巡检编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="InspectionID">巡检编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.DAL.Data_InspectionItemDao">
            <summary>
            巡检详细数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionItemDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="InspectionItemID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionItemDao.SaveOrUpdate(EFOS.Data.Apply.Model.Data_InspectionItem)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionItemDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="InspectionItemID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionItemDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="InspectionItemID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Apply.DAL.Data_InspectionItemDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_VIPBrief">
            <summary>
            Acc_VIPBrief
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VIPBrief.FileKey">
            <summary>
            pdf文件名
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VIPBrief.Title">
            <summary>
            显示标题
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VIPBrief.BlockCode">
            <summary>
            BlockCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VIPBrief.BeginTime">
            <summary>
            BeginTime
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VIPBrief.EndTime">
            <summary>
            EndTime
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VIPBrief.UserID">
            <summary>
            UserID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VIPBrief.Paragraph">
            <summary>
            前端编辑器生成的p标签内容
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VIPBrief.ParagraphType">
            <summary>
            段落类型（当前有1=重要事件通告，2=调试部署进度，3=培训，4=运行维护，5=开发进度）
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_VipBriefComment">
            <summary>
            Acc_VipBriefComment
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VipBriefComment.ID">
            <summary>
            评论、回复编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VipBriefComment.UserID">
            <summary>
            评论人、回复人编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VipBriefComment.ParentID">
            <summary>
            父级编号（评论时为null回复时为回复的评论的编号）
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VipBriefComment.FileKey">
            <summary>
            简报文件编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VipBriefComment.Comment">
            <summary>
            评论、回复内容
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_VipBriefComment.CreateTime">
            <summary>
            评论、回复时间
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_HisAlarmCount">
            <summary>
            项目共用告警数据统计，历史
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisAlarmCount.AlarmDate">
            <summary>
            统计时间,一小时一个点
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisAlarmCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisAlarmCount.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisAlarmCount.AlarmType">
            <summary>
            告警类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisAlarmCount.ACount">
            <summary>
            告警数目
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_HisDeviceCount">
            <summary>
            项目共用设备数据,及其启停、故障、维保状态统计
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisDeviceCount.StaDate">
            <summary>
            日期，每天一次
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisDeviceCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisDeviceCount.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisDeviceCount.DataCode">
            <summary>
            数据标识，为0表示该类型设备总数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisDeviceCount.Value">
            <summary>
            值，数据标识值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisDeviceCount.DCount">
            <summary>
            项目类型设备数目
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_HisEnergyCount">
            <summary>
            项目共用计算点能耗数据统计，历史
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.CollectDate">
            <summary>
            统计时间,一小时一个点
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.DataCode">
            <summary>
            数据标识，水、电
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.PointType">
            <summary>
            计算点类型，总量、分项、公共
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.PointCode">
            <summary>
            计算点编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.PointName">
            <summary>
            计算点名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.Data">
            <summary>
            能耗数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.InEffiData">
            <summary>
            低效能耗数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEnergyCount.IsAvg">
            <summary>
            是否为历史平均值，0否，1是
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_HisEventCount">
            <summary>
            项目共用异常操作数据统计，历史
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEventCount.HappenDate">
            <summary>
            发生时间,一天一个点
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEventCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEventCount.AlarmType">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEventCount.ContextText">
            <summary>
            事件名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisEventCount.ECount">
            <summary>
            数目
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_HisProjectIndex">
            <summary>
            项目共用综合指数，当天
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.StaDate">
            <summary>
            统计时间，一天一个点
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.SafeState">
            <summary>
            安全状态，1异常，0安全
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.EnvironState">
            <summary>
            环境状态，1异常，0正常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.EffiState">
            <summary>
            能效状态，1异常，0正常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.OperateState">
            <summary>
            操作状态，1异常，0正常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.IsExStandard">
            <summary>
            能耗是否超标，1超标，0正常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.EnergyValue">
            <summary>
            超标量
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.Acreage">
            <summary>
            建筑面积，㎡
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.PatrolTimes">
            <summary>
            PatrolTimes
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.IsDataEntry">
            <summary>
            IsDataEntry
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisProjectIndex.PatrolUserIDs">
            <summary>
            PatrolUserIDs
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_HisRoomAlarmCount">
            <summary>
            项目共用房间异常统计
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisRoomAlarmCount.AlarmDate">
            <summary>
            告警时间,一天一个点
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisRoomAlarmCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisRoomAlarmCount.RoomID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisRoomAlarmCount.AlarmType">
            <summary>
            告警类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_HisRoomAlarmCount.ACount">
            <summary>
            当天告警数目
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_InAlarmCount">
            <summary>
            项目共用告警数据统计，历史
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmCount.AlarmDate">
            <summary>
            统计时间,一小时一个点
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmCount.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmCount.AlarmType">
            <summary>
            告警类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmCount.ACount">
            <summary>
            告警数目
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount">
            <summary>
            项目告警任务处理情况，有效率、及时率
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.Alarm">
            <summary>
            未处理数目
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.InHand">
            <summary>
            处理中数目
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.Completed">
            <summary>
            已完成处理数目
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.Effective">
            <summary>
            有效任务分子
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.EffTotal">
            <summary>
            有效任务分母
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.EffRate">
            <summary>
            任务有效率
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.Timely">
            <summary>
            及时任务分子
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.TimeTotal">
            <summary>
            及时任务分母
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InAlarmTaskCount.TimeRate">
            <summary>
            接任务及时率
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_InDeviceCount">
            <summary>
            项目共用设备数据,及其启停、故障、维保状态统计
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InDeviceCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InDeviceCount.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InDeviceCount.DataCode">
            <summary>
            数据标识，为0表示该类型设备总数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InDeviceCount.Value">
            <summary>
            值，数据标识值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InDeviceCount.DCount">
            <summary>
            项目类型设备数目
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InDeviceCount.StaDate">
            <summary>
            StaDate
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_InEnergyCount">
            <summary>
            项目共用计算点能耗数据统计，今日
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.CollectDate">
            <summary>
            统计时间,一小时一个点
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.DataCode">
            <summary>
            数据标识，水、电
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.PointType">
            <summary>
            计算点类型，总量、分项、公共
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.PointCode">
            <summary>
            计算点编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.PointName">
            <summary>
            计算点名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.Data">
            <summary>
            能耗数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.InEffiData">
            <summary>
            低效能耗数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEnergyCount.IsAvg">
            <summary>
            是否为历史平均值，0否，1是
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_InEventCount">
            <summary>
            项目共用异常操作数据统计，实时
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEventCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEventCount.AlarmType">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEventCount.ContextText">
            <summary>
            事件名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InEventCount.ECount">
            <summary>
            数目
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_InProjectIndex">
            <summary>
            项目共用综合指数，当天
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.SafeState">
            <summary>
            安全状态，1异常，0安全
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.EnvironState">
            <summary>
            环境状态，1异常，0正常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.EffiState">
            <summary>
            操作状态，1异常，0正常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.OperateState">
            <summary>
            能效状态，1异常，0正常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.IsExStandard">
            <summary>
            能耗是否超标，1超标，0正常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.EnergyValue">
            <summary>
            超标量
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.Acreage">
            <summary>
            建筑面积，㎡
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.PatrolTimes">
            <summary>
            PatrolTimes
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.IsDataEntry">
            <summary>
            IsDataEntry
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.PatrolUserIDs">
            <summary>
            PatrolUserIDs
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InProjectIndex.StaDate">
            <summary>
            StaDate
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.ComData_InRoomAlarmCount">
            <summary>
            项目共用房间异常统计
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InRoomAlarmCount.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InRoomAlarmCount.RoomID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InRoomAlarmCount.AlarmType">
            <summary>
            告警类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InRoomAlarmCount.ACount">
            <summary>
            当天告警数目
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.ComData_InRoomAlarmCount.AlarmDate">
            <summary>
            AlarmDate
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_Announcement">
            <summary>
            公告记录
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.ID">
            <summary>
            序号，自增长
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.AnnounceLevel">
            <summary>
            公告等级，取自Config_Dimension中的AnnounceLevel选项，1一般，2重要
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.PublishTime">
            <summary>
            发布时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.NoteTime">
            <summary>
            录入时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.PublishMCode">
            <summary>
            PublishMCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.BeginDate">
            <summary>
            公告公布开始时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.EndDate">
            <summary>
            公告公布结束时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.Title">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.Status">
            <summary>
            状态，1未发布、2已作废、3已发布，（若是已发布的时间到了就是已失效状态）
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.Publisher">
            <summary>
            实际发布人，用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.AppointedPuber">
            <summary>
            指定发布人，用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.Inputer">
            <summary>
            录入人，用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.Context">
            <summary>
            Context
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Announcement.BlocCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_FaceAttendanceClient">
            <summary>
            人脸考勤客户端
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_FaceAttendanceClient.ClientCode">
            <summary>
            客户端标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_FaceAttendanceClient.ClientName">
            <summary>
            客户端名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_FaceAttendanceClient.BlocCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_ProductPlan">
            <summary>
            计划产量
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProductPlan.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProductPlan.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProductPlan.Version">
            <summary>
            版型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProductPlan.PointCode">
            <summary>
            工艺或设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProductPlan.PointType">
            <summary>
            类型：5-工艺6-设备
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProductPlan.Product">
            <summary>
            产量
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProductPlan.ShiftID">
            <summary>
            班次
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProductPlan.Header">
            <summary>
            负责人
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_ProjectOwnerPage">
            <summary>
            项目对应的业主页面功能
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProjectOwnerPage.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProjectOwnerPage.PageCode">
            <summary>
            业主页面功能编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_Shift">
            <summary>
            Common_Shift
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Shift.ID">
            <summary>
            ID(自增长)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Shift.CycleName">
            <summary>
            CycleName
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_Shift.ProjectCode">
            <summary>
            ProjectCode
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_WelcomeVip">
            <summary>
            大屏欢迎词
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WelcomeVip.ID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WelcomeVip.ClientCode">
            <summary>
            客户端标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WelcomeVip.VipCode">
            <summary>
            Vip编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WelcomeVip.VipName">
            <summary>
            Vip名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WelcomeVip.MainTitle">
            <summary>
            主标题
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WelcomeVip.Subtitle">
            <summary>
            副标题
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_WorkCycle">
            <summary>
            工业PCB排班
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WorkCycle.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WorkCycle.ShiftID">
            <summary>
            班次编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WorkCycle.StartTime">
            <summary>
            班次开始时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WorkCycle.EndTime">
            <summary>
            班次结束时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WorkCycle.Header">
            <summary>
            负责人
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WorkCycle.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WorkCycle.DutyNum">
            <summary>
            当班人数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_WorkCycle.TotalNum">
            <summary>
            总人数
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_Command">
            <summary>
            控制指令
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.CommandID">
            <summary>
            CommandID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.CommandName">
            <summary>
            控制名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.ControlType">
            <summary>
            控制类型：(0=停止控制，1=启动控制，2=其他控制）
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.ClientID">
            <summary>
            控制客户端
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.DeviceID">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.DataCode">
            <summary>
            控制数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.MeterID">
            <summary>
            控制仪表
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.Value">
            <summary>
            控制值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Command.FeedBack">
            <summary>
            反馈时间(秒)
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_CommandSet">
            <summary>
            指令集
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSet.SetID">
            <summary>
            指令集编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSet.SetName">
            <summary>
            指令集名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSet.RoomID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSet.SystemCode">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSet.SetIDs">
            <summary>
            指令集集合用逗号分隔,说明:该指令由多个指令集组成
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_CommandSetRule">
            <summary>
            指令集控制规则
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSetRule.RuleID">
            <summary>
            规则编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSetRule.SetID">
            <summary>
            场景编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSetRule.Delay">
            <summary>
            延迟多少时间执行下个指令
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSetRule.CommandID">
            <summary>
            控制指令编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSetRule.IsFailReReturn">
            <summary>
            失败后是否退出
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_CommandSetRule.Sort">
            <summary>
            执行顺序
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_Condition">
            <summary>
            条件控制
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Condition.ConditionID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Condition.ConditionName">
            <summary>
            条件控制名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Condition.WeekDay">
            <summary>
            允许控制星期，为空表示无限制，格式为"1,2,3,4,5,6,7"
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Condition.Time">
            <summary>
            允许控制时间范围，格式为"08:30:00-09:30:00"
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Condition.Expression">
            <summary>
            条件表达式
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Condition.Duration">
            <summary>
            条件满足持续时间，单位为分钟
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_ConditionPriority">
            <summary>
            条件控制优先级
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_ConditionPriority.PriorityID">
            <summary>
            优先级自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_ConditionPriority.ConditionID">
            <summary>
            条件控制编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_ConditionPriority.CommandID">
            <summary>
            指令编号或指令集编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_ConditionPriority.CommandType">
            <summary>
            命令类型(1=指令,2=指令集)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_ConditionPriority.Expression">
            <summary>
            优先级条件表达式
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_ConditionPriority.Priority">
            <summary>
            优先级排序
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_OrderDetail">
            <summary>
            指令集明细
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.OrderCode">
            <summary>
            指令集编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.WDataCode">
            <summary>
            写数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.WDataValue">
            <summary>
            写数据值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.RWaitTime">
            <summary>
            读等待时间，即获取反馈等待时间,默认1s
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.RestTime">
            <summary>
            等待时间，该指令执行完后，等待时间后下一条指令执行时间，默认1s
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.RDataCode">
            <summary>
            读数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.CheckValue">
            <summary>
            读检查值，若等则继续等到等待时间，执行下一条指令，否则报异常
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.Sort">
            <summary>
            顺序，默认1
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderDetail.RepeatCount">
            <summary>
            重复次数，若发生异常，重复执行次数,默认0次
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_OrderSet">
            <summary>
            指令集，项目添加设备后，默认添加所有控制设备的告警指令集
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderSet.OrderCode">
            <summary>
            指令集编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderSet.OrderName">
            <summary>
            指令集描述
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_OrderSet.OrderType">
            <summary>
            指令类型，1指令集，2设备指令
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_PID">
            <summary>
            PID控制
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.PIDCode">
            <summary>
            PID编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Name">
            <summary>
            PID控制名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.ClientID">
            <summary>
            控制客户端编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Ts">
            <summary>
            执行间隔时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.ProcessDataCode">
            <summary>
            过程值数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.SettingValue">
            <summary>
            默认设定值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Kp">
            <summary>
            比例系数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Ki">
            <summary>
            积分系数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Kd">
            <summary>
            微分系数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Increment">
            <summary>
            频率增量
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Max">
            <summary>
            上限
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Min">
            <summary>
            下限
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.CommandIDs">
            <summary>
            控制指令集合,用逗号分隔
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PID.Location">
            <summary>
            0=就地控制,1=本地Das控制,2=云端控制
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_PIDConfig">
            <summary>
            PID控制配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDConfig.ControlID">
            <summary>
            PID控制编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDConfig.ConfigName">
            <summary>
            控制配置名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDConfig.ConfigText">
            <summary>
            控制配置文本
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDConfig.ConfigValue">
            <summary>
            控制配置值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDConfig.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_PIDControl">
            <summary>
            PID控制
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDControl.ControlID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDControl.PIDName">
            <summary>
            PID控制名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDControl.DeviceType">
            <summary>
            PID控制设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDControl.PIDDevice">
            <summary>
            PID控制设备
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_PIDProtect">
            <summary>
            PID保护条件
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDProtect.ProtectID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDProtect.PIDCode">
            <summary>
            PID编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDProtect.Expression">
            <summary>
            频率保护表达式
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDProtect.Symbol">
            <summary>
            加、减频符号(1,-1）
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_PIDProtect.Level">
            <summary>
            重要级别
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_Time">
            <summary>
            定时控制
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Time.TimeID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Time.TimeName">
            <summary>
            定时控制名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Time.WeekDay">
            <summary>
            星期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Time.Time">
            <summary>
            控制时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Time.CommandID">
            <summary>
            指令编号或指令集编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Time.CommandType">
            <summary>
            命令类型(1=指令,2=指令集)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Time.IsEveryDay">
            <summary>
            每天执行
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_Time.Location">
            <summary>
            0=就地控制,1=本地Das控制,2=云端控制
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Control_TimeControl">
            <summary>
            指令集，项目添加设备后，默认添加所有控制设备的告警指令集
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_TimeControl.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_TimeControl.WeekDay">
            <summary>
            星期，1,2,3,4,5,6,7周一、二、三、四、五、六、日
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_TimeControl.Time">
            <summary>
            时间点,HH:MM
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_TimeControl.OrderCode">
            <summary>
            指令集编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Control_TimeControl.IsUse">
            <summary>
            是否使用，true使用，false否
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_AlarmTask">
            <summary>
            Data_AlarmTask
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.TaskContent">
            <summary>
            TaskContent
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.RelateID">
            <summary>
            RelateID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.TaskType">
            <summary>
            TaskType
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.BeginTime">
            <summary>
            BeginTime
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.SceneTime">
            <summary>
            SceneTime
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.WriteTime">
            <summary>
            WriteTime
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.Cause">
            <summary>
            Cause
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.CompleteInfo">
            <summary>
            CompleteInfo
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.CompleteTime">
            <summary>
            CompleteTime
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.IsToRepair">
            <summary>
            IsToRepair
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.TaskECode">
            <summary>
            TaskECode
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.Deviceid">
            <summary>
            Deviceid
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmTask.TaskUserID">
            <summary>
            TaskUserID
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_FRole">
            <summary>
            功能角色
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRole.FRoleID">
            <summary>
            功能角色编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRole.RoleName">
            <summary>
            功能角色名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRole.Remark">
            <summary>
            角色备注
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRole.Type">
            <summary>
            功能角色类型：2:集团的角色。3：项目的角色
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_FRoleAppFunction">
            <summary>
            Acc_FRoleAppFunction
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRoleAppFunction.FRoleID">
            <summary>
            FRoleID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRoleAppFunction.FunctionCode">
            <summary>
            FunctionCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRoleAppFunction.IsHomePage">
            <summary>
            是否为角色功能首页
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_FRoleFunction">
            <summary>
            功能角色对应的功能信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRoleFunction.FRoleID">
            <summary>
            功能角色编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_FRoleFunction.FunctionCode">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_MRole">
            <summary>
            管理部角色
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_MRole.MRoleID">
            <summary>
            管理部角色编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_MRole.RoleName">
            <summary>
            管理部角色名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_MRole.Remark">
            <summary>
            角色备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_MRoleManagement">
            <summary>
            管理部角色对应的管理部信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_MRoleManagement.MRoleID">
            <summary>
            管理部角色编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_MRoleManagement.MCode">
            <summary>
            管理部编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_UserAppFunction">
            <summary>
            Acc_UserAppFunction
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserAppFunction.UserID">
            <summary>
            UserID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserAppFunction.FunctionCode">
            <summary>
            FunctionCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserAppFunction.IsHomePage">
            <summary>
            是否为角色功能首页
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_UserFRole">
            <summary>
            用户对应的功能角色
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserFRole.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserFRole.FRoleID">
            <summary>
            功能角色编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_UserFunction">
            <summary>
            用户对应的功能信息(用户在未设置角色时使用)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserFunction.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserFunction.FunctionCode">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_UserMRole">
            <summary>
            用户对应的管理部角色
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserMRole.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserMRole.MRoleID">
            <summary>
            管理部角色编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Acc_UserProject">
            <summary>
            用户对应的项目信息(用户在未设置角色时使用)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserProject.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Acc_UserProject.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_ChargeConfig">
            <summary>
            项目共用费用配置信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ChargeConfig.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ChargeConfig.DataCode">
            <summary>
            能源数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ChargeConfig.Hour">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ChargeConfig.HourType">
            <summary>
            小时类型(普通=0,峰=1,平=2,谷=3)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ChargeConfig.Fee">
            <summary>
            单位费用
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_EfficiencyStandard">
            <summary>
            能效指标
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EfficiencyStandard.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EfficiencyStandard.PointCode">
            <summary>
            数据计算点编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EfficiencyStandard.PointDataCode">
            <summary>
            计算点能耗数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EfficiencyStandard.ProductType">
            <summary>
            产品类型：1.单位面积,2.单位产品，3.人均客流量
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EfficiencyStandard.MinValue">
            <summary>
            能效指标最小值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EfficiencyStandard.MaxValue">
            <summary>
            能效指标准最大值
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_EnergyStandard">
            <summary>
            能耗指标
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.PointCode">
            <summary>
            数据计算点编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.PointDataCode">
            <summary>
            计算点能耗数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.TimeType">
            <summary>
            时间类型。Y:年,Q:季度,M:月,W:周,D:日
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.MinValue">
            <summary>
            能耗标准最小值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.MaxValue">
            <summary>
            能耗标准最大值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.PointType">
            <summary>
            5-工艺6-设备
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_EnergyStandard.ShiftID">
            <summary>
            班次编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Common_ProjectParams">
            <summary>
            项目参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProjectParams.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProjectParams.ParamCode">
            <summary>
            参数编码 如：ConnectModel
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProjectParams.ParamName">
            <summary>
            参数名称 如：中央空调连接模式
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Common_ProjectParams.ParamValue">
            <summary>
            参数值 对于不同的参数，参数值自定义为不同的意义 如：ParamCode = ConnectModel，ParamName = 中央空调连接模式时，ParamValue：0-并联 1-串联
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_Accumulative">
            <summary>
            累计数据存储
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Accumulative.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Accumulative.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Accumulative.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Accumulative.CollectData">
            <summary>
            采集值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Accumulative.SourceData">
            <summary>
            原始数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Accumulative.IsDataStackData">
            <summary>
            是否是数据栈冻结数据
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_AlarmInfo">
            <summary>
            当前报警信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.AlarmKey">
            <summary>
            报警唯一标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.HappenTime">
            <summary>
            发生时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.ContinueTime">
            <summary>
            持续时间(分钟)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.AlarmTypeID">
            <summary>
            报警类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.AlarmText">
            <summary>
            报警信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.Status">
            <summary>
            报警状态(0=预报警,1=报警)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.ConfirmUser">
            <summary>
            确认人
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.IsConfirm">
            <summary>
            是否确认
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.ConfirmTime">
            <summary>
            确认时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.HappenParamsJson">
            <summary>
            发生报警时设备的Json参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.RecoveryParamsJson">
            <summary>
            恢复报警时的Json参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfo.CollectData">
            <summary>
            发生告警时采集值
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_AlarmInfoHistory">
            <summary>
            报警历史数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.AlarmID">
            <summary>
            报警历史编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.ConfirmUser">
            <summary>
            确认人
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.ConfirmTime">
            <summary>
            确认时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.HappenTime">
            <summary>
            发生时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.RecoveryTime">
            <summary>
            恢复数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.AlarmTypeID">
            <summary>
            报警类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.AlarmText">
            <summary>
            报警信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.IsEvent">
            <summary>
            是否是事件
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.HappenParamsJson">
            <summary>
            发生报警时设备的Json参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.RecoveryParamsJson">
            <summary>
            恢复报警时的Json参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_AlarmInfoHistory.CollectData">
            <summary>
            发生告警时采集值
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_DayEnergy">
            <summary>
            日能耗
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_DayEnergy.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_DayEnergy.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_DayEnergy.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_DayEnergy.CollectData">
            <summary>
            采集值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_DayEnergy.DifData">
            <summary>
            能耗值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_DayEnergy.DifFee">
            <summary>
            能耗费用
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_FireAlarmInfo">
            <summary>
            Data_FireAlarmInfo
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireAlarmInfo.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireAlarmInfo.FireDeviceType">
            <summary>
            消防设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireAlarmInfo.AlarmText">
            <summary>
            消防告警信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireAlarmInfo.Status">
            <summary>
            状态：1-火警告警 2-故障 0-正常即手动确认恢复正常或者推送回复正常 3-联动信息（联动信息推送复位（复位针对1-火警告警 2-故障）,状态Status固定不变，更新ConfirmUser、ConfirmTime；其他联动信息状态为3，直接保存）
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireAlarmInfo.HappenTime">
            <summary>
            发生时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireAlarmInfo.ConfirmUser">
            <summary>
            确认人
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireAlarmInfo.ConfirmTime">
            <summary>
            确认恢复时间
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_FireDevice">
            <summary>
            Data_FireDevice
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireDevice.FireDeviceType">
            <summary>
            消防设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_FireDevice.DeviceCount">
            <summary>
            某种消防设备类型设备数量
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_HourEnergy">
            <summary>
            小时能耗
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_HourEnergy.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_HourEnergy.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_HourEnergy.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_HourEnergy.CollectData">
            <summary>
            采集值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_HourEnergy.DifData">
            <summary>
            能耗值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_HourEnergy.DifFee">
            <summary>
            能耗费用
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_Inspection">
            <summary>
            设备巡检
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Inspection.InspectionID">
            <summary>
            巡检编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Inspection.Day">
            <summary>
            巡检日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Inspection.BeginTime">
            <summary>
            开始巡检时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Inspection.EndTime">
            <summary>
            结束巡检时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_Inspection.InspectionUser">
            <summary>
            巡检人
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_InspectionItem">
            <summary>
            巡检详细
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_InspectionItem.InspectionItemID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_InspectionItem.InspectionID">
            <summary>
            巡检编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_InspectionItem.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_InspectionItem.CheckContent">
            <summary>
            检测项编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_InspectionItem.IsPass">
            <summary>
            是否通过
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_InspectionItem.Handle">
            <summary>
            处理
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Data_RealData">
            <summary>
            实时数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_RealData.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_RealData.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_RealData.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_RealData.CollectData">
            <summary>
            采集值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Data_RealData.IsCompute">
            <summary>
            是否是计算数据
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_AlarmConfig">
            <summary>
            报警配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.AlarmKey">
            <summary>
            报警唯一标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.Expression">
            <summary>
            报警表达式
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.AlarmTime">
            <summary>
            报警时间段格式如：00:00-02:00;00:00-03:30
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.AlarmTypeID">
            <summary>
            报警类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.ContinueTime">
            <summary>
            持续时间(秒)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.SouceText">
            <summary>
            报警原始文本。如：2#空压机 电压异常,当前值：6_12。
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.IsUse">
            <summary>
            是否使用
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_AlarmConfig.IsEvent">
            <summary>
            是否是事件
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_DataMapping">
            <summary>
            设备采集数据映射+计算配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DataMapping.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DataMapping.DataCode">
            <summary>
            数据标识编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DataMapping.MeterID">
            <summary>
            仪表编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DataMapping.DataID">
            <summary>
            采集数据编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DataMapping.Expression">
            <summary>
            计算公式
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_DeviceProperty">
            <summary>
            设备属性
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceProperty.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceProperty.Code">
            <summary>
            设备属性编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceProperty.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_Device">
            <summary>
            设备信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.RoomID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.DeviceName">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.IsDisplay">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.MasterDeviceID">
            <summary>
            主设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.TransformerID">
            <summary>
            所属变压器
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.IsImportant">
            <summary>
            是否是重点设备
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.IsDataEntry">
            <summary>
            是否可手工录入，1是，0否
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.ParentIDs">
            <summary>
            上级设备
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.FloorID">
            <summary>
            楼层编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Device.IsDevice">
            <summary>
            是否设备
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_DeviceArchives">
            <summary>
            Info_DeviceArchives
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.DeviceCode">
            <summary>
            设备编号，客户输入（注意并非是EFOS系统内设备编号），可空
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.ManufacturingNumber">
            <summary>
            出厂编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.DeviceName">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.DeviceID">
            <summary>
            设备系统内编号，可为空，为空时代表非监测对象设备
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.SpecificationsCode">
            <summary>
            型号编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.ManufacturingTime">
            <summary>
            出厂日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.InstallTime">
            <summary>
            安装日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.InstallCompany">
            <summary>
            安装单位
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.InstallLocation">
            <summary>
            安装位置
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.MaintenanceUser">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.PutIntoOperationTime">
            <summary>
            投运日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.PurchaseTime">
            <summary>
            购买时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.AcceptanceTime">
            <summary>
            验收日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.WarrantyExpirationTime">
            <summary>
            保修期截止日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchives.Params">
            <summary>
            Params
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_DeviceArchivesFile">
            <summary>
            设备档案文档
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesFile.FileID">
            <summary>
            文档编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesFile.DeviceArchiveID">
            <summary>
            设备档案编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesFile.FileName">
            <summary>
            文档名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesFile.FilePath">
            <summary>
            文档路径
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesFile.UpLoadUser">
            <summary>
            上传人
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesFile.UpLoadDate">
            <summary>
            上传时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesFile.FileType">
            <summary>
            文件类型：1-维修指引资料2-保养指引资料3-其他资料
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_DeviceArchivesParams">
            <summary>
            设备档案参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesParams.ParamsID">
            <summary>
            参数编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesParams.DeviceArchiveID">
            <summary>
            设备档案编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesParams.ParamsName">
            <summary>
            参数名
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesParams.ParamsValue">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_DeviceArchivesParams.ParamsUnit">
            <summary>
            参数单位
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_Floor">
            <summary>
            Info_Floor
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Floor.FloorID">
            <summary>
            楼层编号，自增长
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Floor.FloorName">
            <summary>
            楼层名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Floor.Sort">
            <summary>
            排序，楼层序号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Floor.BIMUrl">
            <summary>
            BIM楼层Url
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_LogOperation">
            <summary>
            项目操作日志
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_LogOperation.OperationID">
            <summary>
            日志编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_LogOperation.ModularName">
            <summary>
            操作模块
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_LogOperation.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_LogOperation.UserName">
            <summary>
            操作人员
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_LogOperation.IP">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_LogOperation.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_MaintenanceDefaultStatus">
            <summary>
            Info_MaintenanceDefaultStatus
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceDefaultStatus.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceDefaultStatus.MaintenanceSystemCode">
            <summary>
            维护系统编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceDefaultStatus.MaintenanceStatusContent">
            <summary>
            系统维护状态文本内容
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceDefaultStatus.MaintenanceStatusValue">
            <summary>
            系统维护状态数据内容
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceDefaultStatus.Unit">
            <summary>
            数据单位
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_MaintenancePlan">
            <summary>
            Info_MaintenancePlan
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenancePlan.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenancePlan.DateTime">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenancePlan.Plan">
            <summary>
            某日计划内容
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_MaintenanceStatus">
            <summary>
            Info_MaintenanceStatus
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceStatus.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceStatus.DateTime">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceStatus.MaintenanceSystemCode">
            <summary>
            维护系统编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceStatus.MaintenanceStatusContent">
            <summary>
            系统维护状态文本内容
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceStatus.MaintenanceStatusValue">
            <summary>
            系统维护状态数据内容
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_MaintenanceStatus.Unit">
            <summary>
            数据单位
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_QuickDeployMap">
            <summary>
            一键部署设备仪表对应关系实体类
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_QuickDeployMap.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_QuickDeployMap.RoomID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_QuickDeployMap.MeterID">
            <summary>
            仪表编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_QuickDeployMap.Params">
            <summary>
            参数
            </summary>        
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_Room">
            <summary>
            设备房间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Room.RoomID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Room.RoomName">
            <summary>
            房价名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Room.SystemCode">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Room.Params">
            <summary>
            房间参数Json
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Room.StackID">
            <summary>
            所属数据栈编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Room.RoomType">
            <summary>
            房间类型编号，1配电机房、2发电机房、3生活水泵房、4消防泵房
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_Room.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_RoomDeviceType">
            <summary>
            设备房间存放的设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_RoomDeviceType.RoomID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_RoomDeviceType.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_RoomDeviceType.Params">
            <summary>
            参数Json
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_SystemParams">
            <summary>
            系统参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_SystemParams.SystemCode">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_SystemParams.Params">
            <summary>
            系统参数Json
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Info_WorkCycle">
            <summary>
            作息时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_WorkCycle.CycleID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_WorkCycle.CycleName">
            <summary>
            作息说明
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_WorkCycle.Week">
            <summary>
            星期。星期一到星期日
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Info_WorkCycle.Time">
            <summary>
            作息时间：按周+时间，时间排班。
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Log_Exception">
            <summary>
            异常日志
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Exception.ExceptionID">
            <summary>
            异常日志编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Exception.Message">
            <summary>
            日志信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Exception.StackTrace">
            <summary>
            堆栈信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Exception.Params">
            <summary>
            异常参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Exception.CreateTime">
            <summary>
            异常时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Exception.Type">
            <summary>
            接口类型App、PC
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Exception.MethodName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Log_Operation">
            <summary>
            操作日志
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Operation.OperationID">
            <summary>
            日志编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Operation.ModularName">
            <summary>
            操作模块
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Operation.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Operation.UserName">
            <summary>
            操作人员
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Operation.IP">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Log_Operation.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Point_Compute">
            <summary>
            数据计算点
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_Compute.PointCode">
            <summary>
            数据计算点编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_Compute.PointName">
            <summary>
            数据计算点名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_Compute.ParentCode">
            <summary>
            上级编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_Compute.PointType">
            <summary>
            数据计算点类型[1.项目总量,2.中央空调总量,3.公共用量,4.分项用量,5.工艺]
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_Compute.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Point_ComputeEnergy">
            <summary>
            计算点能耗
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeEnergy.ComputeEnergyID">
            <summary>
            计算点能耗编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeEnergy.PointCode">
            <summary>
            计算点编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeEnergy.PointDataCode">
            <summary>
            计算点能耗数据标识编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeEnergy.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeEnergy.Sign">
            <summary>
            计算符号(1或-1来表示)。1=加,-1=减
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Point_ComputeRealData">
            <summary>
            计算点实时数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeRealData.PointCode">
            <summary>
            计算点编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeRealData.DataCode">
            <summary>
            计算数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeRealData.Expression">
            <summary>
            计算点表达式
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeRealData.MaxValue">
            <summary>
            最大值(如:最大负荷)
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeRealData.MinValue">
            <summary>
            最小值(如:最小负荷)
            </summary>
        </member>
        <member name="T:EFOS.Data.Apply.Model.Point_ComputeYield">
            <summary>
            计算点产量或单位面积
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeYield.PointCode">
            <summary>
            计算点编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeYield.ProductType">
            <summary>
            产品类型：1.单位面积,2.单位产品，3.人均客流量
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeYield.TimeType">
            <summary>
            TimeType
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeYield.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeYield.CollectData">
            <summary>
            单产量或面积
            </summary>
        </member>
        <member name="P:EFOS.Data.Apply.Model.Point_ComputeYield.YieldValue">
            <summary>
            YieldValue
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Acc_FunctionDao">
            <summary>
            运营平台系统功能信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_FunctionDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_FunctionDao.SaveOrUpdate(EFOS.Data.Master.Model.Acc_Function)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_FunctionDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_FunctionDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_FunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Acc_PasswordProtectionDao">
            <summary>
            密码保护数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_PasswordProtectionDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="Question">密码问题</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_PasswordProtectionDao.SaveOrUpdate(EFOS.Data.Master.Model.Acc_PasswordProtection)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_PasswordProtectionDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="Question">密码问题</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_PasswordProtectionDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="Question">密码问题</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_PasswordProtectionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Acc_RoleDao">
            <summary>
            运营功能角色数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FRoleID">角色编号,自动增长</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleDao.SaveOrUpdate(EFOS.Data.Master.Model.Acc_Role)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FRoleID">角色编号,自动增长</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FRoleID">角色编号,自动增长</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Acc_RoleAppFunctionDao">
            <summary>
            运营平台角色对应的App功能信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleAppFunctionDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="RoleID">角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleAppFunctionDao.SaveOrUpdate(EFOS.Data.Master.Model.Acc_RoleAppFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleAppFunctionDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="RoleID">角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleAppFunctionDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="RoleID">角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleAppFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Acc_RoleFunctionDao">
            <summary>
            运营平台角色对应的功能信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleFunctionDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="RoleID">角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleFunctionDao.SaveOrUpdate(EFOS.Data.Master.Model.Acc_RoleFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleFunctionDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="RoleID">角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleFunctionDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="RoleID">角色编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_RoleFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Acc_UserDeptDao">
            <summary>
            用户管辖部门信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserDeptDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="DeptCode">部门编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserDeptDao.SaveOrUpdate(EFOS.Data.Master.Model.Acc_UserDept)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserDeptDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="DeptCode">部门编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserDeptDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="DeptCode">部门编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserDeptDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Acc_UserInfoDao">
            <summary>
            用户信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserInfoDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserInfoDao.SaveOrUpdate(EFOS.Data.Master.Model.Acc_UserInfo)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserInfoDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserInfoDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserInfoDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Acc_UserPlatformDao">
            <summary>
            用户平台信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserPlatformDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="PlatformCode">平台编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserPlatformDao.SaveOrUpdate(EFOS.Data.Master.Model.Acc_UserPlatform)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserPlatformDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="PlatformCode">平台编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserPlatformDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="PlatformCode">平台编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Acc_UserPlatformDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Api_ApiPrjDao">
            <summary>
            API产商项目权限数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Api_ApiPrjDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FRoleID">API编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Api_ApiPrjDao.SaveOrUpdate(EFOS.Data.Master.Model.Api_ApiPrj)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Api_ApiPrjDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FRoleID">API编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Api_ApiPrjDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FRoleID">API编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Api_ApiPrjDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_AlarmTypeDao">
            <summary>
            报警类型数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AlarmTypeDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="AlarmTypeID">报警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AlarmTypeDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_AlarmType)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AlarmTypeDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="AlarmTypeID">报警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AlarmTypeDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="AlarmTypeID">报警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AlarmTypeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_AppFunctionDao">
            <summary>
            监控平台App功能数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppFunctionDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppFunctionDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_AppFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppFunctionDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppFunctionDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_AppIndexDao">
            <summary>
            Apply_AppIndex数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppIndexDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppIndexDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_AppIndex)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppIndexDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppIndexDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppIndexDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_AppVersionDao">
            <summary>
            手机App版本信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppVersionDao.GetModel(System.String,System.String,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="Version">版本编号</param>
            <param name="AppSystem">操作系统。android,ios</param>
            <param name="AppType">软件类型:测试版,正式版</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppVersionDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_AppVersion)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppVersionDao.Delete(System.String,System.String,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="Version">版本编号</param>
            <param name="AppSystem">操作系统。android,ios</param>
            <param name="AppType">软件类型:测试版,正式版</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppVersionDao.IsExists(System.String,System.String,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="Version">版本编号</param>
            <param name="AppSystem">操作系统。android,ios</param>
            <param name="AppType">软件类型:测试版,正式版</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_AppVersionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_BlocDao">
            <summary>
            集团信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_BlocDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="BlocCode">集团编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_BlocDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Bloc)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_BlocDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="BlocCode">集团编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_BlocDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="BlocCode">集团编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_BlocDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_CommonParamsDao">
            <summary>
            项目属性信息表数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CommonParamsDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CommonParamsDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_CommonParams)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CommonParamsDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CommonParamsDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CommonParamsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_CumulativeDataItemDao">
            <summary>
            累计量数据标识数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CumulativeDataItemDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CumulativeDataItemDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_CumulativeDataItem)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CumulativeDataItemDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CumulativeDataItemDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_CumulativeDataItemDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeptDao">
            <summary>
            部门信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeptDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="DeptCode">部门编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeptDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Dept)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeptDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="DeptCode">部门编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeptDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeptCode">部门编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeptDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeviceMaterialDao">
            <summary>
            设备物料清单数据访问
            </summary>
            <summary>
            数据访问(自定义部分类，扩展类的方法，实现与自动生成的代码分离,支持DataTable,DataSet,存储过程等)
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceMaterialDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceMaterialDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceMaterial)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceMaterialDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceMaterialDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceMaterialDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DevicePropertyDao">
            <summary>
            设备类型属性数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DevicePropertyDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="Code">属性编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DevicePropertyDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceProperty)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DevicePropertyDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="Code">属性编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DevicePropertyDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="Code">属性编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DevicePropertyDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DataItemDao">
            <summary>
            数据标识数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataItemDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataItemDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DataItem)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataItemDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataItemDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataItemDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DataStackDao">
            <summary>
            数据找信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataStackDao.GetModel(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">ID</param>
            <param name="ProjectCode">项目编号</param>
            <param name="PlatformCode">平台编号</param>
            <param name="StackID">数据栈编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataStackDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DataStack)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataStackDao.Delete(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">ID</param>
            <param name="ProjectCode">项目编号</param>
            <param name="PlatformCode">平台编号</param>
            <param name="StackID">数据栈编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataStackDao.IsExists(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">ID</param>
            <param name="ProjectCode">项目编号</param>
            <param name="PlatformCode">平台编号</param>
            <param name="StackID">数据栈编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DataStackDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeviceTypeAlarmDao">
            <summary>
            设备类型报警配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeAlarmDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeAlarmDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceTypeAlarm)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeAlarmDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeAlarmDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeAlarmDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeviceTypeArchivesFileDao">
            <summary>
            Apply_DeviceTypeArchivesFile数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeArchivesFileDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FileID">设备类型文档自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeArchivesFileDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeArchivesFileDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FileID">设备类型文档自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeArchivesFileDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FileID">设备类型文档自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeArchivesFileDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeviceTypeDao">
            <summary>
            设备类型数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceType">DeviceType</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceType)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceType">DeviceType</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceType">DeviceType</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeviceTypeDataEntryDao">
            <summary>
            设备类型数据录入项数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDataEntryDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">设备类型需录入的数据标识项</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDataEntryDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceTypeDataEntry)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDataEntryDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">设备类型需录入的数据标识项</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDataEntryDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">设备类型需录入的数据标识项</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeDataEntryDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeviceTypeMaterialDao">
            <summary>
            设备类型物料清单数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeMaterialDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="MCode">物料编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeMaterialDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceTypeMaterial)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeMaterialDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="MCode">物料编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeMaterialDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="MCode">物料编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeMaterialDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeviceTypeParamsDao">
            <summary>
            设备类型参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeParamsDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeParamsDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceTypeParams)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeParamsDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeParamsDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeParamsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_DeviceTypeShowParamsDao">
            <summary>
            设备类型App,PC显示参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeShowParamsDao.GetModel(System.Int32,System.String,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="ShowType">显示类型(PC或App)</param>
            <param name="Position">分组显示位置</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeShowParamsDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_DeviceTypeShowParams)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeShowParamsDao.Delete(System.Int32,System.String,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="ShowType">显示类型(PC或App)</param>
            <param name="Position">分组显示位置</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeShowParamsDao.IsExists(System.Int32,System.String,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="ShowType">显示类型(PC或App)</param>
            <param name="Position">分组显示位置</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_DeviceTypeShowParamsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_FireDeviceTypeDao">
            <summary>
            Apply_FireDeviceType数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_FireDeviceTypeDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FireDeviceType">消防设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_FireDeviceTypeDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_FireDeviceType)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_FireDeviceTypeDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FireDeviceType">消防设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_FireDeviceTypeDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FireDeviceType">消防设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_FireDeviceTypeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_IndustryAppFunctionDao">
            <summary>
            行业的具有的App功能数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppFunctionDao.GetModel(System.String,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppFunctionDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_IndustryAppFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppFunctionDao.Delete(System.String,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppFunctionDao.IsExists(System.String,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_IndustryAppIndexDao">
            <summary>
            Apply_IndustryAppIndex数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppIndexDao.GetModel(System.String,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppIndexDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_IndustryAppIndex)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppIndexDao.Delete(System.String,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppIndexDao.IsExists(System.String,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryAppIndexDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_IndustryDao">
            <summary>
            行业信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="IndustryCode">行业编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Industry)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="IndustryCode">行业编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="IndustryCode">行业编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_IndustrySystemDao">
            <summary>
            行业系统信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustrySystemDao.GetModel(System.String,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="IndustryCode">行业编码</param>
            <param name="SystemCode">系统编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustrySystemDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_IndustrySystem)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustrySystemDao.Delete(System.String,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="IndustryCode">行业编码</param>
            <param name="SystemCode">系统编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustrySystemDao.IsExists(System.String,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="IndustryCode">行业编码</param>
            <param name="SystemCode">系统编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustrySystemDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_IndustryWebFunctionDao">
            <summary>
            行业的具有的Web功能数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryWebFunctionDao.GetModel(System.String,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryWebFunctionDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_IndustryWebFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryWebFunctionDao.Delete(System.String,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryWebFunctionDao.IsExists(System.String,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="IndustryCode">行业编号</param>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IndustryWebFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_InspectionContentDao">
            <summary>
            设备类型巡检项数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_InspectionContentDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ContentID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_InspectionContentDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_InspectionContent)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_InspectionContentDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ContentID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_InspectionContentDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ContentID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_InspectionContentDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_IRoleAppIndexDao">
            <summary>
            Apply_IRoleAppIndex数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleAppIndexDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="IRoleID">指标角色编号</param>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleAppIndexDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_IRoleAppIndex)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleAppIndexDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="IRoleID">指标角色编号</param>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleAppIndexDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="IRoleID">指标角色编号</param>
            <param name="IndexCode">指标编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleAppIndexDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_IRoleDao">
            <summary>
            Apply_IRole数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="RoleID">指标角色表自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_IRole)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="RoleID">指标角色表自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="RoleID">指标角色表自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_IRoleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_MaintenanceSystemDao">
            <summary>
            Apply_MaintenanceSystem数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaintenanceSystemDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="MaintenanceSystemCode">维护系统编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaintenanceSystemDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_MaintenanceSystem)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaintenanceSystemDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="MaintenanceSystemCode">维护系统编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaintenanceSystemDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="MaintenanceSystemCode">维护系统编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaintenanceSystemDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_ManagementDao">
            <summary>
            管理部信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManagementDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="MCode">管理部编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManagementDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Management)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManagementDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="MCode">管理部编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManagementDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="MCode">管理部编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManagementDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_ManufacturerDao">
            <summary>
            Apply_Manufacturer数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManufacturerDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">厂商自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManufacturerDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Manufacturer)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManufacturerDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">厂商自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManufacturerDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">厂商自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ManufacturerDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_MaterialDao">
            <summary>
            Apply_Material数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaterialDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="MCode">物料编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaterialDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Material)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaterialDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="MCode">物料编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaterialDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="MCode">物料编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MaterialDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_MeterSpecificationsDao">
            <summary>
            Apply_MeterSpecifications数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterSpecificationsDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="StandardId">StandardId</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterSpecificationsDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_MeterSpecifications)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterSpecificationsDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="StandardId">StandardId</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterSpecificationsDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="StandardId">StandardId</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterSpecificationsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_MeterTypeDao">
            <summary>
            Apply_MeterType数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterTypeDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="MeterTypeCode">MeterTypeCode</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterTypeDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_MeterType)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterTypeDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="MeterTypeCode">MeterTypeCode</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterTypeDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="MeterTypeCode">MeterTypeCode</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_MeterTypeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_OwnerPageDao">
            <summary>
            面向业主App页面数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_OwnerPageDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="PageCode">页面编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_OwnerPageDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_OwnerPage)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_OwnerPageDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="PageCode">页面编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_OwnerPageDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="PageCode">页面编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_OwnerPageDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_PlatformDao">
            <summary>
            平台信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PlatformDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="PlatformCode">平台编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PlatformDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Platform)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PlatformDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="PlatformCode">平台编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PlatformDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="PlatformCode">平台编码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PlatformDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_ProjectDao">
            <summary>
            项目信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PlatformCode">平台编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Project)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PlatformCode">平台编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PlatformCode">平台编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_ProjectEnergyDataDao">
            <summary>
            Apply_ProjectEnergyData数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectEnergyDataDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目总量能耗及费用历史数据表</param>
            <param name="DataCode">累积量长数据标识（当日、当月、今年等）</param>
            <param name="CollectTime">计算出结果的时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectEnergyDataDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_ProjectEnergyData)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectEnergyDataDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目总量能耗及费用历史数据表</param>
            <param name="DataCode">累积量长数据标识（当日、当月、今年等）</param>
            <param name="CollectTime">计算出结果的时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectEnergyDataDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目总量能耗及费用历史数据表</param>
            <param name="DataCode">累积量长数据标识（当日、当月、今年等）</param>
            <param name="CollectTime">计算出结果的时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_ProjectEnergyDataDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_PublishPageDao">
            <summary>
            Apply_PublishPage数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PublishPageDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PublishPageDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_PublishPage)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PublishPageDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PublishPageDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_PublishPageDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_SpcificationsArchiveFileDao">
            <summary>
            Apply_SpcificationsArchiveFile数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpcificationsArchiveFileDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">设备型号文档自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpcificationsArchiveFileDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpcificationsArchiveFileDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">设备型号文档自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpcificationsArchiveFileDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">设备型号文档自增编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpcificationsArchiveFileDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_SpecificationsDao">
            <summary>
            Apply_Specifications数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpecificationsDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="Code">规格型号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpecificationsDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_Specifications)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpecificationsDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="Code">规格型号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpecificationsDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="Code">规格型号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SpecificationsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_SubscribeProjectDao">
            <summary>
            某业主微信关注的项目列表数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SubscribeProjectDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="OpenID">微信系统微信号唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SubscribeProjectDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_SubscribeProject)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SubscribeProjectDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="OpenID">微信系统微信号唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SubscribeProjectDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="OpenID">微信系统微信号唯一标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SubscribeProjectDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_SystemDao">
            <summary>
            设备系统数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SystemDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="SystemCode">系统编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SystemDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_System)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SystemDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="SystemCode">系统编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SystemDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="SystemCode">系统编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_SystemDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_UserAppIndexDao">
            <summary>
            Apply_UserAppIndex数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAppIndexDao.GetModel(System.Int32,System.String,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="IndexCode">指标编号</param>
            <param name="PlatformCode">平台编号（运营平台填“0”）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAppIndexDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_UserAppIndex)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAppIndexDao.Delete(System.Int32,System.String,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="IndexCode">指标编号</param>
            <param name="PlatformCode">平台编号（运营平台填“0”）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAppIndexDao.IsExists(System.Int32,System.String,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="IndexCode">指标编号</param>
            <param name="PlatformCode">平台编号（运营平台填“0”）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAppIndexDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_UserAttendanceDao">
            <summary>
            考勤信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAttendanceDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">考勤编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAttendanceDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_UserAttendance)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAttendanceDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">考勤编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAttendanceDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">考勤编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserAttendanceDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_UserBlocDao">
            <summary>
            集团信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserBlocDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="BlocCode">集团编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserBlocDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_UserBloc)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserBlocDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="BlocCode">集团编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserBlocDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="BlocCode">集团编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserBlocDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_UserIRoleDao">
            <summary>
            Apply_UserIRole数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserIRoleDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="IRoleID">指标角色编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserIRoleDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_UserIRole)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserIRoleDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="IRoleID">指标角色编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserIRoleDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="UserID">用户编号</param>
            <param name="IRoleID">指标角色编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_UserIRoleDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Apply_WebFunctionDao">
            <summary>
            监控平台Web功能数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_WebFunctionDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_WebFunctionDao.SaveOrUpdate(EFOS.Data.Master.Model.Apply_WebFunction)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_WebFunctionDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_WebFunctionDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="FunctionCode">功能编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Apply_WebFunctionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Break_DataStackDao">
            <summary>
            数据栈断线记录数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StackID">数据栈编号</param>
            <param name="BreakTime">断线时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackDao.SaveOrUpdate(EFOS.Data.Master.Model.Break_DataStack)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StackID">数据栈编号</param>
            <param name="BreakTime">断线时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StackID">数据栈编号</param>
            <param name="BreakTime">断线时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Break_DataStackHourDao">
            <summary>
            数据栈断线率统计数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackHourDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StackID">数据栈编号</param>
            <param name="BreakTime">断线时间(小时)</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackHourDao.SaveOrUpdate(EFOS.Data.Master.Model.Break_DataStackHour)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackHourDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StackID">数据栈编号</param>
            <param name="BreakTime">断线时间(小时)</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackHourDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="StackID">数据栈编号</param>
            <param name="BreakTime">断线时间(小时)</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_DataStackHourDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Break_MeterDao">
            <summary>
            仪表断线记录数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
            <param name="BreakTime">断线时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterDao.SaveOrUpdate(EFOS.Data.Master.Model.Break_Meter)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
            <param name="BreakTime">断线时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
            <param name="BreakTime">断线时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Break_MeterHourDao">
            <summary>
            仪表断线率统计数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterHourDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
            <param name="BreakTime">断线时间(小时)</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterHourDao.SaveOrUpdate(EFOS.Data.Master.Model.Break_MeterHour)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterHourDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
            <param name="BreakTime">断线时间(小时)</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterHourDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
            <param name="BreakTime">断线时间(小时)</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Break_MeterHourDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Config_DimensionDao">
            <summary>
            维度表数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Config_DimensionDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Config_DimensionDao.SaveOrUpdate(EFOS.Data.Master.Model.Config_Dimension)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Config_DimensionDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Config_DimensionDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Config_DimensionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Deploy_DeviceDao">
            <summary>
            快速安装的设备信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_DeviceDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号（自增长）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_DeviceDao.SaveOrUpdate(EFOS.Data.Master.Model.Deploy_Device)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_DeviceDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号（自增长）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_DeviceDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号（自增长）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_DeviceDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Deploy_MeterDao">
            <summary>
            一键部署的仪表信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_MeterDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_MeterDao.SaveOrUpdate(EFOS.Data.Master.Model.Deploy_Meter)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_MeterDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_MeterDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="MeterID">仪表编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_MeterDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Deploy_RoomDao">
            <summary>
            一键部署的监测区域（房间）信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_RoomDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="RoomAutoID">自增长编号（同步时，由于应用平台房间编号是自增，同步后更新Deploy_Room的RoomID,并根据此RoomAutoID获取设备的RoomID，作为应用平台设备的RoomID）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_RoomDao.SaveOrUpdate(EFOS.Data.Master.Model.Deploy_Room)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_RoomDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="RoomAutoID">自增长编号（同步时，由于应用平台房间编号是自增，同步后更新Deploy_Room的RoomID,并根据此RoomAutoID获取设备的RoomID，作为应用平台设备的RoomID）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_RoomDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="RoomAutoID">自增长编号（同步时，由于应用平台房间编号是自增，同步后更新Deploy_Room的RoomID,并根据此RoomAutoID获取设备的RoomID，作为应用平台设备的RoomID）</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Deploy_RoomDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Edas_AdjustArgumentsDao">
            <summary>
            仪表分段调节参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustArgumentsDao.GetModel(System.Int32,System.String,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="SectionID">分段编号</param>
            <param name="MeterType">仪表类型</param>
            <param name="WriteDataCode">写数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustArgumentsDao.SaveOrUpdate(EFOS.Data.Master.Model.Edas_AdjustArguments)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustArgumentsDao.Delete(System.Int32,System.String,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="SectionID">分段编号</param>
            <param name="MeterType">仪表类型</param>
            <param name="WriteDataCode">写数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustArgumentsDao.IsExists(System.Int32,System.String,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="SectionID">分段编号</param>
            <param name="MeterType">仪表类型</param>
            <param name="WriteDataCode">写数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustArgumentsDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Edas_AdjustSectionDao">
            <summary>
            仪表调节分段数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustSectionDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="SectionID">分段编号</param>
            <param name="MeterType">仪表类型</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustSectionDao.SaveOrUpdate(EFOS.Data.Master.Model.Edas_AdjustSection)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustSectionDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="SectionID">分段编号</param>
            <param name="MeterType">仪表类型</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustSectionDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="SectionID">分段编号</param>
            <param name="MeterType">仪表类型</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_AdjustSectionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Edas_DasClientDao">
            <summary>
            Das控制客户端数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DasClientDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ClientID">客户端编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DasClientDao.SaveOrUpdate(EFOS.Data.Master.Model.Edas_DasClient)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DasClientDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ClientID">客户端编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DasClientDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ClientID">客户端编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DasClientDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Edas_DataDao">
            <summary>
            Edas_Data数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DataDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="StandardID">StandardID</param>
            <param name="DataID">DataID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DataDao.SaveOrUpdate(EFOS.Data.Master.Model.Edas_Data)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DataDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="StandardID">StandardID</param>
            <param name="DataID">DataID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DataDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="StandardID">StandardID</param>
            <param name="DataID">DataID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_DataDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Edas_MeterDao">
            <summary>
            Edas_Meter数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_MeterDao.GetModel(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">ProjectCode</param>
            <param name="StackID">StackID</param>
            <param name="MeterID">MeterID</param>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_MeterDao.SaveOrUpdate(EFOS.Data.Master.Model.Edas_Meter)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_MeterDao.Delete(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">ProjectCode</param>
            <param name="StackID">StackID</param>
            <param name="MeterID">MeterID</param>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_MeterDao.IsExists(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">ProjectCode</param>
            <param name="StackID">StackID</param>
            <param name="MeterID">MeterID</param>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_MeterDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_MeterPropertyDao">
            <summary>
            仪表属性（仪表特殊参数）数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.Model.Edas_MeterPropertyDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="MeterAutoID">仪表自增编号</param>
            <param name="ParamCode">参数编号</param>
        </member>
        <member name="M:EFOS.Data.Master.Model.Edas_MeterPropertyDao.SaveOrUpdate(EFOS.Data.Master.Model.Edas_MeterProperty)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.Model.Edas_MeterPropertyDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="MeterAutoID">仪表自增编号</param>
            <param name="ParamCode">参数编号</param>
        </member>
        <member name="M:EFOS.Data.Master.Model.Edas_MeterPropertyDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="MeterAutoID">仪表自增编号</param>
            <param name="ParamCode">参数编号</param>
        </member>
        <member name="M:EFOS.Data.Master.Model.Edas_MeterPropertyDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Edas_ModbusDao">
            <summary>
            Edas_Modbus数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_ModbusDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_ModbusDao.SaveOrUpdate(EFOS.Data.Master.Model.Edas_Modbus)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_ModbusDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_ModbusDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">ID</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_ModbusDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Edas_OtherMeterConfigDao">
            <summary>
            Edas_OtherMeterConfig数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_OtherMeterConfigDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="StandardID">仪表标准ID</param>
            <param name="AppCode">APP识别码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_OtherMeterConfigDao.SaveOrUpdate(EFOS.Data.Master.Model.Edas_OtherMeterConfig)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_OtherMeterConfigDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="StandardID">仪表标准ID</param>
            <param name="AppCode">APP识别码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_OtherMeterConfigDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="StandardID">仪表标准ID</param>
            <param name="AppCode">APP识别码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Edas_OtherMeterConfigDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_AlarmFailureFactorDao">
            <summary>
            告警故障因素数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_AlarmFailureFactorDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="AlarmFailureFactorID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_AlarmFailureFactorDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_AlarmFailureFactor)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_AlarmFailureFactorDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="AlarmFailureFactorID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_AlarmFailureFactorDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="AlarmFailureFactorID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_AlarmFailureFactorDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_DeveloperDao">
            <summary>
            开发商信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_DeveloperDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_DeveloperDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_Developer)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_DeveloperDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_DeveloperDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_DeveloperDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_FailureFactorDao">
            <summary>
            故障原因数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FailureFactorDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="FactorID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FailureFactorDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_FailureFactor)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FailureFactorDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="FactorID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FailureFactorDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="FactorID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FailureFactorDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_FaultGuideLineDao">
            <summary>
            操作指南数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FaultGuideLineDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="GuideID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FaultGuideLineDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_FaultGuideLine)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FaultGuideLineDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="GuideID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FaultGuideLineDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="GuideID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_FaultGuideLineDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_MaintenanceDao">
            <summary>
            维保公司信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_Maintenance)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_MaintenanceInfoDao">
            <summary>
            项目--维保信息表数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceInfoDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="CompanyID">维保公司编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceInfoDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_MaintenanceInfo)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceInfoDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="CompanyID">维保公司编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceInfoDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="CompanyID">维保公司编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_MaintenanceInfoDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_ProjectInfoDao">
            <summary>
            项目属性信息表数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_ProjectInfoDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_ProjectInfoDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_ProjectInfo)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_ProjectInfoDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_ProjectInfoDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_ProjectInfoDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_PropertyManaDao">
            <summary>
            物管公司信息数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_PropertyMana)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Kn_PropertyManaInfoDao">
            <summary>
            项目属性信息表数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaInfoDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaInfoDao.SaveOrUpdate(EFOS.Data.Master.Model.Kn_PropertyManaInfo)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaInfoDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaInfoDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ID">编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Kn_PropertyManaInfoDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Log_ExceptionDao">
            <summary>
            异常日志数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_ExceptionDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ExceptionID">异常日志编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_ExceptionDao.SaveOrUpdate(EFOS.Data.Master.Model.Log_Exception)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_ExceptionDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ExceptionID">异常日志编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_ExceptionDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ExceptionID">异常日志编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_ExceptionDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Log_OperationDao">
            <summary>
            操作日志数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_OperationDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_OperationDao.SaveOrUpdate(EFOS.Data.Master.Model.Log_Operation)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_OperationDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_OperationDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="OperationID">日志编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Log_OperationDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.NoCheck_DeviceAlarmDao">
            <summary>
            忽略校验的设备告警数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceAlarmDao.GetModel(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="AlarmType">告警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceAlarmDao.SaveOrUpdate(EFOS.Data.Master.Model.NoCheck_DeviceAlarm)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceAlarmDao.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="AlarmType">告警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceAlarmDao.IsExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="AlarmType">告警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceAlarmDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.NoCheck_DeviceParamDao">
            <summary>
            忽略校验的设备参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceParamDao.GetModel(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceParamDao.SaveOrUpdate(EFOS.Data.Master.Model.NoCheck_DeviceParam)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceParamDao.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceParamDao.IsExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="DeviceID">设备编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_DeviceParamDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.NoCheck_PointComputeDao">
            <summary>
            忽略校验的计算点参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_PointComputeDao.GetModel(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointType">计算点编码</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_PointComputeDao.SaveOrUpdate(EFOS.Data.Master.Model.NoCheck_PointCompute)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_PointComputeDao.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointType">计算点编码</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_PointComputeDao.IsExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="PointType">计算点编码</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_PointComputeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.NoCheck_RoomDeviceTypeParamDao">
            <summary>
            忽略校验的房间设备类型参数数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_RoomDeviceTypeParamDao.GetModel(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="Type">房间设备类型类型，1房间编号，2设备类型编号</param>
            <param name="RoomDeviceType">房间/设备类型类型编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_RoomDeviceTypeParamDao.SaveOrUpdate(EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_RoomDeviceTypeParamDao.Delete(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="Type">房间设备类型类型，1房间编号，2设备类型编号</param>
            <param name="RoomDeviceType">房间/设备类型类型编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_RoomDeviceTypeParamDao.IsExists(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="Type">房间设备类型类型，1房间编号，2设备类型编号</param>
            <param name="RoomDeviceType">房间/设备类型类型编号</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.NoCheck_RoomDeviceTypeParamDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Online_CurUserProjectDao">
            <summary>
            Online_CurUserProject数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_CurUserProjectDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="UserID">用户编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_CurUserProjectDao.SaveOrUpdate(EFOS.Data.Master.Model.Online_CurUserProject)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_CurUserProjectDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="UserID">用户编号</param>
            <param name="OnlineTime">上线时间,用户访问项目时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_CurUserProjectDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="UserID">用户编号</param>
            <param name="OnlineTime">上线时间,用户访问项目时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_CurUserProjectDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Online_UserProjectDao">
            <summary>
            Online_UserProject数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_UserProjectDao.GetModel(System.Int32,System.Int32,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="UserID">用户编号</param>
            <param name="OnlineTime">上线时间,用户访问项目时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_UserProjectDao.SaveOrUpdate(EFOS.Data.Master.Model.Online_UserProject)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_UserProjectDao.Delete(System.Int32,System.Int32,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="UserID">用户编号</param>
            <param name="OnlineTime">上线时间,用户访问项目时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_UserProjectDao.IsExists(System.Int32,System.Int32,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="ProjectCode">项目编号</param>
            <param name="UserID">用户编号</param>
            <param name="OnlineTime">上线时间,用户访问项目时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Online_UserProjectDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Standard_DeviceTypeAlarmDao">
            <summary>
            设备（类型）告警，标准配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeAlarmDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="AlarmType">告警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeAlarmDao.SaveOrUpdate(EFOS.Data.Master.Model.Standard_DeviceTypeAlarm)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeAlarmDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="AlarmType">告警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeAlarmDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="AlarmType">告警类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeAlarmDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Standard_DeviceTypeParamDao">
            <summary>
            房间设备类型，标准配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeParamDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeParamDao.SaveOrUpdate(EFOS.Data.Master.Model.Standard_DeviceTypeParam)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeParamDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeParamDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="DeviceType">设备类型编号</param>
            <param name="DataCode">数据标识编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_DeviceTypeParamDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Standard_PointComputeDao">
            <summary>
            计算点参数，标准配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_PointComputeDao.GetModel(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="PointType">计算点类型</param>
            <param name="ValidType">计算类型。1，能耗计算，2，实时计算</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_PointComputeDao.SaveOrUpdate(EFOS.Data.Master.Model.Standard_PointCompute)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_PointComputeDao.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="PointType">计算点类型</param>
            <param name="ValidType">计算类型。1，能耗计算，2，实时计算</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_PointComputeDao.IsExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="PointType">计算点类型</param>
            <param name="ValidType">计算类型。1，能耗计算，2，实时计算</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_PointComputeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeDao">
            <summary>
            房间设备类型，标准配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="RoomType">房间类型编号</param>
            <param name="DeviceType">设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeDao.SaveOrUpdate(EFOS.Data.Master.Model.Standard_RoomDeviceType)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="RoomType">房间类型编号</param>
            <param name="DeviceType">设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="RoomType">房间类型编号</param>
            <param name="DeviceType">设备类型编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeParamDao">
            <summary>
            计算点参数，标准配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeParamDao.GetModel(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="RoomDeviceType">房间/设备类型参数</param>
            <param name="Type">类型。1，房间参数，2，设备类型参数</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeParamDao.SaveOrUpdate(EFOS.Data.Master.Model.Standard_RoomDeviceTypeParam)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeParamDao.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="RoomDeviceType">房间/设备类型参数</param>
            <param name="Type">类型。1，房间参数，2，设备类型参数</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeParamDao.IsExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="RoomDeviceType">房间/设备类型参数</param>
            <param name="Type">类型。1，房间参数，2，设备类型参数</param>
            <param name="DataCode">数据标识</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Standard_RoomDeviceTypeParamDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.StoredProcedureDao">
            <summary>
            存储过程
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetAutoPrimaryKey(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            取得自动编号
            </summary>
            <param name="prefix">前缀</param>
            <param name="length">长度</param>
            <param name="tableName">表名称</param>
            <param name="primaryKeyColumnName">主键字段名称</param>
            <param name="parentColumnName">上级字段名称</param>
            <param name="parentCode">上级编号</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetCurOnlineProject(System.String)">
            <summary>
            获取在线率情况
            </summary>
            <param name="exceptPlat"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetCurUserOffline(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            获取用户离线情况
            </summary>
            <param name="exceptPlat"></param>
            <param name="BlocCode"></param>
            <param name="MCode"></param>
            <param name="ProjectCode"></param>
            <param name="TimeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetCurProjectOffline(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            获取项目离线情况
            </summary>
            <param name="exceptPlat"></param>
            <param name="BlocCode"></param>
            <param name="MCode"></param>
            <param name="TimeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetStackBreakSta(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获取数据栈断线统计信息
            </summary>
            <param name="BeginDate"></param>
            <param name="EndDate"></param>
            <param name="PlatformCode"></param>
            <param name="BlocCode"></param>
            <param name="ProjectCode"></param>
            <param name="Search"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetStackBreakDetail(System.String,System.String,System.Int32)">
            <summary>
            获取数据栈断线明细
            </summary>
            <param name="BeginDate">开始时间</param>
            <param name="EndDate">结束时间</param>
            <param name="StackID">数据栈编号</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetUserDeptAttSta(System.String,System.String)">
            <summary>
            考勤统计
            </summary>
            <param name="UserID"></param>
            <param name="Date"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetDeptAttDetail(System.String,System.String)">
            <summary>
            考勤明细
            </summary>
            <param name="DeptCode"></param>
            <param name="Date"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetUserAttSta(System.String,System.String,System.String)">
            <summary>
            用户考勤统计，按月统计
            </summary>
            <param name="UserID">用户编号</param>
            <param name="DeptCode">部门编号</param>
            <param name="Date">年月</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetDeptUserWeekHourSta(System.String,System.String,System.String)">
            <summary>
            部门用户周工作时长统计，某人平均周工作时长，团队最长周工作时长，团队最短周工作时长，
            </summary>
            <param name="UserID">用户编号</param>
            <param name="DeptCode">部门编号</param>
            <param name="Date">年月</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetUserAttReport(System.String)">
            <summary>
            获取考勤统计报表，获取上月考勤报表
            </summary>
            <param name="UserID"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Data.Master.DAL.StoredProcedureDao.GetMeterBreakSta(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            仪表断线率统计
            </summary>
            <param name="BeginDate"></param>
            <param name="EndDate"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="PlatformCode"></param>
            <param name="BlocCode"></param>
            <param name="ProjectCode"></param>
            <returns></returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.UpLoad_PlatformDao">
            <summary>
            数据上传平台数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformDao.GetModel(System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="PlatformID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformDao.SaveOrUpdate(EFOS.Data.Master.Model.UpLoad_Platform)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformDao.Delete(System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="PlatformID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformDao.IsExists(System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="PlatformID">自动编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.UpLoad_PlatformProjectDao">
            <summary>
            上传项目数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformProjectDao.GetModel(System.Int32,System.Int32)">
            <summary>
            获取实体
            </summary>
            <param name="PlatformID">平台编号</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformProjectDao.SaveOrUpdate(EFOS.Data.Master.Model.UpLoad_PlatformProject)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformProjectDao.Delete(System.Int32,System.Int32)">
            <summary>
            删除实体
            </summary>
            <param name="PlatformID">平台编号</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformProjectDao.IsExists(System.Int32,System.Int32)">
            <summary>
            是否存在实体
            </summary>
            <param name="PlatformID">平台编号</param>
            <param name="ProjectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformProjectDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.UpLoad_PlatformUrlDao">
            <summary>
            上传平台对应的Url数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformUrlDao.GetModel(System.Int32,System.String)">
            <summary>
            获取实体
            </summary>
            <param name="PlatformID">平台编号</param>
            <param name="Url">上传地址</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformUrlDao.SaveOrUpdate(EFOS.Data.Master.Model.UpLoad_PlatformUrl)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformUrlDao.Delete(System.Int32,System.String)">
            <summary>
            删除实体
            </summary>
            <param name="PlatformID">平台编号</param>
            <param name="Url">上传地址</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformUrlDao.IsExists(System.Int32,System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="PlatformID">平台编号</param>
            <param name="Url">上传地址</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.UpLoad_PlatformUrlDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Weather_CityDao">
            <summary>
            天气采集城市配置数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_CityDao.GetModel(System.String)">
            <summary>
            获取实体
            </summary>
            <param name="CityCode">城市代码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_CityDao.SaveOrUpdate(EFOS.Data.Master.Model.Weather_City)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_CityDao.Delete(System.String)">
            <summary>
            删除实体
            </summary>
            <param name="CityCode">城市代码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_CityDao.IsExists(System.String)">
            <summary>
            是否存在实体
            </summary>
            <param name="CityCode">城市代码</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_CityDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Weather_DayDataDao">
            <summary>
            天气日数据数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_DayDataDao.GetModel(System.String,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="CityCode">城市代码</param>
            <param name="CollectDate">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_DayDataDao.SaveOrUpdate(EFOS.Data.Master.Model.Weather_DayData)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_DayDataDao.Delete(System.String,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="CityCode">城市代码</param>
            <param name="CollectDate">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_DayDataDao.IsExists(System.String,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="CityCode">城市代码</param>
            <param name="CollectDate">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_DayDataDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.DAL.Weather_HourDataDao">
            <summary>
            天气当前小时数据数据访问
            </summary>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_HourDataDao.GetModel(System.String,System.DateTime)">
            <summary>
            获取实体
            </summary>
            <param name="CityCode">城市代码</param>
            <param name="CollectDate">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_HourDataDao.SaveOrUpdate(EFOS.Data.Master.Model.Weather_HourData)">
            <summary>
            更新或增加实体
            </summary>
            <param name="model">实体对象</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_HourDataDao.Delete(System.String,System.DateTime)">
            <summary>
            删除实体
            </summary>
            <param name="CityCode">城市代码</param>
            <param name="CollectDate">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_HourDataDao.IsExists(System.String,System.DateTime)">
            <summary>
            是否存在实体
            </summary>
            <param name="CityCode">城市代码</param>
            <param name="CollectDate">采集时间</param>
        </member>
        <member name="M:EFOS.Data.Master.DAL.Weather_HourDataDao.LoadAllWithPage(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Linq2SQL单表分页
            </summary>
            <param name="count">行数</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页面大小</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Data.Master.Model.Acc_Function">
            <summary>
            运营平台系统功能信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.FunctionCode">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.ParentCode">
            <summary>
            上级功能编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.FunctionName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.Url">
            <summary>
            功能Url
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.JsonParams">
            <summary>
            Json参数(扩展备用)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.Sort">
            <summary>
            功能排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.Remarks">
            <summary>
            Remarks
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Function.IsUse">
            <summary>
            是否使用
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Acc_PasswordProtection">
            <summary>
            密码保护
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_PasswordProtection.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_PasswordProtection.Question">
            <summary>
            密码问题
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_PasswordProtection.Answer">
            <summary>
            问题的答案(MD5加密)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Acc_Role">
            <summary>
            运营功能角色
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Role.FRoleID">
            <summary>
            角色编号,自动增长
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Role.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_Role.Remarks">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Acc_RoleAppFunction">
            <summary>
            运营平台角色对应的App功能信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_RoleAppFunction.RoleID">
            <summary>
            角色编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_RoleAppFunction.FunctionCode">
            <summary>
            App功能编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_RoleAppFunction.IsHomePage">
            <summary>
            是否为角色功能首页
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Acc_RoleFunction">
            <summary>
            运营平台角色对应的功能信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_RoleFunction.RoleID">
            <summary>
            角色编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_RoleFunction.FunctionCode">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Acc_UserDept">
            <summary>
            用户管辖部门信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserDept.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserDept.DeptCode">
            <summary>
            部门编码
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Acc_UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.Account">
            <summary>
            用户帐号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.UserName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.Password">
            <summary>
            用户密码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.UserType">
            <summary>
            用户类型(0.超级用户，1.平台管理员，2.平台用户，3.项目用户)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.FunctionRoleID">
            <summary>
            运营功能角色编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.IsUse">
            <summary>
            是否使用
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.Phone">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.EMail">
            <summary>
            邮箱地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.OpenId">
            <summary>
            微信用户关注微信公众号产生的唯一编号OpenId
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.HeadPortrait">
            <summary>
            头像路径
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.DeviceToken">
            <summary>
            手机标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.IsStaOnline">
            <summary>
            是否统计在线率情况
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.IsCustomerServices">
            <summary>
            是否为客服
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.Title">
            <summary>
            职称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.WeChatNo">
            <summary>
            微信号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.RongCloudToken">
            <summary>
            融云聊天Token
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.IsPublic">
            <summary>
            是否为公众号用户，公众号用户信息开放 
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.BlocCode">
            <summary>
            所属集团
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.DeptCode">
            <summary>
            所属部门
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.CreateTime">
            <summary>
            用户创建时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserInfo.ExpirationDate">
            <summary>
            用户失效日期
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Acc_UserPlatform">
            <summary>
            用户平台信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserPlatform.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Acc_UserPlatform.PlatformCode">
            <summary>
            平台编码
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Api_ApiPrj">
            <summary>
            API产商项目权限信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Api_ApiPrj.ID">
            <summary>
            API编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Api_ApiPrj.Name">
            <summary>
            API名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Api_ApiPrj.Token">
            <summary>
            口令
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Api_ApiPrj.PCodes">
            <summary>
            项目编号集合
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_AlarmType">
            <summary>
            报警类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AlarmType.AlarmTypeID">
            <summary>
            报警类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AlarmType.AlarmTypeName">
            <summary>
            报警类型名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AlarmType.AlarmLevel">
            <summary>
            报警级别(1-事件、2-一般告警、3-严重告警)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AlarmType.AlarmColor">
            <summary>
            报警颜色
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AlarmType.SecurityLevel">
            <summary>
            SecurityLevel
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_AppFunction">
            <summary>
            监控平台App功能
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.FunctionCode">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.ParentCode">
            <summary>
            上级功能编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.FunctionName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.Url">
            <summary>
            功能Url
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.JsonParams">
            <summary>
            Json参数(扩展备用)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.Sort">
            <summary>
            功能排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.IsUse">
            <summary>
            是否使用
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.FunctionType">
            <summary>
            菜单类型(1=运营平台菜单,2=应用平台菜单,3=项目菜单)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppFunction.Remarks">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_AppIndex">
            <summary>
            Apply_AppIndex
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.IndexCode">
            <summary>
            指标编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.IndexName">
            <summary>
            指标名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.ParentCode">
            <summary>
            ParentCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.Icon">
            <summary>
            Icon
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.JsonParams">
            <summary>
            JsonParams
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.Sort">
            <summary>
            Sort
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.IsUse">
            <summary>
            IsUse
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppIndex.Type">
            <summary>
            指标类型(1=运营平台指标,2=应用平台集团界面指标,3=应用平台项目界面指标)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_AppVersion">
            <summary>
            手机App版本信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppVersion.Version">
            <summary>
            版本编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppVersion.AppSystem">
            <summary>
            操作系统。android,ios
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppVersion.AppType">
            <summary>
            软件类型:测试版,正式版
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppVersion.Content">
            <summary>
            更新内容
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppVersion.DownloadUrl">
            <summary>
            下载地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppVersion.Date">
            <summary>
            发布时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_AppVersion.Size">
            <summary>
            apk大小
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Bloc">
            <summary>
            集团信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Bloc.BlocCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Bloc.BlocName">
            <summary>
            集团名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Bloc.Token">
            <summary>
            集团取数令牌
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Bloc.ShortName">
            <summary>
            集团英文简称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Bloc.CompanyName">
            <summary>
            集团公司全称
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_CommonParams">
            <summary>
            运营功能角色
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CommonParams.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CommonParams.PBPCode">
            <summary>
            编号,Type=1平台编号，2集团编号，3项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CommonParams.Code">
            <summary>
            维度编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CommonParams.Value">
            <summary>
            维度值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CommonParams.Type">
            <summary>
            类型,1平台、2集团、3项目
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CommonParams.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_CumulativeDataItem">
            <summary>
            累计量数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CumulativeDataItem.DataCode">
            <summary>
            数据标识编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CumulativeDataItem.DataName">
            <summary>
            数据名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CumulativeDataItem.IsEnergy">
            <summary>
            是否是能耗。如：有功电度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CumulativeDataItem.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CumulativeDataItem.Coal">
            <summary>
            折标煤系数(1:10000。如:10000度电=?千克标煤)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_CumulativeDataItem.CO2">
            <summary>
            折CO2系数(1:10000。如:10000度电=?千克CO2排放量)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Dept">
            <summary>
            部门信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Dept.DeptCode">
            <summary>
            部门编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Dept.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Dept.ParentCode">
            <summary>
            上级编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Dept.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Dept.BlocCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceMaterial">
            <summary>
            设备物料清单
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceMaterial.ID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceMaterial.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceMaterial.MCode">
            <summary>
            物料编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceMaterial.Count">
            <summary>
            套件数量
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceMaterial.Remarks">
            <summary>
            备注说明
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceProperty">
            <summary>
            设备类型属性
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceProperty.Code">
            <summary>
            属性编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceProperty.Name">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceProperty.Type">
            <summary>
            属性类型(string,int)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceProperty.DataCode">
            <summary>
            关联DataCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceProperty.Unit">
            <summary>
            Unit
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DataItem">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.DataCode">
            <summary>
            数据标识编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.DataName">
            <summary>
            数据标识名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.IsEnergy">
            <summary>
            是否是能耗。如：有功电度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.RoundCount">
            <summary>
            保留小数位数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.MinValue">
            <summary>
            下限值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.MaxValue">
            <summary>
            上限值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.IsChange">
            <summary>
            是否是变化上传
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.SaveInterval">
            <summary>
            历史数据存储频率
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.Remarks">
            <summary>
            Remarks
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.State">
            <summary>
            状态(1=常用;2=非标;3=删除)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataItem.Type">
            <summary>
            类型(0=既控制又采集，1=采集类型，2=控制类型)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DataStack">
            <summary>
            数据找信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.PlatformCode">
            <summary>
            平台编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.StackID">
            <summary>
            数据栈编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.StackName">
            <summary>
            数据栈名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.UploadServer">
            <summary>
            上传服务器地址,多个地址用分号隔开
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.VersionNo">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.IsUse">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.IsOldVersion">
            <summary>
            是否是旧版本的数据栈
            </summary>
        </member>
        <!-- 对于成员“P:EFOS.Data.Master.Model.Apply_DataStack.StatusCode”忽略有格式错误的 XML 注释 -->
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.RoomID">
            <summary>
            RoomID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.QuickDeployInfo">
            <summary>
            QuickDeployInfo
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.ComParamsInfo">
            <summary>
            数据栈串口参数Json对象
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.SIMCard">
            <summary>
            数据栈4G卡号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DataStack.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.DeviceType">
            <summary>
            DeviceType
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.ParentCode">
            <summary>
            上级设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.SystemCode">
            <summary>
            所属于系统
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.TypeName">
            <summary>
            类型名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.RunText">
            <summary>
            运行时显示文本
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.StopText">
            <summary>
            停止时显示文本
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.IsDisplay">
            <summary>
            是否显示（一键部署批量录入设备时作为设备的IsDisplay）
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceType.RunStatusDataName">
            <summary>
            运行状态显示文本
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm">
            <summary>
            设备类型报警配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.ID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.AlarmTypeID">
            <summary>
            报警类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.Expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.ContinueTime">
            <summary>
            持续时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.IsEvent">
            <summary>
            是否是事件
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.IsUse">
            <summary>
            是否使用该配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeAlarm.Remarks">
            <summary>
            备注信息
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile">
            <summary>
            Apply_DeviceTypeArchivesFile
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile.FileID">
            <summary>
            设备类型文档自增编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile.FileName">
            <summary>
            FileName
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile.FilePath">
            <summary>
            FilePath
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile.UploadUser">
            <summary>
            UploadUser
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile.UploadTime">
            <summary>
            UploadTime
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeArchivesFile.FileType">
            <summary>
            文件类型：1-维修指引资料2-保养指引资料3-其他资料
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceTypeDataEntry">
            <summary>
            设备类型数据录入项
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeDataEntry.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeDataEntry.DataCode">
            <summary>
            设备类型需录入的数据标识项
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeDataEntry.Sort">
            <summary>
            Sort
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceTypeMaterial">
            <summary>
            设备类型物料清单
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeMaterial.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeMaterial.MCode">
            <summary>
            物料编码
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceTypeParams">
            <summary>
            设备类型参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.Position">
            <summary>
            显示位置(A,B,C,D,E,F,G,H)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.AppPosition">
            <summary>
            在手机上显示的位置[A=上左,B=上右,C=下左,D=下右,E=下中]
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.AppGroupName">
            <summary>
            在手机上分组
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.AppGroupSort">
            <summary>
            在手机上分组排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.IsHistoryCurve">
            <summary>
            是否是默认历史曲线
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.IsStopDisplayParam">
            <summary>
            停止时是否显示参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeParams.IsImportant">
            <summary>
            是否是重点参数
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_DeviceTypeShowParams">
            <summary>
            设备类型App,PC显示参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeShowParams.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeShowParams.ShowType">
            <summary>
            显示类型(PC或App)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeShowParams.Position">
            <summary>
            分组显示位置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeShowParams.PositionName">
            <summary>
            参数分组标题
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_DeviceTypeShowParams.DataCodes">
            <summary>
            数据标识用逗号分割
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_FireDeviceType">
            <summary>
            Apply_FireDeviceType
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_FireDeviceType.FireDeviceType">
            <summary>
            消防设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_FireDeviceType.FireDeviceTypeName">
            <summary>
            消防设备类型名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_FireDeviceType.Type">
            <summary>
            类型：1-消防主机 2-联动控制柜
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Industry">
            <summary>
            行业信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Industry.IndustryCode">
            <summary>
            行业编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Industry.IndustryName">
            <summary>
            行业名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Industry.DefaultPage">
            <summary>
            行业默认页面
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Industry.IsDeclare">
            <summary>
            项目申报行业
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_IndustryAppFunction">
            <summary>
            行业的具有的App功能
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IndustryAppFunction.IndustryCode">
            <summary>
            行业编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IndustryAppFunction.FunctionCode">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_IndustryAppIndex">
            <summary>
            Apply_IndustryAppIndex
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IndustryAppIndex.IndustryCode">
            <summary>
            行业编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IndustryAppIndex.IndexCode">
            <summary>
            指标编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_IndustrySystem">
            <summary>
            行业系统信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IndustrySystem.IndustryCode">
            <summary>
            行业编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IndustrySystem.SystemCode">
            <summary>
            系统编码
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_IndustryWebFunction">
            <summary>
            行业的具有的Web功能
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IndustryWebFunction.IndustryCode">
            <summary>
            行业编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IndustryWebFunction.FunctionCode">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_InspectionContent">
            <summary>
            设备类型巡检项
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_InspectionContent.ContentID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_InspectionContent.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_InspectionContent.CheckContent">
            <summary>
            巡检内容
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_InspectionContent.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_InspectionContent.AlarmText">
            <summary>
            巡检不通过时文本即巡检告警文本
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_IRole">
            <summary>
            Apply_IRole
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IRole.RoleID">
            <summary>
            指标角色表自增编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IRole.RoleName">
            <summary>
            指标角色名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IRole.Remarks">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IRole.Type">
            <summary>
            指标角色类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IRole.PlarformCode">
            <summary>
            平台编号(运营平台时为空)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_IRoleAppIndex">
            <summary>
            Apply_IRoleAppIndex
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IRoleAppIndex.IRoleID">
            <summary>
            指标角色编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_IRoleAppIndex.IndexCode">
            <summary>
            指标编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_MaintenanceSystem">
            <summary>
            Apply_MaintenanceSystem
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MaintenanceSystem.MaintenanceSystemCode">
            <summary>
            维护系统编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MaintenanceSystem.MaintenanceSystemName">
            <summary>
            维护系统名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MaintenanceSystem.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Management">
            <summary>
            管理部信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Management.MCode">
            <summary>
            管理部编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Management.ParentCode">
            <summary>
            管理部上级编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Management.MName">
            <summary>
            管理部名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Management.Longitude">
            <summary>
            城市经度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Management.Latitude">
            <summary>
            城市纬度
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Manufacturer">
            <summary>
            Apply_Manufacturer
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Manufacturer.ID">
            <summary>
            厂商自增编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Manufacturer.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Manufacturer.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Material">
            <summary>
            Apply_Material
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Material.MCode">
            <summary>
            物料编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Material.MName">
            <summary>
            物料名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Material.Model">
            <summary>
            型号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Material.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_MeterSpecifications">
            <summary>
            Apply_MeterSpecifications
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterSpecifications.StandardId">
            <summary>
            StandardId
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterSpecifications.StandardName">
            <summary>
            StandardName
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterSpecifications.MeterTypeCode">
            <summary>
            MeterTypeCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterSpecifications.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterSpecifications.IsDeploy">
            <summary>
            IsDeploy
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_MeterType">
            <summary>
            Apply_MeterType
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterType.MeterTypeCode">
            <summary>
            MeterTypeCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterType.MeterTypeName">
            <summary>
            MeterTypeName
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterType.ParentCode">
            <summary>
            ParentCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_MeterType.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_OwnerPage">
            <summary>
            面向业主微信AppH5项目页面
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.PageCode">
            <summary>
            页面编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.ParentCode">
            <summary>
            上级编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.PageType">
            <summary>
            平台,集团,项目
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.PageName">
            <summary>
            页面名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.PageUrl">
            <summary>
            页面地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.ImgeUrl">
            <summary>
            ImgeUrl
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.PageParams">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_OwnerPage.IsUse">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Platform">
            <summary>
            平台信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.PlatformCode">
            <summary>
            平台编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.IndustryCode">
            <summary>
            行业编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.PlatformName">
            <summary>
            平台名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.WebSiteUrl">
            <summary>
            网站路径
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.DataServerWcfUrl">
            <summary>
            数据服务Wcf通讯地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.DataServerRedisUrl">
            <summary>
            数据服务的Redis地址：127.0.0.1:6379/1
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.SQLConnectionString">
            <summary>
            加密后的SQL数据库字符串
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.LANUrl">
            <summary>
            局域网(内网)内IP地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.IsNetwork">
            <summary>
            是否是物联平台
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Platform.IsMigrate">
            <summary>
            项目迁移平台
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_ProjectEnergyData">
            <summary>
            项目总量能耗及费用历史数据表
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_ProjectEnergyData.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_ProjectEnergyData.DataCode">
            <summary>
            累积量长数据标识（当日、当月、今年等）
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_ProjectEnergyData.CollectTime">
            <summary>
            计算出结果的时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_ProjectEnergyData.CollectData">
            <summary>
            底度（各设备底度之和）
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_ProjectEnergyData.DifData">
            <summary>
            用量（各设备用量之和）
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_ProjectEnergyData.DifFee">
            <summary>
            费用（各设备费用之和）
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Project">
            <summary>
            项目信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.PlatformCode">
            <summary>
            平台编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.MCode">
            <summary>
            管理部编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.BlocCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.ProjectName">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.CityCode">
            <summary>
            天气城市代码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.Address">
            <summary>
            项目地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.State">
            <summary>
            项目状态
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.Acreage">
            <summary>
            建筑面积㎡
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.CCProjectCode">
            <summary>
            外部项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.QuickDeployInfo">
            <summary>
            快速部署进度信息保存
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.IsDeploy">
            <summary>
            IsDeploy
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.OnlineTime">
            <summary>
            上线时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.CCMemberCode">
            <summary>
            加盟商代码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.AdminID">
            <summary>
            管理员用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.IsStaOnline">
            <summary>
            是否统计在线率情况
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.DatatCopyToProject">
            <summary>
            将数据分发到另外的项目用逗号分隔
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.CompanyName">
            <summary>
            项目公司全称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.CreateTime">
            <summary>
            项目创建时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.Longitude">
            <summary>
            项目经度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.Latitude">
            <summary>
            项目纬度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.IsNetwork">
            <summary>
            是否是物联项目
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Project.IndustryCode">
            <summary>
            行业类型编号,项目申报时选择的行业类型
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_PublishPage">
            <summary>
            Apply_PublishPage
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_PublishPage.ID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_PublishPage.BlocCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_PublishPage.FunctionCode">
            <summary>
            功能编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_PublishPage.Account">
            <summary>
            发布页面登录账号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_PublishPage.BlocSystemName">
            <summary>
            发布页面系统名称
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile">
            <summary>
            Apply_SpcificationsArchiveFile
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile.ID">
            <summary>
            设备型号文档自增编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile.SpecificationCode">
            <summary>
            SpecificationCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile.FileName">
            <summary>
            FileName
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile.FilePath">
            <summary>
            Path
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile.UploadUser">
            <summary>
            UploadUser
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile.UploadTime">
            <summary>
            UploadTime
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SpcificationsArchiveFile.FileType">
            <summary>
            文件类型：1-维修指引资料2-保养指引资料3-其他资料
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_Specifications">
            <summary>
            Apply_Specifications
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Specifications.Code">
            <summary>
            规格型号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Specifications.Name">
            <summary>
            规格名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Specifications.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Specifications.Manufacturer">
            <summary>
            生产厂家
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_Specifications.ServiceLife">
            <summary>
            使用年限
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_SubscribeProject">
            <summary>
            某业主微信关注的项目列表
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SubscribeProject.OpenID">
            <summary>
            微信系统微信号唯一标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_SubscribeProject.ProjectCodes">
            <summary>
            某业主微信号关注的项目列表(7,10,100)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_System">
            <summary>
            设备系统
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_System.SystemCode">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_System.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_System.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_UserAppIndex">
            <summary>
            Apply_UserAppIndex
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAppIndex.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAppIndex.IndexCode">
            <summary>
            指标编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAppIndex.PlatformCode">
            <summary>
            平台编号（运营平台填“0”）
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_UserAttendance">
            <summary>
            考勤信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAttendance.ID">
            <summary>
            考勤编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAttendance.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAttendance.Time">
            <summary>
            打卡时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAttendance.IsTravel">
            <summary>
            是否出差
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAttendance.Status">
            <summary>
            状态(1=上班,0=下班)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAttendance.Address">
            <summary>
            考勤地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserAttendance.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_UserBloc">
            <summary>
            集团信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserBloc.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserBloc.BlocCode">
            <summary>
            集团编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_UserIRole">
            <summary>
            Apply_UserIRole
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserIRole.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_UserIRole.IRoleID">
            <summary>
            指标角色编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Apply_WebFunction">
            <summary>
            监控平台Web功能
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.FunctionCode">
            <summary>
            功能编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.ParentCode">
            <summary>
            上级功能编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.FunctionName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.FunctionType">
            <summary>
            菜单类型(1=平台菜单,2=项目菜单)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.Url">
            <summary>
            功能Url
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.JsonParams">
            <summary>
            Json参数(扩展备用)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.Sort">
            <summary>
            功能排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.Remarks">
            <summary>
            Remarks
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Apply_WebFunction.IsUse">
            <summary>
            是否使用
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Break_DataStack">
            <summary>
            数据栈断线记录
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStack.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStack.StackID">
            <summary>
            数据栈编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStack.BreakTime">
            <summary>
            断线时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStack.RecoveryTime">
            <summary>
            断线恢复时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStack.Minute">
            <summary>
            本次断线持续时间(分钟)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Break_DataStackHour">
            <summary>
            数据栈断线率统计
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStackHour.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStackHour.StackID">
            <summary>
            数据栈编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStackHour.BreakTime">
            <summary>
            断线时间(小时)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStackHour.Minute">
            <summary>
            本小时断线持续时间(分钟)：断线时间/应该在线的时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_DataStackHour.BreakRate">
            <summary>
            断线率
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Break_Meter">
            <summary>
            仪表断线记录
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_Meter.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_Meter.MeterID">
            <summary>
            仪表编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_Meter.BreakTime">
            <summary>
            断线时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_Meter.RecoveryTime">
            <summary>
            断线恢复时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_Meter.Minute">
            <summary>
            本次断线持续时间(分钟)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Break_MeterHour">
            <summary>
            仪表断线率统计
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_MeterHour.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_MeterHour.MeterID">
            <summary>
            仪表编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_MeterHour.BreakTime">
            <summary>
            断线时间(小时)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_MeterHour.Minute">
            <summary>
            本小时断线持续时间(分钟)：断线时间/应该在线的时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Break_MeterHour.BreakRate">
            <summary>
            断线率
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Config_Dimension">
            <summary>
            维度表
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Config_Dimension.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Config_Dimension.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Config_Dimension.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Config_Dimension.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Config_Dimension.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Config_Dimension.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Config_Dimension.Extend">
            <summary>
            拓展字段
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Config_Dimension.Extend1">
            <summary>
            拓展字段1
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Deploy_Device">
            <summary>
            快速安装的设备信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Device.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Device.DeviceID">
            <summary>
            设备编号（自增长）
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Device.DeviceName">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Device.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Device.RoomAutoID">
            <summary>
            自增长编号（同步时，由于应用平台房间编号是自增，同步后更新Deploy_Room的RoomID,并根据此RoomAutoID获取设备的RoomID，作为应用平台设备的RoomID）
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Deploy_Meter">
            <summary>
            一键部署的仪表信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Meter.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Meter.MeterID">
            <summary>
            仪表编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Meter.MeterName">
            <summary>
            仪表名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Meter.RoomAutoID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Meter.StandardID">
            <summary>
            仪表类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Meter.Type">
             <summary>
             Type为1表示数据栈
            Type为2表示仪表
             </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Meter.QuickDeployInfo">
            <summary>
            快速部署进度信息
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Deploy_Room">
            <summary>
            一键部署的监测区域（房间）信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Room.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Room.RoomID">
            <summary>
            房间编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Room.RoomName">
            <summary>
            房间名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Room.SystemCode">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Room.QuickDeployInfo">
            <summary>
            安装进度信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Deploy_Room.RoomAutoID">
            <summary>
            自增长编号（同步时，由于应用平台房间编号是自增，同步后更新Deploy_Room的RoomID,并根据此RoomAutoID获取设备的RoomID，作为应用平台设备的RoomID）
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_AdjustArguments">
            <summary>
            仪表分段调节参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.SectionID">
            <summary>
            分段编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.MeterType">
            <summary>
            仪表类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.WriteDataCode">
            <summary>
            写数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.WriteDataName">
            <summary>
            写数据标识名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.WriteAddress">
            <summary>
            寄存器地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.ReadDataID">
            <summary>
            读取仪表的DataID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.ReadDataCode">
            <summary>
            修改后读取的数据标识(默认为原数据标识)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.ReadDataName">
            <summary>
            修改后读取的数据标识名称(默认为原数据标识名称)
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.WriteDataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.WriteRatio">
            <summary>
            写比例系数(默认为1)，写寄存器的值=EFOS调节值*系数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustArguments.FeedBack">
            <summary>
            反馈时间(单位：S)
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_AdjustSection">
            <summary>
            仪表调节分段
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustSection.SectionID">
            <summary>
            分段编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustSection.MeterType">
            <summary>
            仪表类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustSection.FunctionCode">
            <summary>
            功能码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustSection.BeginAddress">
            <summary>
            开始地址段
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustSection.EndAddress">
            <summary>
            结束地址段
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustSection.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustSection.PasswordAddress">
            <summary>
            密码位寄存器地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_AdjustSection.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_DasClient">
            <summary>
            Das控制客户端
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_DasClient.ClientID">
            <summary>
            客户端编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_DasClient.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_DasClient.VirtualStackID">
            <summary>
            客户端云端识别号（即模拟的数据栈编号）
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_DasClient.ClientName">
            <summary>
            客户端名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_DasClient.DataStackID">
            <summary>
            控制客户端连接的数据栈编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_Data">
            <summary>
            Edas_Data
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.StandardID">
            <summary>
            StandardID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.DataID">
            <summary>
            DataID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.Regaddr">
            <summary>
            Regaddr
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.DataType">
            <summary>
            DataType
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.CalType">
            <summary>
            CalType
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.Bit">
            <summary>
            Bit
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.Factor">
            <summary>
            Factor
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.DataName">
            <summary>
            DataName
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Data.DataCode">
            <summary>
            DataCode
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_Meter">
            <summary>
            Edas_Meter
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.ProjectCode">
            <summary>
            ProjectCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.StackID">
            <summary>
            StackID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.MeterID">
            <summary>
            MeterID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.MeterAddr">
            <summary>
            MeterAddr
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.MeterName">
            <summary>
            MeterName
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.StandardID">
            <summary>
            StandardID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.IP">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.Port">
            <summary>
            Port
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.IsDoActive">
            <summary>
            是否激活 1是 0否
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.RoomID">
            <summary>
            RoomID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.QuickDeployInfo">
            <summary>
            QuickDeployInfo
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Meter.IsControl">
            <summary>
            是否可控制
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_MeterProperty">
            <summary>
            仪表属性（仪表特殊参数）
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_MeterProperty.MeterAutoID">
            <summary>
            仪表自增编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_MeterProperty.ParamCode">
            <summary>
            参数编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_MeterProperty.ParamName">
            <summary>
            仪表参数名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_MeterProperty.ParamValue">
            <summary>
            仪表参数值（参数有多个值的情况下以"|"分隔值）
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_Modbus">
            <summary>
            Edas_Modbus
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Modbus.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Modbus.FunctionCode">
            <summary>
            FunctionCode
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Modbus.Addr">
            <summary>
            Addr
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Modbus.Regnum">
            <summary>
            Regnum
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Modbus.Standardid">
            <summary>
            Standardid
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Modbus.Standardname">
            <summary>
            Standardname
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Modbus.IsFreeze">
            <summary>
            IsFreeze
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_Modbus.IsDeploy">
            <summary>
            IsDeploy
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Edas_OtherMeterConfig">
            <summary>
            Edas_Meter
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.StandardID">
            <summary>
            仪表标准ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.SortID">
            <summary>
            排序序号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.Type">
            <summary>
            仪表配置类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.AppCode">
            <summary>
            APP识别码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.AppName">
            <summary>
            APP显示名称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.AppControlType">
            <summary>
            APP控件类型：0-标签，1-输入框，2-单选框，3-下拉框
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.DefaultValue">
            <summary>
            默认值，根据不同的Type代表不同的含义
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Edas_OtherMeterConfig.Remarks">
            <summary>
            备注信息：根据不同的Type代表不同的含义
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_AlarmFailureFactor">
            <summary>
            告警故障因素
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_AlarmFailureFactor.AlarmFailureFactorID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_AlarmFailureFactor.FactorID">
            <summary>
            故障因素编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_AlarmFailureFactor.AlarmType">
            <summary>
            告警类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_AlarmFailureFactor.SortIndex">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_Developer">
            <summary>
            开发商信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_Developer.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_Developer.CompanyName">
            <summary>
            公司全称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_Developer.ShortName">
            <summary>
            公司简称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_Developer.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_FailureFactor">
            <summary>
            故障原因
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_FailureFactor.FactorID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_FailureFactor.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_FailureFactor.Reason">
            <summary>
            故障因素
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_FaultGuideLine">
            <summary>
            操作指南
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_FaultGuideLine.GuideID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_FaultGuideLine.FactorID">
            <summary>
            故障因素编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_FaultGuideLine.GuideLine">
            <summary>
            指南说明
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_FaultGuideLine.SortIndex">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_Maintenance">
            <summary>
            维保公司信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_Maintenance.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_Maintenance.CompanyName">
            <summary>
            公司全称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_Maintenance.ShortName">
            <summary>
            公司简称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_Maintenance.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_MaintenanceInfo">
            <summary>
            项目--维保信息表
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.CompanyID">
            <summary>
            维保公司编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.SafetyPerson">
            <summary>
            安全管理员姓名
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.Phone">
            <summary>
            联系电话
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.SOSPhone">
            <summary>
            救援电话
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.ConValidDate">
            <summary>
            合同有效期至
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.MaintenPerson">
            <summary>
            维保人员姓名
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_MaintenanceInfo.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_ProjectInfo">
            <summary>
            项目属性信息表
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_ProjectInfo.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_ProjectInfo.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_ProjectInfo.Code">
            <summary>
            维度编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_ProjectInfo.Value">
            <summary>
            维度值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_ProjectInfo.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_PropertyMana">
            <summary>
            物管公司信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyMana.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyMana.CompanyName">
            <summary>
            公司全称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyMana.ShortName">
            <summary>
            公司简称
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyMana.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Kn_PropertyManaInfo">
            <summary>
            项目属性信息表
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyManaInfo.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyManaInfo.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyManaInfo.Code">
            <summary>
            维度编码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyManaInfo.Value">
            <summary>
            维度值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Kn_PropertyManaInfo.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Log_Exception">
            <summary>
            异常日志
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Exception.ExceptionID">
            <summary>
            异常日志编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Exception.Message">
            <summary>
            日志信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Exception.StackTrace">
            <summary>
            堆栈信息
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Exception.Params">
            <summary>
            异常参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Exception.CreateTime">
            <summary>
            异常时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Exception.Type">
            <summary>
            接口类型App、PC
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Exception.MethodName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Log_Operation">
            <summary>
            操作日志
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Operation.OperationID">
            <summary>
            日志编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Operation.ModularName">
            <summary>
            操作模块
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Operation.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Operation.UserName">
            <summary>
            操作人员
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Operation.IP">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Log_Operation.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.NoCheck_DeviceAlarm">
            <summary>
            忽略校验的设备告警
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceAlarm.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceAlarm.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceAlarm.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceAlarm.AlarmType">
            <summary>
            告警类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceAlarm.CType">
            <summary>
            配置类型，1未配置，2未采集，3异常
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceAlarm.Remark">
            <summary>
            备注，原因
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.NoCheck_DeviceParam">
            <summary>
            忽略校验的设备参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceParam.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceParam.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceParam.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceParam.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceParam.CType">
            <summary>
            配置类型，1未配置，2未采集，3异常
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_DeviceParam.Remark">
            <summary>
            备注，原因
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.NoCheck_PointCompute">
            <summary>
            忽略校验的计算点参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_PointCompute.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_PointCompute.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_PointCompute.PointType">
            <summary>
            计算点类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_PointCompute.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_PointCompute.CType">
            <summary>
            配置类型，1未配置，2未采集，3异常
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_PointCompute.Remark">
            <summary>
            备注，原因
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam">
            <summary>
            忽略校验的房间设备类型参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam.Type">
            <summary>
            房间设备类型类型，1房间编号，2设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam.RoomDeviceType">
            <summary>
            房间/设备类型类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam.CType">
            <summary>
            配置类型，1未配置，2未采集，3异常
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.NoCheck_RoomDeviceTypeParam.Remark">
            <summary>
            备注，原因
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Online_CurUserProject">
            <summary>
            Online_CurUserProject
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Online_CurUserProject.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Online_CurUserProject.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Online_CurUserProject.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Online_CurUserProject.UpdateOnlineTime">
            <summary>
            最后一次上线时间,用户最后一次访问项目时间
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Online_UserProject">
            <summary>
            Online_UserProject
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Online_UserProject.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Online_UserProject.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Online_UserProject.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Online_UserProject.OnlineTime">
            <summary>
            上线时间,用户访问项目时间
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Standard_DeviceTypeAlarm">
            <summary>
            设备（类型）告警，标准配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeAlarm.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeAlarm.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeAlarm.AlarmType">
            <summary>
            告警类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeAlarm.DataCode">
            <summary>
            告警数据标识
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Standard_DeviceTypeParam">
            <summary>
            房间设备类型，标准配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeParam.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeParam.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeParam.DataCode">
            <summary>
            数据标识编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeParam.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeParam.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeParam.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_DeviceTypeParam.ValidType">
            <summary>
            计算类型，1能耗，2实时
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Standard_PointCompute">
            <summary>
            计算点参数，标准配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_PointCompute.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_PointCompute.PointType">
            <summary>
            计算点类型
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_PointCompute.ValidType">
            <summary>
            计算类型。1，能耗计算，2，实时计算
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_PointCompute.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_PointCompute.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_PointCompute.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Standard_RoomDeviceType">
            <summary>
            房间设备类型，标准配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_RoomDeviceType.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_RoomDeviceType.RoomType">
            <summary>
            房间类型编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_RoomDeviceType.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Standard_RoomDeviceTypeParam">
            <summary>
            计算点参数，标准配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_RoomDeviceTypeParam.ID">
            <summary>
            自增长编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_RoomDeviceTypeParam.RoomDeviceType">
            <summary>
            房间/设备类型参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_RoomDeviceTypeParam.Type">
            <summary>
            类型。1，房间参数，2，设备类型参数
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Standard_RoomDeviceTypeParam.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.UpLoad_Platform">
            <summary>
            数据上传平台
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_Platform.PlatformID">
            <summary>
            自动编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_Platform.PlatformName">
            <summary>
            平台名称
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.UpLoad_PlatformProject">
            <summary>
            上传项目
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_PlatformProject.PlatformID">
            <summary>
            平台编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_PlatformProject.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_PlatformProject.Account">
            <summary>
            帐号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_PlatformProject.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.UpLoad_PlatformUrl">
            <summary>
            上传平台对应的Url
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_PlatformUrl.PlatformID">
            <summary>
            平台编号
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_PlatformUrl.Url">
            <summary>
            上传地址
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_PlatformUrl.CronExpression">
            <summary>
            Cron执行表达式
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.UpLoad_PlatformUrl.Description">
            <summary>
            接口描述
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Weather_City">
            <summary>
            天气采集城市配置
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_City.CityCode">
            <summary>
            城市代码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_City.CityName">
            <summary>
            城市名称
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Weather_DayData">
            <summary>
            天气日数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_DayData.CityCode">
            <summary>
            城市代码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_DayData.CollectDate">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_DayData.HighTemperature">
            <summary>
            最高温度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_DayData.LowTemperature">
            <summary>
            最低温度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_DayData.HighHumidity">
            <summary>
            最大湿度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_DayData.LowHumidity">
            <summary>
            最低湿度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_DayData.Description">
            <summary>
            天气描述
            </summary>
        </member>
        <member name="T:EFOS.Data.Master.Model.Weather_HourData">
            <summary>
            天气当前小时数据
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_HourData.CityCode">
            <summary>
            城市代码
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_HourData.CollectDate">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_HourData.Temperature">
            <summary>
            温度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_HourData.Humidity">
            <summary>
            湿度
            </summary>
        </member>
        <member name="P:EFOS.Data.Master.Model.Weather_HourData.Description">
            <summary>
            天气描述
            </summary>
        </member>
        <member name="T:EFOS.Action.UIAction">
            <summary>
            UI Ajax数据请求
            </summary>
        </member>
        <member name="M:EFOS.Action.UIAction.ProcessRequest(System.Web.HttpContext)">
            <summary>
            上下文请求
            </summary>
        </member>
        <member name="M:EFOS.Action.UIAction.ValidateSession(System.String)">
            <summary>
            验证Session
            </summary>
            <param name="assemblyMethodKey">方法的Key如：HYD.Business.EMS_UserInfoBLL.Login</param>
            <returns>是否验证成功</returns>
        </member>
        <member name="M:EFOS.Action.UIAction.OnError(System.Exception,System.String)">
            <summary>
            调用出错
            </summary>
            <param name="ex">错误</param>
            <param name="assemblyMethodKey">调用的方法</param>
        </member>
        <member name="M:EFOS.Action.UIAction.ExecTime(System.String,System.Int64)">
            <summary>
            执行时间监视
            </summary>
            <param name="assemblyMethodKey">命名空间+方法</param>
            <param name="elapsedMilliseconds">合计毫秒数</param>
        </member>
        <member name="P:EFOS.Action.UIAction.IsReusable">
            <summary>
            IsReusable
            </summary>
        </member>
        <member name="P:EFOS.Action.UIAction.IsShowErrorStack">
            <summary>
            显示错误堆栈信息
            </summary>
        </member>
        <member name="T:EFOS.Action.InvokeInstance">
            <summary>
            反射调用方法
            </summary>
        </member>
        <member name="F:EFOS.Action.InvokeInstance.methodParam">
            <summary>
            Form
            </summary>
        </member>
        <member name="M:EFOS.Action.InvokeInstance.GetInstance(System.String)">
            <summary>
            获取实例
            </summary>
            <param name="assemblyMethodKey">反射实例key</param>
        </member>
        <member name="M:EFOS.Action.InvokeInstance.GetParamtersFromHttpContext(System.Reflection.ParameterInfo[])">
            <summary>
            从上下文中构建参数
            </summary>
        </member>
        <member name="M:EFOS.Action.InvokeInstance.GetMethodParams(System.String,System.Type)">
            <summary>
            获取方法参数
            </summary>
        </member>
        <member name="M:EFOS.Action.InvokeInstance.Invoke(EFOS.Action.MethodParams)">
            <summary>
            调用
            </summary>
            <returns>返回数据</returns>
        </member>
        <member name="P:EFOS.Action.InvokeInstance.Result">
            <summary>
            反射调用后的返回数据
            </summary>
        </member>
        <member name="P:EFOS.Action.InvokeInstance.WebJson">
            <summary>
            返回的Web请求是需要的Json格式
            </summary>
        </member>
        <member name="P:EFOS.Action.InvokeInstance.ApiJson">
            <summary>
            返回的Api请求是需要的Json格式
            </summary>
        </member>
        <member name="P:EFOS.Action.InvokeInstance.OutParameters">
            <summary>
            Out参数值
            </summary>
        </member>
        <member name="T:EFOS.Action.CodeResource">
            <summary>
            CodeResource
            </summary>
        </member>
        <member name="M:EFOS.Action.CodeResource.ProcessRequest(System.Web.HttpContext)">
            <summary>
            请求
            </summary>
            <param name="context">上下文</param>
        </member>
        <member name="P:EFOS.Action.CodeResource.IsReusable">
            <summary>
            IsReusable
            </summary>
        </member>
        <member name="T:EFOS.Action.VerificationCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="M:EFOS.Action.VerificationCode.GenerateRandomNumber(System.Int32)">
            <summary>
            产生随机验证码
            </summary>
            <param name="Length"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Action.VerificationCode.GetImageStream">
            <summary>
            图形绘制
            </summary>
        </member>
        <member name="M:EFOS.Action.VerificationCode.GetCode">
            <summary>
            产生随机字符
            </summary>
        </member>
        <member name="M:EFOS.Action.VerificationCode.GetFamily(System.Int32)">
            <summary>
            随机字体
            </summary>
        </member>
        <member name="P:EFOS.Action.VerificationCode.CheckCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="T:EFOS.Action.VerificationCodeAction">
             <summary>
            验证码生成器
             </summary>
        </member>
        <member name="M:EFOS.Action.VerificationCodeAction.ProcessRequest(System.Web.HttpContext)">
            <summary>
            请求
            </summary>
            <param name="context">上下文</param>
        </member>
        <member name="P:EFOS.Action.VerificationCodeAction.IsReusable">
            <summary>
            IsReusable
            </summary>
        </member>
        <member name="T:EFOS.Redis.ApplyRedisConfig">
            <summary>
            缓存数据配置
            </summary>
        </member>
        <member name="T:EFOS.Redis.BaseRedis">
            <summary>
            Redis数据访问
            </summary>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.#ctor(System.String)">
            <summary>
            数据库缓存
            </summary>
            <param name="redisPath">Redis路径</param>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.#ctor">
            <summary>
            数据库缓存
            </summary>
        </member>
        <member name="F:EFOS.Redis.BaseRedis.redisPath">
            <summary>
            Redis路径
            </summary>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.GetRedisClient">
            <summary>
            获取Redis连接
            </summary>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.SearchByPattern``1(System.String)">
            <summary>
            获取数据Key
            </summary>
            <param name="patternKey">关键</param>
            <returns>数据Key</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.Set``1(System.String,``0)">
            <summary>
            设置对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.Set``1(System.String,``0,System.DateTime)">
            <summary>
            设置对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expiresAt">过期时间</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.Set``1(System.String,``0,System.TimeSpan)">
            <summary>
            设置对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="timeSpan">过期时间</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.Get``1(System.String)">
            <summary>
            获取对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.GetAll``1(System.Collections.Generic.List{System.String})">
            <summary>
            获取多个对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="keys">键</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.SetAll``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            设置多个对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="values">数据</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.Remove(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="key">数据Key</param>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.RemoveAll(System.Collections.Generic.List{System.String})">
            <summary>
            删除数据
            </summary>
            <param name="keys">数据Key</param>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.RemoveByPattern(System.String)">
            <summary>
            根据模糊匹配来删除数据
            </summary>
            <param name="pattern">pattern Key</param>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.HSet``1(System.String,System.Collections.Generic.Dictionary{System.String,``0})">
            <summary>
            设置对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="hashId">hash编号</param>
            <param name="value">值</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.HGetKey(System.String)">
            <summary>
            获取Key
            </summary>
            <param name="hashId">hash编号</param>
            <returns>key</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.HGet``1(System.String,System.String[])">
            <summary>
            根据主键获Hash对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="hashId">hash编号</param>
            <param name="keys">keys</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.HRemove(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="hashId">hash编号</param>
        </member>
        <member name="M:EFOS.Redis.BaseRedis.HRemoveAll(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            删除数据
            </summary>
            <param name="hashId">hash编号</param>
            <param name="keys">数据Key</param>
        </member>
        <member name="P:EFOS.Redis.BaseRedis.RedisPath">
            <summary>
            Redis路径
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.#ctor(System.String)">
            <summary>
            配置数据缓存
            </summary>
            <param name="redisPath">Redis路径</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetConfig``1(System.Int32)">
            <summary>
            获取项目数据
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="projectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetConfig``1(System.Int32,System.Collections.Generic.List{``0})">
            <summary>
            设置项目数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="list">数据</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetConfig``1">
            <summary>
            获取公共配置数据
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetConfig``1(System.Collections.Generic.List{``0})">
            <summary>
            设置公共配置数据
            </summary>
            <param name="list">数据</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetInfo_AlarmConfig(System.Int32)">
            <summary>
            获取报警配置
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>报警配置</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetInfo_AlarmConfig(System.Int32,System.Collections.Generic.List{EFOS.Data.Info_AlarmConfigExtend})">
            <summary>
            设置报警配置
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">报警配置</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_PIDControl(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_PIDControl})">
            <summary>
            设置PID控制名称
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">控制配置</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_PIDControl(System.Int32)">
            <summary>
            获取PID控制名称
            </summary>
            <param name="projectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_PIDConfig(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_PIDConfig})">
            <summary>
            设置PID控制配置
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">控制配置</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_PIDConfig(System.Int32)">
            <summary>
            获取PID控制配置
            </summary>
            <param name="projectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_TimeControl(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_TimeControl})">
            <summary>
            设置时间控制配置
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">控制配置</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_TimeControl(System.Int32)">
            <summary>
            获取时间控制配置
            </summary>
            <param name="projectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_OrderDetail(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_OrderDetail})">
            <summary>
            设置时间控制配置
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">控制配置</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_OrderDetail(System.Int32)">
            <summary>
            设置时间控制配置
            </summary>
            <param name="projectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_OrderSet(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_OrderSet})">
            <summary>
            设置时间控制配置
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">控制配置</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_OrderSet(System.Int32)">
            <summary>
            设置时间控制配置
            </summary>
            <param name="projectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetInfo_SystemParams(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Info_SystemParams})">
            <summary>
            设置时间控制配置
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">控制配置</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetInfo_SystemParams(System.Int32)">
            <summary>
            设置时间控制配置
            </summary>
            <param name="projectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_Command(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_Command})">
            <summary>
            设置控制指令
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_Command(System.Int32)">
            <summary>
            获取控制指令
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_CommandSet(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_CommandSet})">
            <summary>
            设置指令集
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_CommandSet(System.Int32)">
            <summary>
            获取指令集
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_CommandSetRule(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_CommandSetRule})">
            <summary>
            设置指令集控制规则
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_CommandSetRule(System.Int32)">
            <summary>
            获取指令集控制规则
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_PID(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_PID})">
            <summary>
            设置PID控制
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_PID(System.Int32)">
            <summary>
            获取PID控制
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_PIDProtect(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_PIDProtect})">
            <summary>
            设置PID保护条件
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_PIDProtect(System.Int32)">
            <summary>
            获取PID保护条件
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_Time(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_Time})">
            <summary>
            设置定时控制
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_Time(System.Int32)">
            <summary>
            获取定时控制
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_Condition(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_Condition})">
            <summary>
            设置条件控制
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_Condition(System.Int32)">
            <summary>
            获取条件控制
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetControl_ConditionPriority(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Control_ConditionPriority})">
            <summary>
            设置条件控制优先级
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetControl_ConditionPriority(System.Int32)">
            <summary>
            获取条件控制优先级
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetInfo_DataMapping(System.Int32)">
            <summary>
            获取设备采集数据映射+计算配置
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>设备采集数据映射+计算配置</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetInfo_DataMapping(System.Int32,System.Collections.Generic.List{EFOS.Redis.Info_DataMappingExtend})">
            <summary>
            设置设备采集数据映射+计算配置
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">设备采集数据映射+计算配置</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetInfo_Device(System.Int32)">
            <summary>
            获取设备信息
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>设备信息</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetInfo_Device(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Info_Device})">
            <summary>
            设置设备信息
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">设备信息</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetInfo_DeviceProperty(System.Int32)">
            <summary>
            获取设备属性信息
            </summary>
            <param name="projectCode">项目编码</param>
            <returns>设备属性信息</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetInfo_DeviceProperty(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Info_DeviceProperty})">
            <summary>
            设备属性信息
            </summary>
            <param name="projectCode">项目编码</param>
            <param name="data">设备属性信息</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetPoint_Compute(System.Int32)">
            <summary>
            获取数据计算点
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>数据计算点</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetPoint_Compute(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Point_Compute})">
            <summary>
            设置数据计算点
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">数据计算点</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetPoint_ComputeRealData(System.Int32)">
            <summary>
            获取计算点实时数据
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>计算点实时数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetPoint_ComputeRealData(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Point_ComputeRealData})">
            <summary>
            设置计算点实时数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">计算点实时数据</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SetSqlDataOnChange(System.Collections.Generic.List{EFOS.Redis.Model.SqlDataOnChange})">
            <summary>
            设置数据变化的数据库表名称
            </summary>
            <param name="sqlDataOnChanges">数据变化的数据库表名称</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetSqlDataOnChange">
            <summary>
            设置数据变化的数据库表名称
            </summary>
            <param name="SqlDataOnChange">数据变化的数据库表名称</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.RemoveDataByProject(System.Int32)">
            <summary>
            删除断线数据(删除项目时调用)
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SynchronizationProjectData(System.Int32)">
            <summary>
            同步项目数据
            </summary>
            <param name="projectCode">项目编号</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.SynchronizationPlatformData">
            <summary>
            同步平台数据数据
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisConfig.GetSynchronization">
            <summary>
            获取需要同步的数据(获取完毕之后立即删除)
            </summary>
            <returns>返回数据</returns>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_FRole">
            <summary>
            功能角色
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_FRoleAppFunction">
            <summary>
            Acc_FRoleAppFunction
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_FRoleFunction">
            <summary>
            功能角色对应的功能信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_MRole">
            <summary>
            管理部角色
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_MRoleManagement">
            <summary>
            管理部角色对应的管理部信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_UserAppFunction">
            <summary>
            Acc_UserAppFunction
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_UserFRole">
            <summary>
            用户对应的功能角色
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_UserFunction">
            <summary>
            用户对应的功能信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_UserMRole">
            <summary>
            用户对应的管理部角色
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Acc_UserProject">
            <summary>
            用户对应的项目信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Common_ChargeConfig">
            <summary>
            项目共用费用配置信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Common_ProjectParams">
            <summary>
            项目参数
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Common_EfficiencyStandard">
            <summary>
            能效指标
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Common_FaceAttendanceClient">
            <summary>
            设置或获取人脸考勤客户端
            </summary>
        </member>
        <member name="P:EFOS.Redis.ApplyRedisConfig.Common_WelcomeVip">
            <summary>
            设置或获取大屏欢迎词
            </summary>
        </member>
        <member name="T:EFOS.Redis.ApplyRedisMeterRealData">
            <summary>
            仪表实时数据
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisMeterRealData.GetHashId(System.Int32)">
            <summary>
            获取Hash编号
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>编号</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisMeterRealData.#ctor(System.String)">
            <summary>
            仪表实时数据缓存
            </summary>
            <param name="redisPath">Redis路径</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisMeterRealData.GetRealDataByDataKey(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            根据数据DataKey获取实时数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="dataKeys">数据Key</param>
            <returns>实时数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisMeterRealData.SetRealData(System.Int32,System.Collections.Generic.List{EFOS.Redis.Model.MeterRealData})">
            <summary>
            将仪表实时数据存储在Redis中
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">数据栈数据</param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisMeterRealData.GetRealDataByMeterID(System.Int32,System.Int32)">
            <summary>
            根据仪编号获取数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="meterID">仪表编号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisMeterRealData.GetRealDataByProjectCode(System.Int32)">
            <summary>
            根据项目编号获取数据
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisMeterRealData.RemoveRealDataByDataKey(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            根据dataKey删除数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="dataKeys">dataKey</param>
        </member>
        <member name="T:EFOS.Redis.ApplyRedisPointRealData">
            <summary>
            计算点实时数据
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.#ctor(System.String)">
            <summary>
            能耗数据库缓存
            </summary>
            <param name="redisPath">Redis路径</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.SetAlarmInfo(System.Int32,System.Collections.Generic.List{EFOS.Data.Apply.Model.Data_AlarmInfo},System.Collections.Generic.List{EFOS.Data.Apply.Model.Data_AlarmInfo},System.Collections.Generic.List{EFOS.Data.Apply.Model.Data_AlarmInfo})">
            <summary>
            设置报警信息
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="addModels">新产生的报警</param>
            <param name="updateModels">更新的报警</param>
            <param name="recoveryModels">恢复的报警</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.GetAllAlarmInfo(System.Int32)">
            <summary>
            获取所有报警的数据：包括预报警的数据
            </summary>
            <param name="projectCode">项目信息</param>
            <returns>报警数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.RemoveAll(System.Int32)">
            <summary>
            删除项目下所的报警
            </summary>
            <param name="projectCode">项目信息</param>
            <returns>报警数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.GetRealAlarmInfo(System.Int32)">
            <summary>
            获取实际报警的数据：不包括预报警的数据
            </summary>
            <param name="projectCode">项目信息</param>
            <returns>报警数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.GetEventPreviousRealData(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            获取事件上一次数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="dataKeys">计算点编号</param>
            <returns>实时数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.SetEventPreviousRealData(System.Int32,System.Collections.Generic.List{EFOS.Redis.Model.PointRealData})">
            <summary>
            设置事件上一次数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="models">数据</param>
            <returns>实时数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.GetSaveHisData(System.String)">
            <summary>
            获取要存储的历史数据
            </summary>
            <returns>数据</returns>
            <param name="keyType">历史数据类型key</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.SetSaveHisData(System.Int32,System.Collections.Generic.List{EFOS.Redis.Model.PointRealData},System.String)">
            <summary>
            设置要存储的历史数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">数据</param>
            <param name="keyType">历史数据类型库key</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.SetPointRealData(System.Int32,System.Collections.Generic.List{EFOS.Redis.Model.PointRealData},System.String)">
            <summary>
            设置计算点数据存储在Redis中
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">数据栈数据</param>
            <param name="hashId">编号</param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.GetRealDataByDataKey(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            根据数据DataKey获取实时数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="dataKeys">数据Key</param>
            <returns>实时数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.GetRealDataByPointCode(System.Int32,System.String)">
            <summary>
            根据设备编号查询所有数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="pointCode">计算点编号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.RemoveRealDataByPointCode(System.Int32,System.String)">
            <summary>
            根据设备编号删除所有数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="pointCode">计算点编号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.RemoveRealDataByDataKey(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            根据dataKey删除数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="dataKeys">dataKey</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.GetRealDataByProjectCode(System.Int32)">
            <summary>
            获取项目所有的实时数据
            </summary>
            <param name="projectCode">项目编号</param>
            <returns>实时数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.SetRealData(System.Int32,System.Collections.Generic.List{EFOS.Redis.Model.PointRealData})">
            <summary>
            设置设备实时数、报警处理数据 存储在Redis中
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="data">数据栈数据</param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.SetStatisticInfo(System.Collections.Generic.List{EFOS.Redis.Model.StatisticInfo})">
            <summary>
            存储统计信息
            </summary>
            <param name="infos">项目统计信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisPointRealData.GetStatisticInfo">
            <summary>
            获取统计信息
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="T:EFOS.Redis.ApplyRedisRealData">
            <summary>
            实时数据查询
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisRealData.#ctor(System.String,System.String)">
            <summary>
            实时数据查询
            </summary>
            <param name="masterRedisPath">主库地址</param>
            <param name="platformRedisPath">平台地址</param>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisRealData.GetMeterRealData(System.Int32,System.Int32)">
            <summary>
            获取仪表实时数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="meterID">仪表编号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisRealData.ConvertPointData(System.Int32,System.Collections.Generic.List{EFOS.Redis.Model.PointRealData})">
            <summary>
            数据转换
            </summary>
            <param name="projectCode">projectCode</param>
            <param name="realData">实时数据</param>
            <returns>转换后的数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisRealData.GetRemarks(System.Nullable{System.Int32},EFOS.Data.Master.Model.Apply_DataItem)">
            <summary>
            转换数据标识的备注信息
            </summary>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisRealData.GetRealData(System.Int32,System.String)">
            <summary>
            获取实时数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="pointCode">计算点编号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.ApplyRedisRealData.GetRealDataByDataKey(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            根据Key获取实时数据
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="dataKeys">数据Key</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Redis.RedisManager">
            <summary>
            Redis客户端
            </summary>
        </member>
        <member name="M:EFOS.Redis.RedisManager.CreateManager(System.String)">
            <summary>
            创建链接池管理对象
            </summary>
        </member>
        <member name="M:EFOS.Redis.RedisManager.GetClient(System.String)">
            <summary>
            从连接池中获取连接对象
            </summary>
        </member>
        <member name="M:EFOS.Redis.RedisManager.DisposeClient(System.String,ServiceStack.Redis.RedisClient)">
            <summary>
            将连接池的对象还回去
            </summary>
        </member>
        <member name="T:EFOS.Redis.MeterBreakHour">
             <summary>
            仪表或数据栈小时断线时间累计
             </summary>
        </member>
        <member name="P:EFOS.Redis.MeterBreakHour.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.MeterBreakHour.MeterID">
            <summary>
            仪表或数据栈编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.MeterBreakHour.MeterType">
            <summary>
            仪表或数据栈
            </summary>
        </member>
        <member name="P:EFOS.Redis.MeterBreakHour.BreakTime">
            <summary>
            断线数据
            </summary>
        </member>
        <member name="P:EFOS.Redis.MeterBreakHour.Second">
            <summary>
            断线时间秒
            </summary>
        </member>
        <member name="T:EFOS.Redis.MasterRedisBreak">
            <summary>
            断线数据存储和读取
            </summary>
        </member>
        <member name="M:EFOS.Redis.MasterRedisBreak.#ctor(System.String)">
            <summary>
            断线数据存储和读取
            </summary>
            <param name="redisPath">Redis路径</param>
        </member>
        <member name="M:EFOS.Redis.MasterRedisBreak.SetBreakData(EFOS.Redis.MasterRedisBreak.BreakType,System.Collections.Generic.List{EFOS.Redis.Model.MeterRealData})">
            <summary>
            设置数据
            </summary>
            <param name="breakType">当前值或上一值</param>
            <param name="data">数据</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisBreak.GetBreakData(EFOS.Redis.MasterRedisBreak.BreakType)">
            <summary>
            获取所有的断线数据
            </summary>
            <param name="breakType">类型:当前值，上个值</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisBreak.RemoveBreakData(EFOS.Redis.MasterRedisBreak.BreakType,System.Collections.Generic.List{EFOS.Redis.Model.MeterRealData})">
            <summary>
            恢复断线数据
            </summary>
            <param name="breakType">数据类型</param>
            <param name="data">数据栈数据</param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisBreak.SetBreakSecond(System.Collections.Generic.List{EFOS.Redis.MeterBreakHour},System.DateTime)">
            <summary>
            设置数据栈累计断线时间
            </summary>
            <param name="data">本小时累计断线时间</param>
            <param name="dateTime">当前小时</param>
        </member>
        <member name="M:EFOS.Redis.MasterRedisBreak.GetBreakSecond(System.DateTime)">
            <summary>
            获取累计断线时间
            </summary>
            <param name="dateTime">时间</param>
        </member>
        <member name="M:EFOS.Redis.MasterRedisBreak.SetCCPGAlarmInfo(System.Collections.Generic.List{EFOS.Redis.Model.CCPGAlarmInfo})">
            <summary>
            设置长城报警推送信息（推送出去后删除）
            </summary>
            <param name="alarmInfo">报警信息</param>
        </member>
        <member name="M:EFOS.Redis.MasterRedisBreak.GetCCPGAlarmInfo">
            <summary>
            获取长城报警推送信息并删除
            </summary>
            <param name="projectCode">项目信息</param>
            <returns>报警数据</returns>
        </member>
        <member name="T:EFOS.Redis.MasterRedisBreak.BreakType">
            <summary>
            断线数据类型
            </summary>
        </member>
        <member name="F:EFOS.Redis.MasterRedisBreak.BreakType.Previous">
            <summary>
            上个值
            </summary>
        </member>
        <member name="F:EFOS.Redis.MasterRedisBreak.BreakType.Current">
            <summary>
            当前值
            </summary>
        </member>
        <member name="F:EFOS.Redis.MasterRedisBreak.BreakType.Break">
            <summary>
            断线值
            </summary>
        </member>
        <member name="T:EFOS.Redis.MasterRedisConfig">
            <summary>
            运营平台配置缓存
            </summary>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.#ctor(System.String)">
            <summary>
            数据库缓存
            </summary>
            <param name="masterRedisPath">Redis路径</param>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetConfig``1">
            <summary>
            获取公共配置数据
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.SetConfig``1(System.Collections.Generic.List{``0})">
            <summary>
            设置公共配置数据
            </summary>
            <param name="list">数据</param>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.SetSqlDataOnChange(System.Collections.Generic.List{EFOS.Redis.Model.SqlDataOnChange})">
            <summary>
            设置数据变化的数据库表名称
            </summary>
            <param name="sqlDataOnChanges">数据变化的数据库表名称</param>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetSqlDataOnChange">
            <summary>
            设置数据变化的数据库表名称
            </summary>
            <param name="SqlDataOnChange">数据变化的数据库表名称</param>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetSSOUser(System.String)">
            <summary>
            获取单点登录信息
            </summary>
            <param name="tokenValue">tokenValue</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.SetSSOUser(EFOS.Redis.Model.SSOUser)">
            <summary>
            设置单点登录信息
            </summary>
            <param name="user">用户信息</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.RemoveSSOUser(System.String)">
            <summary>
            删除登录用户
            </summary>
            <param name="tokenValue">token数值</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetJPushModels">
            <summary>
            获取所有要发送的信息
            </summary>
            <returns>消息</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.AddJPushModel(EFOS.Tools.JPushModel)">
            <summary>
            增加要发送的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetPhoneValid(System.String)">
            <summary>
            获取手机号验证信息
            </summary>
            <param name="phoneNumber">手机号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.SetPhoneValid(EFOS.Redis.Model.PhoneValid)">
            <summary>
            设置手机号验证信息
            </summary>
            <param name="phoneValid">验证信息</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.RemovePhoneValid(System.String)">
            <summary>
            删除已注册用户
            </summary>
            <param name="phoneNumber">手机号</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.SetRedisUserAttendance(EFOS.Redis.Model.RedisUserAttendance)">
            <summary>
            设置人脸识别对象
            </summary>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetRedisUserAttendance(System.String,System.Int32)">
            <summary>
            获取人脸识别对象
            </summary>
            <param name="clientCode">客户端编号</param>
            <param name="expiredSecond">过期秒</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.SetWelcomeVip(EFOS.Redis.Model.WelcomeVip)">
            <summary>
            设置人脸识别Vip组
            </summary>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetWelcomeVip(System.String,System.Int32)">
            <summary>
            获取人脸识别Vip组
            </summary>
            <param name="clientCode">客户端编号</param>
            <param name="expiredSecond">过期秒</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetUserPlatform(System.Int32)">
            <summary>
             获取用户平台信息
            </summary>
            <param name="userID">用户编号</param>
            <returns>平台信息</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetUserProject(System.String,System.String,System.Int32,System.String)">
            <summary>
            获取用户的项目信息--获取项目用户项目权限跳过了集团，此时配不配项目用户集团均可
            </summary>
            <param name="blocCode">集团编码(可空)</param>
            <param name="mCode">管理部编码(可空)</param>
            <param name="userID">用户编码(非空)</param>
            <param name="platformCode">平台编码(可空，为空查询所有平台)</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetProjectUsers(System.Int32)">
            <summary>
            获取拥有该项目权限的所有用户
            </summary>
            <param name="projectCode"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetAcc_UserProject(System.String)">
            <summary>
            获取某平台的项目用户的用户项目信息--针对项目用户，某平台Acc_UserProject数据
            </summary>
            <param name="platformCode">平台编码</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetUserBloc(System.Int32,System.String)">
            <summary>
            获取用户的集团信息--项目权限-->集团权限
            a.支持所有平台
            b.由项目权限得出的集团权限(获取用户集团权限-->调用GetUserProject)--获取项目用户项目权限跳过了集团
            c.(使用2)逻辑2[2、集团下有项目的才返回该集团]
            </summary>
            <param name="userID"></param>
            <param name="platformCode">平台(可空)</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetBloc(System.Int32,System.String)">
            <summary>
             获取用户的集团信息--直接去找集团权限--与项目权限无关
            a.单个平台
            b.用户集团权限与项目权限无关-->即直接去找用户的集团权限，与项目权限无关--此时项目用户也需要配置用户集团(针对在运营平台新增的项目用户，在集团界面查看未配置项目权限的项目用户)
            c.逻辑2+逻辑3(所有用户-->[2、集团下有项目的才返回该集团]；项目用户-->[3、直接去找项目用户的集团权限，与项目权限无关]--(针对在运营平台新增的项目用户，在集团界面查看未配置项目权限的项目用户))
            即：所有用户--集团权限+集团下存在项目
            </summary>
            <param name="userID"></param>
            <param name="platformCode">非空</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetUserManagement(System.String,System.Int32,System.String)">
            <summary>
            获取用户的管理部信息
            </summary>
            <param name="mCode">管理部编码--可空</param>
            <param name="userID">用户（非项目用户）</param>
            <param name="platformCode">平台编号--非空</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetWebFunction(System.String)">
            <summary>
            获取行业的web功能菜单
            </summary>
            <param name="industryCode">行业编号</param>
            <returns>菜单</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetSystem(System.String)">
            <summary>
            获取行业的系统信息
            </summary>
            <param name="industryCode">行业编号</param>
            <returns>系统信息</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetDeviceType(System.String)">
            <summary>
            获取行业的设备类型信息
            </summary>
            <param name="industryCode">行业编号</param>
            <returns>设备类型信息</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetAppFunction(System.String)">
            <summary>
            获取行业的app功能菜单
            </summary>
            <param name="industryCode">行业编号</param>
            <returns>菜单</returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetAppIndex(System.String)">
            <summary>
            获取行业app指标(针对应用平台)
            </summary>
            <param name="industryCode"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Redis.MasterRedisConfig.GetUserAppIndex(System.Int32,System.String)">
            <summary>
            获取用户指标(针对应用平台)
            </summary>
            <param name="userID"></param>
            <param name="platformCode"></param>
            <returns></returns>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Acc_Function">
            <summary>
            运营平台系统功能信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Acc_Role">
            <summary>
            运营功能角色
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Acc_RoleFunction">
            <summary>
            运营平台角色对应的功能信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Acc_UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Acc_UserPlatform">
            <summary>
            用户平台信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Api_ApiPrj">
            <summary>
            Api项目权限信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_AlarmType">
            <summary>
            报警类型
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_AppFunction">
            <summary>
            监控平台App功能
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_AppIndex">
            <summary>
            App指标
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_IndustryAppIndex">
            <summary>
            行业App指标
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_IRole">
            <summary>
            指标角色
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_UserIRole">
            <summary>
            用户指标角色
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_IRoleAppIndex">
            <summary>
            指标角色App指标
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_UserAppIndex">
            <summary>
            用户App指标
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_AppVersion">
            <summary>
            手机App版本信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_Bloc">
            <summary>
            集团信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_CumulativeDataItem">
            <summary>
            累计量数据标识
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_CommonParams">
            <summary>
            平台、集团、项目属性类
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_DataStack">
            <summary>
            数据找信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_DeviceTypeAlarm">
            <summary>
            设备类型报警配置
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_DeviceTypeDataEntry">
            <summary>
            设备类型数据录入项
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_DeviceTypeParams">
            <summary>
            设备类型参数
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_DeviceTypeShowParams">
            <summary>
            设备类型显示参数
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_DataItem">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_DeviceProperty">
            <summary>
            设备属性
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_IndustrySystem">
            <summary>
            行业的系统信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_Industry">
            <summary>
            行业信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_IndustryAppFunction">
            <summary>
            行业的具有的App功能
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_IndustryWebFunction">
            <summary>
            行业的具有的Web功能
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_InspectionContent">
            <summary>
            设备类型巡检项
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_Management">
            <summary>
            管理部信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_Platform">
            <summary>
            平台信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_Project">
            <summary>
            项目信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_System">
            <summary>
            设备系统
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_UserBloc">
            <summary>
            集团信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_UserAttendance">
            <summary>
            用户考勤信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_WebFunction">
            <summary>
            监控平台Web功能
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Edas_Data">
            <summary>
            Edas_Data
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Edas_Meter">
            <summary>
            Edas_Meter
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Edas_Modbus">
            <summary>
            Edas_Modbus
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Weather_City">
            <summary>
            天气采集城市配置
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Edas_AdjustArguments">
            <summary>
            仪表调节参数
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Edas_AdjustSection">
            <summary>
            仪表调节分段配置
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_Manufacturer">
            <summary>
            生产厂商配置
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_Specifications">
            <summary>
            设备型号配置
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_SpcificationsArchiveFile">
            <summary>
            设备型号档案文件配置
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Edas_DasClient">
            <summary>
            获取或设置控制客户端
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_FireDeviceType">
            <summary>
            获取或设置消防设备类型
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Config_Dimension">
            <summary>
            获取维度信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Acc_UserDept">
            <summary>
            用户管辖部门信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_MaintenanceSystem">
            <summary>
            小区维护系统
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_OwnerPage">
            <summary>
            面向业主微信AppH5项目页面
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_MeterType">
            <summary>
            仪表类型
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_MeterSpecifications">
            <summary>
            仪表型号
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Standard_RoomDeviceType">
            <summary>
            房间设备类型
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Standard_DeviceTypeParam">
            <summary>
            设备类型参数标准
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Standard_DeviceTypeAlarm">
            <summary>
            设备（类型）告警配置标准
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Standard_PointCompute">
            <summary>
            计算点参数配置标准
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Standard_RoomDeviceTypeParam">
            <summary>
            房间设备类型参数
            </summary>
        </member>
        <member name="P:EFOS.Redis.MasterRedisConfig.Apply_PublishPage">
            <summary>
            获取或设置集团发布页面权限
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.CCPGAlarmInfo">
            <summary>
            长城报警推送
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.AlarmKey">
            <summary>
            唯一编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.ProjectName">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.PlatformCode">
            <summary>
            PlatformCode
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.CCMemberCode">
            <summary>
            加盟商编码
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.HappenTime">
            <summary>
            触发时间
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.AlarmText">
            <summary>
            报警信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.DeviceID">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.CCProjectCode">
            <summary>
            客户项目编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.CCPGAlarmInfo.Type">
            <summary>
            类型:0=报警,1=数据站断线,2=仪表断线
            </summary>
        </member>
        <member name="T:EFOS.Data.Info_AlarmConfigExtend">
            <summary>
            带公式表达式的报警配额
            </summary>
        </member>
        <member name="M:EFOS.Data.Info_AlarmConfigExtend.#ctor(EFOS.Data.Apply.Model.Info_AlarmConfig)">
            <summary>
            带公式表达式的报警配置
            </summary>
            <param name="model">配置</param>
        </member>
        <member name="M:EFOS.Data.Info_AlarmConfigExtend.IsNotTime">
            <summary>
            检测当前时间是否在报警范围内
            </summary>
            <returns>是否在范围内</returns>
        </member>
        <member name="M:EFOS.Data.Info_AlarmConfigExtend.IsDisconnected(System.Collections.Generic.List{EFOS.Redis.Model.PointRealData})">
            <summary>
            检查是否断线
            </summary>
            <param name="realDatas">实时数据</param>
            <returns>是否有效</returns>
        </member>
        <member name="M:EFOS.Data.Info_AlarmConfigExtend.CheckAlarm(System.Int32,System.Collections.Generic.List{EFOS.Data.Master.Model.Apply_DataItem},System.Collections.Generic.List{EFOS.Redis.Model.PointRealData})">
            <summary>
            检测报警
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="dataItems">数据标识</param>
            <param name="realDatas">数据</param>
            <param name="conf">报警配置</param>
            <returns>报警信息</returns>
        </member>
        <member name="M:EFOS.Data.Info_AlarmConfigExtend.CheckEvent(System.Int32,System.Collections.Generic.List{EFOS.Redis.Model.PointRealData})">
            <summary>
            事件监测
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="realDatas">数据</param>
            <returns>报警信息</returns>
        </member>
        <member name="P:EFOS.Data.Info_AlarmConfigExtend.DataKeys">
            <summary>
            加载数据的DataKey
            </summary>
        </member>
        <member name="P:EFOS.Data.Info_AlarmConfigExtend.ExpressionDataKeys">
            <summary>
            计算公式数据Key
            </summary>
        </member>
        <member name="P:EFOS.Data.Info_AlarmConfigExtend.NewExpression">
            <summary>
            新的计算公式
            </summary>
        </member>
        <member name="T:EFOS.Redis.Info_DataMappingExtend">
            <summary>
            数据映射扩展
            </summary>
        </member>
        <member name="M:EFOS.Redis.Info_DataMappingExtend.#ctor(EFOS.Data.Apply.Model.Info_DataMapping)">
            <summary>
            数据映射扩展
            </summary>
            <param name="mapping"></param>
        </member>
        <member name="P:EFOS.Redis.Info_DataMappingExtend.NewExpression">
            <summary>
            新的表达式
            </summary>
        </member>
        <member name="P:EFOS.Redis.Info_DataMappingExtend.DataKeys">
            <summary>
            DataKeys
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.RedisUserAttendance">
            <summary>
            人脸识别打卡信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.RedisUserAttendance.ClientCode">
            <summary>
            人脸识别客户端编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.RedisUserAttendance.PicUrl">
            <summary>
            照片模版地址
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.RedisUserAttendance.SoundUrl">
            <summary>
            音频地址
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.RedisUserAttendance.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.RedisUserAttendance.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.RedisUserAttendance.Department">
            <summary>
            用户部门
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.RedisUserAttendance.Greetings">
            <summary>
            问候语
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.RedisUserAttendance.AttendanceDateTime">
            <summary>
            打卡时间
            </summary>
        </member>
        <member name="T:EFOS.Redis.EFOS_HisData">
            <summary>
            历史数据
            </summary>
        </member>
        <member name="P:EFOS.Redis.EFOS_HisData.PointCode">
            <summary>
            计算点编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.EFOS_HisData.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.EFOS_HisData.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Redis.EFOS_HisData.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Redis.EFOS_HisData.CollectData">
            <summary>
            采集值
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.MeterType">
            <summary>
            仪表或数据站类型
            </summary>
        </member>
        <member name="F:EFOS.Redis.Model.MeterType.Meter">
            <summary>
            仪表
            </summary>
        </member>
        <member name="F:EFOS.Redis.Model.MeterType.DataStack">
            <summary>
            数据站
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.MeterRealData">
            <summary>
            仪表或数据栈实时数据
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.MeterRealData.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.MeterRealData.MeterType">
            <summary>
            仪表或数据站
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.MeterRealData.MeterID">
            <summary>
            仪表编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.MeterRealData.DataID">
            <summary>
            数据栈的数据标识,新版本数据栈对应DataID
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.MeterRealData.DataCode">
            <summary>
            数据栈的数据标识,老版本数据栈对应DataCode
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.MeterRealData.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.MeterRealData.CollectData">
            <summary>
            采集值
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.PhoneValid">
            <summary>
            手机号用户验证信息--发送手机短信验证码时缓存，验证完成后清除
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PhoneValid.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PhoneValid.ValidCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PhoneValid.DateTime">
            <summary>
            验证时间
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.PointInfo">
            <summary>
            计算点信息
            </summary>
        </member>
        <member name="M:EFOS.Redis.Model.PointInfo.#ctor">
            <summary>
            缓存数据点
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointInfo.DeviceType">
            <summary>
            设备类型编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointInfo.PointCode">
            <summary>
            计算点编号或设备编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointInfo.PointName">
            <summary>
            计算点名称或设备名称
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.PointRealData">
            <summary>
            缓存数据点
            </summary>
        </member>
        <member name="M:EFOS.Redis.Model.PointRealData.#ctor">
            <summary>
            缓存数据点
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.PointCode">
            <summary>
            设备编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.CollectData">
            <summary>
            采集值
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.DifFee">
            <summary>
            能耗费用--计算年月日能耗任务(Apply任务)时计算并赋值暂存入redis->Master中任务，将redis中项目总量计算点(暂时只保存项目总量的)费用值保存至项目总量能耗费用历史库([EFOS.Master].dbo.[Apply_ProjectEnergyData])
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.DifData">
            <summary>
            能耗--同DifFee
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.IsDataEntry">
            <summary>
            是否是录入数据,录入的数据保持不过期状态
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.MeterData">
            <summary>
            对应的仪表数据
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.MeterID">
            <summary>
            数据来源仪表
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.Expression">
            <summary>
            计算公式
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.PointRealData.IsCompute">
            <summary>
            是否是计算数据
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.ResultRealData">
            <summary>
            返回的实时数据
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.PointCode">
            <summary>
            计算点或设备编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.DataCode">
            <summary>
            数据标识
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.CollectTime">
            <summary>
            采集时间
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.CollectData">
            <summary>
            采集值
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.DataKey">
            <summary>
            唯一数据标识Key
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.PointName">
            <summary>
            仪表名称
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.DataName">
            <summary>
            数据标识名称
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.IsOutRange">
            <summary>
            是否越限,统一上下限配置
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.IsAlarmInfo">
            <summary>
            是否报警
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.IsCompute">
            <summary>
            是否是计算数据
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.RoundCount">
            <summary>
            小数精确位数
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.IsDataEntry">
            <summary>
            是否是录入数据,录入的数据保持不过期状态
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.IsStopDisplayParam">
            <summary>
            停止时是否显示参数
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.ResultRealData.Remarks">
            <summary>
            KeyValue键值对描述
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.SqlDataOnChange">
            <summary>
            数据变化的数据库表名称
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.SqlDataOnChange.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.SqlDataOnChange.TableName">
            <summary>
            数据变化的数据库表名称
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.SSOUser">
            <summary>
            SSO单点登录用户
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.SSOUser.TokenValue">
            <summary>
            获取或设置当前的Token值
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.SSOUser.TicketValue">
            <summary>
            获取或设置当前分配的票据
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.SSOUser.LoginIp">
            <summary>
            客户端登录的IP地址
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.SSOUser.RegisterSites">
            <summary>
            单点登录分站对于主站为域时（同域时退出登录不必另外记录并退出时清空各分站）拥有凭证的分站地址(单点退出用来清空分站session(程序池多工作进程或者多服务器负载均衡，session采用Inproc模式时，无法清除干净session，此时需要清空客户端cookie[sessionid])、cookie[sessionid])
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.StatisticInfo">
            <summary>
            统计信息
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.PlatformCode">
            <summary>
            平台编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.BlocCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.DeviceTotal">
            <summary>
            设备总数
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.DeviceImportant">
            <summary>
            重点设备
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.DeviceAlarm">
            <summary>
            告警设备
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.DeviceRun">
            <summary>
            运行设备
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.DeviceStop">
            <summary>
            停止设备
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.MonthElectricity">
            <summary>
            月用电量统计
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.DayElectricity">
            <summary>
            日用电量统计
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.Power">
            <summary>
            实时功率统计
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.AlarmCount">
            <summary>
            报警个数
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.StatisticInfo.AlarmInfo">
            <summary>
            当前项目的报警信息
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.Data_AlarmInfoExtend">
            <summary>
            报警扩展
            </summary>
        </member>
        <member name="M:EFOS.Redis.Model.Data_AlarmInfoExtend.#ctor(System.Int32,System.String,System.String,EFOS.Data.Apply.Model.Data_AlarmInfo)">
            <summary>
            报警扩展
            </summary>
            <param name="projectCode">项目编号</param>
            <param name="projectName">项目名称</param>
            <param name="deviceName">设备编号</param>
            <param name="alarmInfo">报警信息</param>
        </member>
        <member name="M:EFOS.Redis.Model.Data_AlarmInfoExtend.#ctor">
            <summary>
            报警扩展
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.Data_AlarmInfoExtend.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.Data_AlarmInfoExtend.ProjectName">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.Data_AlarmInfoExtend.DeviceName">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="T:EFOS.Redis.Model.SynchronizationModel">
            <summary>
            项目数据同步
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.SynchronizationModel.ProjectCode">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="T:EFOS.Tools.CalPointFormula">
            <summary>
            计算点公式解析
            </summary>
        </member>
        <member name="M:EFOS.Tools.CalPointFormula.GetDataKey(System.String)">
            <summary>
            获取当前公式中的DataKey
            </summary>
            <param name="expression">计算公式</param>
            <returns>DataKey</returns>
        </member>
        <member name="M:EFOS.Tools.CalPointFormula.GetExpression(System.String)">
            <summary>
            获取新的expression
            </summary>
            <param name="expression">公式</param>
            <returns>新的计算公式</returns>
        </member>
        <member name="M:EFOS.Tools.CalPointFormula.IsValid(System.String,System.Boolean)">
            <summary>
            检测表达式是否通过
            </summary>
            <param name="expression">计算公式</param>
            <param name="isNumber">返回值为number类型或bool类型</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.CalPointFormula.CallRealData(System.String,System.Collections.Generic.List{System.String},System.Boolean,System.Collections.Generic.List{EFOS.Redis.Model.PointRealData},System.DateTime@)">
            <summary>
            动态计算表达式(数据)
            </summary>
            <param name="expression">表达式</param>
            <param name="dataKeys">数据key</param>
            <param name="useDefault">如果找不到数据用默认数据0</param>
            <param name="realDatas">在此实时数据里筛选</param>
            <param name="datetime">得到最晚的采集时间</param>
            <returns>计算结果</returns>
        </member>
        <member name="M:EFOS.Tools.CalPointFormula.CallAlarm(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{EFOS.Redis.Model.PointRealData})">
            <summary>
            动态计算表达式(报警)
            </summary>
            <param name="expression">表达式</param>
            <param name="dataKeys">数据key</param>
            <param name="useDefault">如果找不到数据用默认数据0</param>
            <param name="realDatas">在此实时数据里筛选</param>
            <param name="datetime">得到最晚的采集时间</param>
            <returns>计算结果</returns>
        </member>
        <member name="T:EFOS.Security.DES">
            <summary>
            对称加密算法
            </summary>
        </member>
        <member name="F:EFOS.Security.DES.DESKEY">
            <summary>
            加密默认Key
            </summary>
        </member>
        <member name="F:EFOS.Security.DES.IV">
            <summary>
            加密IV向量
            </summary>
        </member>
        <member name="M:EFOS.Security.DES.Encrypt(System.String,System.String)">
            <summary>
            加密
            </summary>
            <param name="Key">加密Key</param>
            <param name="str">加密字符</param>
            <returns>加密后的字符</returns>
        </member>
        <member name="M:EFOS.Security.DES.Decrypt(System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="Key">解密Key</param>
            <param name="str">解密字符</param>
            <returns>解密后的字符</returns>
        </member>
        <member name="M:EFOS.Security.DES.EncryptPassportKey(System.String)">
            <summary>
            加密passportKey
            </summary>
            <param name="token">token</param>
            <returns>加密后的passportKey</returns>
        </member>
        <member name="M:EFOS.Security.DES.DecryptPassportKey(System.String,System.Int32)">
            <summary>
            解密passportKey
            </summary>
            <param name="encryptPassportKey">encryptPassportKey</param>
            <param name="invalidSecond">失效时间，秒</param>
            <returns>解密后的passportKey</returns>
        </member>
        <member name="T:EFOS.Security.MD5">
            <summary>
            文本加密和解密
            </summary>
        </member>
        <member name="M:EFOS.Security.MD5.EncryptByMD5(System.String)">
            <summary>
            采用MD5加密方式
            </summary>
            <param name="PasswordString">密码</param>
            <returns>加密后的值</returns>
        </member>
        <member name="M:EFOS.Security.MD5.EncryptBySHA1(System.String)">
            <summary>
            采用SHA1加密方式
            </summary>
            <param name="PasswordString">密码</param>
            <returns>加密后的值</returns>
        </member>
        <member name="T:EFOS.Support.BaseException">
            <summary>
            基类异常
            </summary>
        </member>
        <member name="M:EFOS.Support.BaseException.#ctor(System.String,EFOS.Support.ExceptionType)">
            <summary>
            构造异常
            </summary>
            <param name="message">异常信息</param>
            <param name="Type">异常类型</param>
        </member>
        <member name="M:EFOS.Support.BaseException.#ctor(System.Exception)">
            <summary>
            构造异常
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:EFOS.Support.BaseException.#ctor(System.Exception,EFOS.Support.ExceptionType)">
            <summary>
            构造异常
            </summary>
            <param name="e"></param>
            <param name="type">类型</param>
        </member>
        <member name="P:EFOS.Support.BaseException.Type">
            <summary>
            错误类型
            </summary>
        </member>
        <member name="T:EFOS.Support.ClassNotFoundException">
            <summary>
            类未找到
            </summary>
        </member>
        <member name="M:EFOS.Support.ClassNotFoundException.#ctor(System.String)">
            <summary>
            类未找到
            </summary>
            <param name="message">异常信息message</param>
        </member>
        <member name="M:EFOS.Support.ClassNotFoundException.#ctor(System.Exception)">
             <summary>
            类未找到
             </summary>
             <param name="e">异常信息e</param>
        </member>
        <member name="T:EFOS.Tools.DataConvertHelper">
            <summary>
            数据转换
            </summary>
        </member>
        <member name="M:EFOS.Tools.DataConvertHelper.SerializeJson(System.Data.DataTable)">
            <summary>
            将DataTable转化为Json数据
            </summary>
            <param name="dt">DataTable</param>
            <returns>Json数据</returns>
        </member>
        <member name="M:EFOS.Tools.DataConvertHelper.ConvertToXlsFromHtml(System.String)">
            <summary>
            把html转为Xls文件
            </summary>
        </member>
        <member name="M:EFOS.Tools.DataConvertHelper.SerializeXls(System.Object,System.Collections.Generic.List{EFOS.Tools.ExcelHead})">
            <summary>
            将DataTable转化为xls数据
            </summary>
            <param name="grid">DataTable</param>
            <param name="headList">列头信息</param>
            <returns>Json数据</returns>
        </member>
        <member name="M:EFOS.Tools.DataConvertHelper.ToDataTable(System.Collections.IList)">
            <summary>    
            将集合类转换成DataTable    
            </summary>    
            <param name="list">集合</param>    
            <returns></returns>    
        </member>
        <member name="M:EFOS.Tools.DataConvertHelper.SerializeXls(System.Collections.IList,System.Collections.Generic.List{EFOS.Tools.ExcelHead})">
            <summary>
            将DataTable转化为xls数据
            </summary>
            <param name="iList">数据</param>
            <param name="headList">列头信息</param>
            <returns>Json数据</returns>
        </member>
        <member name="M:EFOS.Tools.DataConvertHelper.PivotConvert(System.Collections.Generic.List{System.Object},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            将List列表行转列成DataTable
            </summary>
            <param name="models">数据</param>
            <param name="PivotColumn">行转列数据项</param>
            <param name="PivotOrderColumn">行转列排序依据</param>
            <param name="PivotKeyColumn">行转列Key</param>
            <param name="DataColumn">第一列数据项</param>
            <param name="DataKeyColumn">第一列数据Kay</param>
            <param name="DataOrderColumn">数据项排序依据</param>
            <param name="DataColumnText">第一列文本</param>
            <param name="ValueColumn">值数据项</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Tools.DataConvertHelper.PivotConvert(System.Data.DataTable,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            将DataTable列表行转列成DataTable
            </summary>
            <param name="table">数据</param>
            <param name="PivotColumn">行转列数据项</param>
            <param name="PivotOrderColumn">排序数据项</param>
            <param name="PivotKeyColumn">行转列Key</param>
            <param name="DataColumn">第一列数据项</param>
            <param name="DataKeyColumn">第一列数据Kay</param>
            <param name="DataOrderColumn">排序</param>
            <param name="DataColumnText">第一列文本</param>
            <param name="ValueColumn">值数据项</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Tools.DataConvertHelper.ConvertTable(System.Data.DataTable,System.String,System.String)">
            <summary>
            行列置换函数
            </summary>
            <param name="source">源表</param>
            <param name="targetColumn">要转为列的字段名称</param>
            <param name="itemColumnName">转换后列的名称</param>
            <returns></returns>
        </member>
        <member name="T:EFOS.Tools.ExcelApplication">
            <summary>
            Excel应用程序操作
            </summary>
        </member>
        <member name="T:EFOS.Tools.ExcelHead">
            <summary>
            导出Excel文件的列头信息
            </summary>
        </member>
        <member name="P:EFOS.Tools.ExcelHead.ColumnName">
            <summary>
            列名称，对应DataTable的ColumnName
            </summary>
        </member>
        <member name="P:EFOS.Tools.ExcelHead.ColumnText">
            <summary>
            列的文本信息
            </summary>
        </member>
        <member name="T:EFOS.Tools.ExcelHelper">
            <summary>
            Excel操作
            </summary>
        </member>
        <member name="M:EFOS.Tools.ExcelHelper.LoadData(System.String)">
            <summary>
            读取Excel返回DataSet数据
            </summary>
            <param name="filePath">Excel路径</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Tools.ExcelHelper.WriteData(System.String,System.Data.DataSet)">
            <summary>
            将DataSet写入Excel
            </summary>
            <param name="filePath">Excel路径</param>
            <param name="ds">数据</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:EFOS.Support.ExceptionType">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="F:EFOS.Support.ExceptionType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:EFOS.Support.ExceptionType.SessionEndException">
            <summary>
            Session失效异常
            </summary>
        </member>
        <member name="F:EFOS.Support.ExceptionType.ClassNotFoundException">
            <summary>
            类未找到
            </summary>
        </member>
        <member name="F:EFOS.Support.ExceptionType.MethodNotFoundException">
            <summary>
            方法未找到
            </summary>
        </member>
        <member name="F:EFOS.Support.ExceptionType.InvokerException">
            <summary>
            反射调用程序异常
            </summary>
        </member>
        <member name="F:EFOS.Support.ExceptionType.ValidException">
            <summary>
            用户自定义异常
            </summary>
        </member>
        <member name="T:EFOS.Support.IgnoreExceptionAttribute">
            <summary>
            忽略错误
            </summary>
        </member>
        <member name="T:EFOS.Support.InvokerException">
            <summary>
            反射调用失败
            </summary>
        </member>
        <member name="M:EFOS.Support.InvokerException.#ctor(System.String)">
            <summary>
            反射调用失败
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:EFOS.Support.InvokerException.#ctor(System.Exception)">
             <summary>
            反射调用失败
             </summary>
             <param name="e">异常信息e</param>
        </member>
        <member name="T:EFOS.Support.MethodNotFoundException">
            <summary>
            方法未找到
            </summary>
        </member>
        <member name="M:EFOS.Support.MethodNotFoundException.#ctor(System.String)">
            <summary>
            方法未找到
            </summary>
        </member>
        <member name="M:EFOS.Support.MethodNotFoundException.#ctor(System.Exception)">
            <summary>
            方法未找到
            </summary>
            <param name="e">异常信息e</param>
        </member>
        <member name="T:EFOS.Tools.ExcelHelperByEpplus">
            <summary>
            Excel操作帮助类
            通过Epplus组件实现
            </summary>
        </member>
        <member name="M:EFOS.Tools.ExcelHelperByEpplus.ExportExcel(System.Data.DataSet,System.String,System.Boolean)">
            <summary>
            通过epplus组件导出excel_2007
            sheetName请赋值在TableName中
            支持多表格生成
            默认有框线
            </summary>
            <param name="dataset">数据源</param>
            <param name="SavePathName">导出保存的文件名字路径</param>
            <param name="hasHeader">table列名转换为表头</param>
            <returns>生成的excel文件存放在服务器上的路径</returns>
        </member>
        <member name="M:EFOS.Tools.ExcelHelperByEpplus.ImportExcel(System.String)">
            <summary>
            通过epplus组件导入excel_2007数据
            DataSetName为文件名
            TableName=sheetName
            支持多sheet格导入数据
            </summary>
            <param name="path">文件路径</param>
            <returns>数据源</returns>
        </member>
        <member name="T:EFOS.Tools.FTPHelper">
            <summary>
            ftp辅助类
            </summary>
        </member>
        <member name="F:EFOS.Tools.FTPHelper.request">
            <summary>  
            FTP请求对象  
            </summary>  
        </member>
        <member name="F:EFOS.Tools.FTPHelper.response">
            <summary>  
            FTP响应对象  
            </summary>  
        </member>
        <member name="M:EFOS.Tools.FTPHelper.#ctor(System.String,System.String,System.String,System.String)">
            <summary>    
            初始化  
            </summary>    
            <param name="ftpServerIP">FTP连接地址</param>    
            <param name="ftpRemotePath">指定FTP连接成功后的当前目录, 如果不指定即默认为根目录</param>    
            <param name="ftpUserID">用户名</param>    
            <param name="ftpPassword">密码</param>    
        </member>
        <member name="M:EFOS.Tools.FTPHelper.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:EFOS.Tools.FTPHelper.Open(System.Uri,System.String)">
            <summary>  
            建立FTP链接,返回响应对象  
            </summary>  
            <param name="uri">FTP地址</param>  
            <param name="ftpMethod">操作命令</param>  
            <returns></returns>  
        </member>
        <member name="M:EFOS.Tools.FTPHelper.OpenRequest(System.Uri,System.String)">
            <summary>         
            建立FTP链接,返回请求对象         
            </summary>        
            <param name="uri">FTP地址</param>         
            <param name="ftpMethod">操作命令</param>         
        </member>
        <member name="M:EFOS.Tools.FTPHelper.CreateDirectory(System.String)">
            <summary>  
            创建目录  
            </summary>  
            <param name="remoteDirectoryName">目录名</param>  
        </member>
        <member name="M:EFOS.Tools.FTPHelper.ReName(System.String,System.String)">
            <summary>  
            更改目录或文件名  
            </summary>  
            <param name="currentName">当前名称</param>  
            <param name="newName">修改后新名称</param>  
        </member>
        <member name="M:EFOS.Tools.FTPHelper.GotoDirectory(System.String,System.Boolean)">
            <summary>    
            切换当前目录    
            </summary> 
            <param name="DirectoryName">路径</param> 
            <param name="IsRoot">true:绝对路径 false:相对路径</param>     
        </member>
        <member name="M:EFOS.Tools.FTPHelper.RemoveDirectory(System.String)">
            <summary>  
            删除目录(包括下面所有子目录和子文件)  
            </summary>  
            <param name="remoteDirectoryName">要删除的带路径目录名：如web/test</param>  
        </member>
        <member name="M:EFOS.Tools.FTPHelper.Upload(System.String)">
            <summary>  
            文件上传  
            </summary>  
            <param name="localFilePath">本地文件路径</param>  
        </member>
        <member name="M:EFOS.Tools.FTPHelper.DeleteFile(System.String)">
            <summary>    
            删除文件    
            </summary>    
            <param name="remoteFileName">要删除的文件名</param>  
        </member>
        <member name="M:EFOS.Tools.FTPHelper.ListFilesAndDirectories">
            <summary>  
            获取当前目录的文件和一级子目录信息  
            </summary>  
            <returns></returns>  
        </member>
        <member name="M:EFOS.Tools.FTPHelper.ListFiles">
            <summary>         
            列出当前目录的所有文件         
            </summary>         
        </member>
        <member name="M:EFOS.Tools.FTPHelper.ListDirectories">
            <summary>         
            列出当前目录的所有一级子目录         
            </summary>         
        </member>
        <member name="M:EFOS.Tools.FTPHelper.IsExist(System.String)">
            <summary>         
            判断当前目录下指定的子目录或文件是否存在         
            </summary>         
            <param name="remoteName">指定的目录或文件名</param>        
        </member>
        <member name="M:EFOS.Tools.FTPHelper.IsDirectoryExist(System.String)">
            <summary>         
            判断当前目录下指定的一级子目录是否存在         
            </summary>         
            <param name="remoteDirectoryName">指定的目录名</param>        
        </member>
        <member name="M:EFOS.Tools.FTPHelper.IsFileExist(System.String)">
            <summary>         
            判断当前目录下指定的子文件是否存在        
            </summary>         
            <param name="remoteFileName">远程文件名</param>         
        </member>
        <member name="M:EFOS.Tools.FTPHelper.Download(System.String,System.String)">
            <summary>  
            下载  
            </summary>  
            <param name="saveFilePath">下载后的保存路径</param>  
            <param name="downloadFileName">要下载的文件名</param>  
        </member>
        <member name="P:EFOS.Tools.FTPHelper.ftpURI">
            <summary>  
            FTP服务器地址  
            </summary>  
        </member>
        <member name="P:EFOS.Tools.FTPHelper.ftpServerIP">
            <summary>  
            FTP服务器IP  
            </summary>  
        </member>
        <member name="P:EFOS.Tools.FTPHelper.ftpRemotePath">
            <summary>  
            FTP服务器默认目录  
            </summary>  
        </member>
        <member name="P:EFOS.Tools.FTPHelper.ftpUserID">
            <summary>  
            FTP服务器登录用户名  
            </summary>  
        </member>
        <member name="P:EFOS.Tools.FTPHelper.ftpPassword">
            <summary>  
            FTP服务器登录密码  
            </summary>  
        </member>
        <member name="T:EFOS.Tools.FileStruct">
            <summary>
            文件信息结构
            </summary>
        </member>
        <member name="P:EFOS.Tools.FileStruct.IsDirectory">
            <summary>  
            是否为目录  
            </summary>  
        </member>
        <member name="P:EFOS.Tools.FileStruct.CreateTime">
            <summary>  
            创建时间  
            </summary>  
        </member>
        <member name="P:EFOS.Tools.FileStruct.Name">
            <summary>  
            文件或目录名称  
            </summary>  
        </member>
        <member name="P:EFOS.Tools.FileStruct.Path">
            <summary>  
            路径  
            </summary>  
        </member>
        <member name="T:EFOS.Tools.JPushModel">
            <summary>
            极光推送对象
            </summary>
        </member>
        <member name="P:EFOS.Tools.JPushModel.Targets">
            <summary>
            推送标注
            </summary>
        </member>
        <member name="P:EFOS.Tools.JPushModel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:EFOS.Tools.JPushModel.Content">
            <summary>
            推送内容
            </summary>
        </member>
        <member name="P:EFOS.Tools.JPushModel.Extras">
            <summary>
            属性
            </summary>
        </member>
        <member name="P:EFOS.Tools.JPushModel.JPushType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="T:EFOS.Tools.JPushType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="F:EFOS.Tools.JPushType.Alarm">
            <summary>
            报警信息
            </summary>
        </member>
        <member name="F:EFOS.Tools.JPushType.DataStackBreak">
            <summary>
            数据栈断线
            </summary>
        </member>
        <member name="T:EFOS.Tools.JPushUtil">
            <summary>
            极光推送
            </summary>
        </member>
        <member name="T:EFOS.Tools.PivotConverData">
            <summary>
            数据行转列
            </summary>
        </member>
        <member name="M:EFOS.Tools.PivotConverData.#ctor">
            <summary>
            数据行转列
            </summary>
        </member>
        <member name="M:EFOS.Tools.PivotConverData.GetPropertyValue(System.Object,System.String)">
            <summary>
            获取属性值
            </summary>
        </member>
        <member name="M:EFOS.Tools.PivotConverData.PivotConvert(System.Collections.Generic.List{System.Object},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            将List列表行转列成DataTable
            </summary>
            <param name="models">数据</param>
            <param name="PivotColumn">行转列数据项</param>
            <param name="PivotOrderColumn">行转列排序依据</param>
            <param name="PivotKeyColumn">行转列Key</param>
            <param name="DataColumn">第一列数据项</param>
            <param name="DataKeyColumn">第一列数据Kay</param>
            <param name="DataOrderColumn">数据项排序依据</param>
            <param name="DataColumnText">第一列文本</param>
            <param name="ValueColumn">值数据项</param>
            <returns>数据</returns>
        </member>
        <member name="M:EFOS.Tools.PivotConverData.PivotConvert(System.Data.DataTable,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            将List列表行转列成DataTable
            </summary>
            <param name="table">数据</param>
            <param name="PivotColumn">行转列数据项</param>
            <param name="PivotOrderColumn">行转列排序依据</param>
            <param name="PivotKeyColumn">行转列Key</param>
            <param name="DataColumn">第一列数据项</param>
            <param name="DataKeyColumn">第一列数据Kay</param>
            <param name="DataOrderColumn">数据项排序依据</param>
            <param name="DataColumnText">第一列文本</param>
            <param name="ValueColumn">值数据项</param>
            <returns>数据</returns>
        </member>
        <member name="T:EFOS.Support.SessionEndException">
            <summary>
            Session失效
            </summary>
        </member>
        <member name="M:EFOS.Support.SessionEndException.#ctor(System.String)">
            <summary>
            Session失效
            </summary>
        </member>
        <member name="M:EFOS.Support.SessionEndException.#ctor(System.Exception)">
             <summary>
            Session失效
             </summary>
             <param name="e">异常信息e</param>
        </member>
        <member name="T:EFOS.Support.ValidException">
            <summary>
            程序执行时人为抛出异常
            </summary>
        </member>
        <member name="M:EFOS.Support.ValidException.#ctor(System.String)">
             <summary>
            程序执行时人为抛出异常
             </summary>
        </member>
        <member name="M:EFOS.Support.ValidException.#ctor(System.Exception)">
             <summary>
            程序执行时人为抛出异常
             </summary>
             <param name="e">异常信息e</param>
        </member>
        <member name="T:EFOS.Tools.RongCloudUtil">
            <summary>
            融云聊天服务用户及群组注册
            </summary>
        </member>
        <member name="M:EFOS.Tools.RongCloudUtil.getToken(System.String,System.String,System.String)">
            <summary>
            获取 Token 方法--新增用户时、编辑用户并且用户RongCloudToken为空时
            </summary>
            <param name="userId"></param>
            <param name="name"></param>
            <param name="portraitUri"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.RongCloudUtil.refreshUser(System.String,System.String,System.String)">
            <summary>
            刷新用户信息方法--编辑用户
            </summary>
            <param name="userId"></param>
            <param name="name"></param>
            <param name="portraitUri"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.RongCloudUtil.createGroup(System.String[],System.String,System.String)">
            <summary>
            创建群组方法--创建项目时
            </summary>
            <param name="groupcreateUserId"></param>
            <param name="groupId"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.RongCloudUtil.dismissGroup(System.String,System.String)">
            <summary>
            解散群组方法--删除项目时
            </summary>
            <param name="userId"></param>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.RongCloudUtil.refreshGroup(System.String,System.String)">
            <summary>
            刷新群组信息方法--编辑项目时
            </summary>
            <param name="groupId"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.RongCloudUtil.groupQuit(System.String[],System.String)">
            <summary>
            退出群组方法--删除用户时(可用可不用，用户删除时，用户不存在，群组中仍保留这个不存在的用户，这个用户也不会收到群消息，更不会向群组发消息)，编辑用户项目权限时(可以不使用该方法，可以通过同步用户所属群组方法代替，也可以使用)
            </summary>
            <param name="groupquitUserId"></param>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.RongCloudUtil.groupJoin(System.String[],System.String,System.String)">
            <summary>
            将用户加入指定群组--新增用户时（可以通过同步用户所属群组方法代替）、新增项目调用的是创建群组方法
            </summary>
            <param name="groupjoinUserId"></param>
            <param name="groupId"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.RongCloudUtil.groupSync(System.String,donet.io.rong.models.GroupInfo[])">
            <summary>
            同步用户所属群组方法(群组不存在则新建群组)--1、新增用户或更改用户类型时或编辑用户项目权限时（项目用户），即用户项目权限发生变化时 2、编辑项目集团时(项目平台不可编辑,但是切换平台会改变项目平台，暂未考虑)，对多个用户与一个项目组进行同步，先删除当前项目群组所有人，再获取拥有该项目权限的所有用户，最后将这些用户加入至此项目群组
            </summary>
            <param name="userId"></param>
            <param name="groupsyncGroupInfo">new GroupInfo("groupId1","groupName1" )</param>
            <returns></returns>
        </member>
        <member name="T:EFOS.Tools.WebapiHttpRequest">
            <summary>
            webapi请求
            </summary>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest.GetFileByteArrayContent(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取文件集合对应的ByteArrayContent集合
            </summary>
            <param name="files">要上传的文件</param>
            <returns>提供基于字节数组的 HTTP 内容</returns>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest.GetFormDataByteArrayContent(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取键值集合对应的ByteArrayContent集合
            </summary>
            <param name="parameters">form参数</param>
            <returns>提供基于字节数组的 HTTP 内容</returns>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest.CreateHttpPostResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            http post请求
            </summary>
            <param name="url">请求路径</param>
            <param name="parameters">form参数</param>
            <param name="files">form文件</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest.Load``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            加载远程数据或控制远程方法
            </summary>
             <param name="url">请求路径</param>
            <param name="parameters">form参数</param>
            <param name="files">form文件</param>  
        </member>
        <member name="T:EFOS.Tools.JsonData">
            <summary>
            解析数据
            </summary>
        </member>
        <member name="T:EFOS.Tools.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:EFOS.Tools.Error.message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:EFOS.Tools.Error.type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:EFOS.Tools.Error.success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:EFOS.Tools.WebapiHttpRequest0">
            <summary>
            webapi请求
            </summary>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest0.GetFileByteArrayContent(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取文件集合对应的ByteArrayContent集合
            </summary>
            <param name="files">要上传的文件</param>
            <returns>提供基于字节数组的 HTTP 内容</returns>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest0.GetFormDataByteArrayContent(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取键值集合对应的ByteArrayContent集合
            </summary>
            <param name="parameters">form参数</param>
            <returns>提供基于字节数组的 HTTP 内容</returns>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest0.CreateHttpGetResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            模拟http get请求
            </summary>
            <param name="url"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest0.CreateHttpPostResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            http post请求
            </summary>
            <param name="url">请求路径</param>
            <param name="parameters">form参数</param>
            <param name="files">form文件</param>
            <returns></returns>
        </member>
        <member name="M:EFOS.Tools.WebapiHttpRequest0.Load``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            加载远程数据或控制远程方法
            </summary>
             <param name="url">请求路径</param>
            <param name="parameters">form参数</param>
            <param name="files">form文件</param>  
        </member>
        <member name="T:EFOS.Redis.Model.WelcomeVip">
            <summary>
            Vip人脸识别打卡
            </summary>
        </member>
        <member name="P:EFOS.Redis.Model.WelcomeVip.AccessTime">
            <summary>
            访问时间
            </summary>
        </member>
    </members>
</doc>
